{
	"id": 0,
	"name": "@thirdweb-dev/react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 505,
			"name": "ISecureStorage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 506,
					"name": "getItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 507,
							"name": "getItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 508,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 513,
					"name": "removeItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 514,
							"name": "removeItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 515,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 509,
					"name": "setItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 510,
							"name": "setItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 511,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 512,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						506,
						513,
						509
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
					"line": 2,
					"character": 17
				}
			]
		},
		{
			"id": 189,
			"name": "MediaRendererProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {
				"isPublic": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "MediaRenderer",
						"target": 303
					},
					{
						"kind": "text",
						"text": " component."
					}
				]
			},
			"children": [
				{
					"id": 191,
					"name": "alt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The alt text for the media."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 35,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 200,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.children"
					}
				},
				{
					"id": 196,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 4,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L4"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.className"
					}
				},
				{
					"id": 199,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable) (default false)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.controls"
					}
				},
				{
					"id": 193,
					"name": "gatewayUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IPFS gateway URL to use"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 195,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.height"
					}
				},
				{
					"id": 201,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.mimeType"
					}
				},
				{
					"id": 192,
					"name": "poster",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The media poster image uri. (if applicable)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 39,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L39"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 198,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media. (default false)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.requireInteraction"
					}
				},
				{
					"id": 190,
					"name": "src",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The media source uri."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 197,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 5,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L5"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.style"
					}
				},
				{
					"id": 194,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						191,
						200,
						196,
						199,
						193,
						195,
						201,
						192,
						198,
						190,
						197,
						194
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/types.ts",
					"line": 27,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L27"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "src/evm/components/types.ts",
						"qualifiedName": "SharedMediaProps"
					},
					"name": "SharedMediaProps",
					"package": "@thirdweb-dev/react"
				}
			]
		},
		{
			"id": 306,
			"name": "MediaType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 308,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 500,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L500"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 307,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 499,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L499"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						308,
						307
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 498,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L498"
				}
			]
		},
		{
			"id": 501,
			"name": "ThirdwebAuthConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The configuration to use the react SDK with an [auth](https://portal.thirdweb.com/auth) server."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"children": [
				{
					"id": 502,
					"name": "authUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The backend URL of the authentication endoints. For example, if your endpoints are\nat "
							},
							{
								"kind": "code",
								"text": "`/api/auth/login`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`/api/auth/logout`"
							},
							{
								"kind": "text",
								"text": ", etc. then this should be set to "
							},
							{
								"kind": "code",
								"text": "`/api/auth`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 503,
					"name": "domain",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The frontend domain used to generate the login payload.\nThis domain should match the domain used on your auth backend."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 504,
					"name": "secureStorage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Secure storage to use for storing the auth token when using JWT tokens.\n\nDo not use a storage option that stores values accessible outside\nyour application (like localStorage on web environments) since you may\nbe exposing your auth token to malicious actors.\n\n** By default auth uses cookies so no need to set this unless you want to specifically use JWT tokens **"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 505,
						"name": "ISecureStorage",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						502,
						503,
						504
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
					"line": 12,
					"character": 17
				}
			]
		},
		{
			"id": 309,
			"name": "ThirdwebNftMediaProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "ThirdwebNftMedia",
						"target": 320,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " component."
					}
				]
			},
			"children": [
				{
					"id": 318,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.children"
					}
				},
				{
					"id": 314,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 4,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L4"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.className"
					}
				},
				{
					"id": 317,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable) (default false)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.controls"
					}
				},
				{
					"id": 313,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 15,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/NftMedia.tsx#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.height"
					}
				},
				{
					"id": 310,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFT metadata of the NFT returned by the thirdweb sdk."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 13,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/NftMedia.tsx#L13"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "objectOutputType"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 311,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/nft.d.ts",
											"line": 278,
											"character": 303
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodUnion"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodEffects"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodUnion"
														},
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodBigInt"
																		},
																		"name": "ZodBigInt",
																		"package": "zod"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																					"qualifiedName": "BigNumber"
																				},
																				"name": "BigNumber",
																				"package": "@ethersproject/bignumber"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																					"qualifiedName": "ZodTypeDef"
																				},
																				"name": "ZodTypeDef",
																				"package": "zod"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																					"qualifiedName": "BigNumber"
																				},
																				"name": "BigNumber",
																				"package": "@ethersproject/bignumber"
																			}
																		],
																		"name": "ZodType",
																		"package": "zod"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																					"qualifiedName": "BN"
																				},
																				"name": "BN",
																				"package": "@types/bn.js"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																					"qualifiedName": "ZodTypeDef"
																				},
																				"name": "ZodTypeDef",
																				"package": "zod"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																					"qualifiedName": "BN"
																				},
																				"name": "BN",
																				"package": "@types/bn.js"
																			}
																		],
																		"name": "ZodType",
																		"package": "zod"
																	}
																]
															}
														],
														"name": "ZodUnion",
														"package": "zod"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																	"qualifiedName": "BigNumber"
																},
																"name": "BigNumber",
																"package": "@ethersproject/bignumber"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														]
													}
												],
												"name": "ZodEffects",
												"package": "zod"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodUnknown"
												},
												"name": "ZodUnknown",
												"package": "zod"
											}
										]
									}
								],
								"name": "ZodUnion",
								"package": "zod"
							},
							{
								"type": "literal",
								"value": "strip"
							}
						],
						"name": "objectOutputType",
						"package": "zod"
					}
				},
				{
					"id": 319,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.mimeType"
					}
				},
				{
					"id": 316,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media. (default false)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.requireInteraction"
					}
				},
				{
					"id": 315,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 5,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/types.ts#L5"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.style"
					}
				},
				{
					"id": 312,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 14,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/NftMedia.tsx#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "SharedMediaProps.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						318,
						314,
						317,
						313,
						310,
						319,
						316,
						315,
						312
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/NftMedia.tsx",
					"line": 9,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/NftMedia.tsx#L9"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "src/evm/components/types.ts",
						"qualifiedName": "SharedMediaProps"
					},
					"name": "SharedMediaProps",
					"package": "@thirdweb-dev/react"
				}
			]
		},
		{
			"id": 335,
			"name": "ThirdwebProviderCoreProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible props for the ThirdwebProvider."
					}
				]
			},
			"children": [
				{
					"id": 346,
					"name": "activeChain",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The network to use for the SDK."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 347,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 348,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "chainId"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TChains",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "slug"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TChains",
										"refersToTypeParameter": true
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.activeChain"
					}
				},
				{
					"id": 353,
					"name": "authConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configuration used for thirdweb auth usage. Enables users to login\nto backends with their wallet."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 501,
						"name": "ThirdwebAuthConfig",
						"package": "@thirdweb-dev/react-core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.authConfig"
					}
				},
				{
					"id": 338,
					"name": "autoConnect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether or not to attempt auto-connect to a wallet."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 342,
					"name": "autoConnectTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Timeout for auto-connecting wallet in milliseconds\n\nIf wallet fails to connect in this time, it will stop trying to connect and user will have to manually connect"
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n15000\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 341,
					"name": "autoSwitch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether or not to automatically switch to wallet's network to active chain"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 344,
					"name": "clientId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.clientId"
					}
				},
				{
					"id": 340,
					"name": "createWalletStorage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../wallets/src/core/AsyncStorage.ts",
							"qualifiedName": "CreateAsyncStorage"
						},
						"name": "CreateAsyncStorage",
						"package": "@thirdweb-dev/wallets"
					}
				},
				{
					"id": 337,
					"name": "dAppMeta",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata to pass to wallet connect and walletlink wallet connect. (Used to show *which* dApp is being connected to in mobile wallets that support it)\nDefaults to just the name being passed as "
							},
							{
								"kind": "code",
								"text": "`thirdweb powered dApp`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../wallets/src/core/types/dAppMeta.ts",
							"qualifiedName": "DAppMetaData"
						},
						"name": "DAppMetaData",
						"package": "@thirdweb-dev/wallets"
					}
				},
				{
					"id": 354,
					"name": "queryClient",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/query-client.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/queryClient.ts",
							"qualifiedName": "QueryClient"
						},
						"name": "QueryClient",
						"package": "@tanstack/query-core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.queryClient"
					}
				},
				{
					"id": 350,
					"name": "sdkOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SDKOptions | Thirdweb SDK Options",
								"target": {
									"sourceFileName": "../sdk/src/evm/schema/sdk-options.ts",
									"qualifiedName": "SDKOptions"
								},
								"tsLinkText": "Thirdweb SDK Options"
							},
							{
								"kind": "text",
								"text": " to pass to the thirdweb SDK\ncomes with sensible defaults"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 351,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/schema/sdk-options.d.ts",
													"line": 169,
													"character": 3
												}
											]
										}
									}
								]
							},
							{
								"type": "literal",
								"value": "chains"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.sdkOptions"
					}
				},
				{
					"id": 345,
					"name": "secretKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.secretKey"
					}
				},
				{
					"id": 343,
					"name": "signerWallet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/signer.ts",
									"qualifiedName": "SignerWallet"
								},
								"name": "SignerWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 352,
					"name": "storageInterface",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The storage interface to use with the sdk."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../storage/src/types/index.ts",
							"qualifiedName": "IThirdwebStorage"
						},
						"name": "IThirdwebStorage",
						"package": "@thirdweb-dev/storage"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.storageInterface"
					}
				},
				{
					"id": 349,
					"name": "supportedChains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Chains to support. If not provided, will default to the chains supported by the SDK."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TChains",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.supportedChains"
					}
				},
				{
					"id": 336,
					"name": "supportedWallets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of wallets that the dApp supports\nIf not provided, will default to Metamask (injected), Coinbase wallet and Device wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can Import the wallets you want to support from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/wallets`"
									},
									{
										"kind": "text",
										"text": " and pass them to "
									},
									{
										"kind": "code",
										"text": "`supportedWallets`"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx title=\"App.jsx\"\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 423,
							"name": "WalletConfig",
							"package": "@thirdweb-dev/react-core"
						}
					}
				},
				{
					"id": 339,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "dark"
							},
							{
								"type": "literal",
								"value": "light"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						346,
						353,
						338,
						342,
						341,
						344,
						340,
						337,
						354,
						350,
						345,
						343,
						352,
						349,
						336,
						339
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
					"line": 9,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 355,
					"name": "TChains",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/src/types.ts",
								"qualifiedName": "Chain"
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 1388,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "TChains",
									"refersToTypeParameter": true
								}
							],
							"name": "ThirdwebSDKProviderProps",
							"package": "@thirdweb-dev/react-core"
						},
						{
							"type": "literal",
							"value": "signer"
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 1388,
			"name": "ThirdwebSDKProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1395,
					"name": "activeChain",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The network to use for the SDK."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1396,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1397,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									}
								]
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "chainId"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TChains",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "slug"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TChains",
										"refersToTypeParameter": true
									}
								}
							}
						]
					}
				},
				{
					"id": 1394,
					"name": "authConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configuration used for thirdweb auth usage. Enables users to login\nto backends with their wallet."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 501,
						"name": "ThirdwebAuthConfig",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 1398,
					"name": "clientId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1400,
					"name": "queryClient",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/query-client.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/queryClient.ts",
							"qualifiedName": "QueryClient"
						},
						"name": "QueryClient",
						"package": "@tanstack/query-core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "QueryClientProviderProps.queryClient"
					}
				},
				{
					"id": 1391,
					"name": "sdkOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SDKOptions | Thirdweb SDK Options",
								"target": {
									"sourceFileName": "../sdk/src/evm/schema/sdk-options.ts",
									"qualifiedName": "SDKOptions"
								},
								"tsLinkText": "Thirdweb SDK Options"
							},
							{
								"kind": "text",
								"text": " to pass to the thirdweb SDK\ncomes with sensible defaults"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1392,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/schema/sdk-options.d.ts",
													"line": 169,
													"character": 3
												}
											]
										}
									}
								]
							},
							{
								"type": "literal",
								"value": "chains"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 1399,
					"name": "secretKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1390,
					"name": "signer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
							"qualifiedName": "Signer"
						},
						"name": "Signer",
						"package": "@ethersproject/abstract-signer"
					}
				},
				{
					"id": 1393,
					"name": "storageInterface",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The storage interface to use with the sdk."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../storage/src/types/index.ts",
							"qualifiedName": "IThirdwebStorage"
						},
						"name": "IThirdwebStorage",
						"package": "@thirdweb-dev/storage"
					}
				},
				{
					"id": 1389,
					"name": "supportedChains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Chains to support. If not provided, will default to the chains supported by the SDK."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TChains",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1395,
						1394,
						1398,
						1400,
						1391,
						1399,
						1390,
						1393,
						1389
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/providers/types.d.ts",
					"line": 7,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 1401,
					"name": "TChains",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/src/types.ts",
								"qualifiedName": "Chain"
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../react-core/src/core/providers/query-client.tsx",
						"qualifiedName": "QueryClientProviderProps"
					},
					"name": "QueryClientProviderProps",
					"package": "@thirdweb-dev/react-core"
				}
			]
		},
		{
			"id": 1301,
			"name": "UserWithData",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1303,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/auth/dist/declarations/src/core/schema/common.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "User.address"
					}
				},
				{
					"id": 1302,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useUser.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TData",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 1304,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/auth/dist/declarations/src/core/schema/common.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TContext",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "User.session"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1303,
						1302,
						1304
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useUser.d.ts",
					"line": 2,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 1305,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../auth/src/core/schema/common.ts",
							"qualifiedName": "Json"
						},
						"name": "Json",
						"package": "@thirdweb-dev/auth"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../auth/src/core/schema/common.ts",
							"qualifiedName": "Json"
						},
						"name": "Json",
						"package": "@thirdweb-dev/auth"
					}
				},
				{
					"id": 1306,
					"name": "TContext",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../auth/src/core/schema/common.ts",
							"qualifiedName": "Json"
						},
						"name": "Json",
						"package": "@thirdweb-dev/auth"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../auth/src/core/schema/common.ts",
							"qualifiedName": "Json"
						},
						"name": "Json",
						"package": "@thirdweb-dev/auth"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../auth/src/core/schema/common.ts",
						"qualifiedName": "User"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": -1,
							"name": "TContext",
							"refersToTypeParameter": true
						}
					],
					"name": "User",
					"package": "@thirdweb-dev/auth"
				}
			]
		},
		{
			"id": 1481,
			"name": "AcceptDirectOffer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 193,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1482,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1484,
							"name": "addressOfOfferor",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 195,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1483,
							"name": "listingId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 194,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1484,
								1483
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 193,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 1434,
			"name": "AirdropNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params to pass to "
					},
					{
						"kind": "code",
						"text": "`useTransferBatchNFT`"
					},
					{
						"kind": "text",
						"text": "."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 97,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1435,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1437,
							"name": "addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 99,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/airdrop/airdrop.ts",
									"qualifiedName": "AirdropInput"
								},
								"name": "AirdropInput",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1436,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 98,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1437,
								1436
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 97,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 1450,
			"name": "BurnNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useBurnNFT",
						"target": 1135
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 131,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1451,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1453,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 133,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1452,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 132,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1453,
								1452
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 131,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 1488,
			"name": "BuyNowParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 200,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 1497,
					"name": "TListingType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/enums/marketplace/ListingType.ts",
							"qualifiedName": "ListingType"
						},
						"name": "ListingType",
						"package": "@thirdweb-dev/sdk"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "TListingType",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../sdk/src/evm/enums/marketplace/ListingType.ts",
						"qualifiedName": "ListingType.Direct"
					},
					"name": "ListingType.Direct",
					"package": "@thirdweb-dev/sdk"
				},
				"trueType": {
					"type": "reflection",
					"declaration": {
						"id": 1489,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 1492,
								"name": "buyAmount",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
										"line": 203,
										"character": 4
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
										"qualifiedName": "BigNumberish"
									},
									"name": "BigNumberish",
									"package": "@ethersproject/bignumber"
								}
							},
							{
								"id": 1493,
								"name": "buyForWallet",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"sources": [
									{
										"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
										"line": 204,
										"character": 4
									}
								],
								"type": {
									"type": "reference",
									"target": 1418,
									"name": "WalletAddress",
									"package": "@thirdweb-dev/react-core"
								}
							},
							{
								"id": 1490,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
										"line": 201,
										"character": 4
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
										"qualifiedName": "BigNumberish"
									},
									"name": "BigNumberish",
									"package": "@ethersproject/bignumber"
								}
							},
							{
								"id": 1491,
								"name": "type",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
										"line": 202,
										"character": 4
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/enums/marketplace/ListingType.ts",
										"qualifiedName": "ListingType.Direct"
									},
									"name": "ListingType.Direct",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									1492,
									1493,
									1490,
									1491
								]
							}
						],
						"sources": [
							{
								"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
								"line": 200,
								"character": 97
							}
						]
					}
				},
				"falseType": {
					"type": "reflection",
					"declaration": {
						"id": 1494,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 1495,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
										"line": 206,
										"character": 4
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
										"qualifiedName": "BigNumberish"
									},
									"name": "BigNumberish",
									"package": "@ethersproject/bignumber"
								}
							},
							{
								"id": 1496,
								"name": "type",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
										"line": 207,
										"character": 4
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/enums/marketplace/ListingType.ts",
										"qualifiedName": "ListingType.Auction"
									},
									"name": "ListingType.Auction",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									1495,
									1496
								]
							}
						],
						"sources": [
							{
								"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
								"line": 205,
								"character": 4
							}
						]
					}
				}
			}
		},
		{
			"id": 1407,
			"name": "Chain",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 23,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1408,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1413,
							"name": "blockExplorers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1414,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 1415,
												"name": "name",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
														"line": 29,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 1416,
												"name": "url",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
														"line": 30,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													1415,
													1416
												]
											}
										],
										"sources": [
											{
												"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
												"line": 28,
												"character": 21
											}
										]
									}
								}
							}
						},
						{
							"id": 1409,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1410,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "chainName"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../react-core/src/evm/types.ts",
										"qualifiedName": "AddEthereumChainParameter"
									},
									"name": "AddEthereumChainParameter",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 1411,
							"name": "nativeCurrency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "nativeCurrency"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../react-core/src/evm/types.ts",
										"qualifiedName": "AddEthereumChainParameter"
									},
									"name": "AddEthereumChainParameter",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 1412,
							"name": "rpcUrls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "rpcUrls"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../react-core/src/evm/types.ts",
										"qualifiedName": "AddEthereumChainParameter"
									},
									"name": "AddEthereumChainParameter",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 1417,
							"name": "testnet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1413,
								1409,
								1410,
								1411,
								1412,
								1417
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 23,
							"character": 20
						}
					]
				}
			}
		},
		{
			"id": 532,
			"name": "ClaimIneligibilityParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The options to be passed as the second parameter to the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useClaimIneligibilityReasons",
						"target": 562,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": "` hook."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 11,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 533,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 535,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 534,
							"name": "walletAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 1418,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								535,
								534
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 11,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 1465,
			"name": "ClaimNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useClaimNFT",
						"target": 754
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 169,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1466,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1469,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 172,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
									"qualifiedName": "ClaimOptions"
								},
								"name": "ClaimOptions",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1468,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 171,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 1467,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 170,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 1418,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1470,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "tokenId is only used for ERC1155 tokens"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 176,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1469,
								1468,
								1467,
								1470
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 169,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 1471,
			"name": "ClaimNFTReturnType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return type of the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useClaimNFT",
						"target": 754
					},
					{
						"kind": "text",
						"text": " hook."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 183,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Awaited"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "ReturnType"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "claimTo"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/core/classes/erc-721.ts",
												"qualifiedName": "Erc721"
											},
											"name": "Erc721",
											"package": "@thirdweb-dev/sdk"
										}
									}
								],
								"name": "ReturnType",
								"package": "typescript"
							}
						],
						"name": "Awaited",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Awaited"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "ReturnType"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "claimTo"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
												"qualifiedName": "Erc1155"
											},
											"name": "Erc1155",
											"package": "@thirdweb-dev/sdk"
										}
									}
								],
								"name": "ReturnType",
								"package": "typescript"
							}
						],
						"name": "Awaited",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 1498,
			"name": "ClaimTokenParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 214,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1499,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1501,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 216,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1502,
							"name": "checkERC20Allowance",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 217,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1500,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 215,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 1418,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1501,
								1502,
								1500
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 214,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 441,
			"name": "ConnectUIProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
					"line": 49,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 469,
					"name": "I",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 488,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					},
					"default": {
						"type": "reference",
						"target": 488,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 442,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 446,
							"name": "connected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 447,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 58,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 448,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "when the wallet is connected, call this function to indicate that the wallet is connected and it is safe to close the Modal"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 453,
							"name": "goBack",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 454,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 70,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 455,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "go back to the wallet selector screen in connect wallet modal"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 443,
							"name": "hide",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 444,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 54,
											"character": 10
										}
									],
									"signatures": [
										{
											"id": 445,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "temporarily hide the ConnectModal\nThis is useful when you want to open another modal and do not want to show the ConnectModal in the background"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 449,
							"name": "isOpen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "indicates whether the connect wallet modal is open or not"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 464,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size of the modal\n\nThis is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on React Native"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 134,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "compact"
									},
									{
										"type": "literal",
										"value": "wide"
									}
								]
							}
						},
						{
							"id": 465,
							"name": "onLocallyConnected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 140,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 466,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 140,
											"character": 25
										}
									],
									"signatures": [
										{
											"id": 467,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Called when the wallet is connected but it's\npart of another wallet's connection flow."
													}
												]
											},
											"parameters": [
												{
													"id": 468,
													"name": "walleInstance",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "the instance of the connected wallet"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 488,
														"name": "WalletInstance",
														"package": "@thirdweb-dev/react-core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 458,
							"name": "selectionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "selectionData passed from "
									},
									{
										"kind": "code",
										"text": "`selectUI`"
									},
									{
										"kind": "text",
										"text": "'s "
									},
									{
										"kind": "code",
										"text": "`onSelect`"
									},
									{
										"kind": "text",
										"text": " function"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 459,
							"name": "setSelectionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 124,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 460,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 124,
											"character": 22
										}
									],
									"signatures": [
										{
											"id": 461,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "set selectionData"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": []
													}
												]
											},
											"parameters": [
												{
													"id": 462,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 450,
							"name": "show",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 451,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 66,
											"character": 10
										}
									],
									"signatures": [
										{
											"id": 452,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "show the hidden connect wallet modal again"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 463,
							"name": "supportedWallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List of all supported wallets including your wallet."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 128,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 423,
									"name": "WalletConfig",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 456,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "theme of the connect wallet modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									}
								]
							}
						},
						{
							"id": 457,
							"name": "walletConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "`WalletConfig`"
									},
									{
										"kind": "text",
										"text": " object of your wallet\n\nyou can use this to connect to your wallet\n\n### 1. Using "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook\n"
									},
									{
										"kind": "code",
										"text": "```ts\n const connect = useConnect();\n\n // call this function to connect to your wallet\n async function handleConnect() {\n   await connect(walletConfig, options);\n }\n\n```"
									},
									{
										"kind": "text",
										"text": "\n\nOR\n\n### 2. Manually creating wallet instance and connecting\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst createWalletInstance = useCreateWalletInstance();\nconst setConnectedWallet = useSetConnectedWallet();\nconst setConnectionStatus = useSetConnectionStatus();\n\n// call this function to connect to your wallet\nasync function handleConnect() {\n  // create instance\n  const walletInstance = createWalletInstance(walletConfig);\n  // connect wallet\n  setConnectionStatus('connecting);\n  try {\n    await walletInstance.connect(options);\n    // set connected wallet\n    setConnectedWallet(walletInstance);\n  } catch {\n    setConnectionStatus('disconnected');\n }\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 423,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "I",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								446,
								453,
								443,
								449,
								464,
								465,
								458,
								459,
								450,
								463,
								456,
								457
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
							"line": 49,
							"character": 72
						}
					]
				}
			}
		},
		{
			"id": 108,
			"name": "ConnectWalletProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
					"line": 37,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L37"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 109,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 119,
							"name": "auth",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 60,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L60"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 120,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 121,
											"name": "loginOptional",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 61,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L61"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 122,
											"name": "onLogin",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 62,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L62"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 123,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
															"line": 62,
															"character": 14,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L62"
														}
													],
													"signatures": [
														{
															"id": 124,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 125,
																	"name": "token",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 126,
											"name": "onLogout",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 63,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L63"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 127,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
															"line": 63,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L63"
														}
													],
													"signatures": [
														{
															"id": 128,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												121,
												122,
												126
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 60,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L60"
										}
									]
								}
							}
						},
						{
							"id": 112,
							"name": "btnTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 41,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 110,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 38,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 115,
							"name": "detailsBtn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 58,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L58"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 116,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 58,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L58"
										}
									],
									"signatures": [
										{
											"id": 117,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "render a custom button to display the connected wallet details instead of the default button"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
													"qualifiedName": "__global.JSX.Element"
												},
												"name": "JSX.Element",
												"package": "@types/react",
												"qualifiedName": "__global.JSX.Element"
											}
										}
									]
								}
							}
						},
						{
							"id": 138,
							"name": "displayBalanceToken",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Show balance of ERC20 token instead of the native token  in the \"Connected\" button when connected to certain network"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet balanceToken={{\n 1: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\" // show USDC balance when connected to Ethereum mainnet\n}} />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 136,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L136"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 118,
							"name": "dropdownPosition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 59,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L59"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
									"qualifiedName": "DropDownPosition"
								},
								"name": "DropDownPosition",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 131,
							"name": "hideTestnetFaucet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hide option to request testnet funds for testnets in dropdown"
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 78,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L78"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 133,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the size of the modal - "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`wide`"
									},
									{
										"kind": "text",
										"text": " on desktop\n\nModal size is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on mobile"
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n\"wide\"\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 98,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L98"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "compact"
									},
									{
										"type": "literal",
										"value": "wide"
									}
								]
							}
						},
						{
							"id": 113,
							"name": "modalTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set a custom title for the modal"
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n\"Connect\"\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 46,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L46"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 114,
							"name": "modalTitleIconUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replace the thirdweb icon next to modalTitle and set your own iconUrl\n\nSet to empty string to hide the icon"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 53,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 130,
							"name": "networkSelector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 68,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L68"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 150,
										"name": "NetworkSelectorProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "theme"
											},
											{
												"type": "literal",
												"value": "onClose"
											},
											{
												"type": "literal",
												"value": "chains"
											},
											{
												"type": "literal",
												"value": "open"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 135,
							"name": "privacyPolicyUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, Modal will show a Privacy Policy message at the bottom with below link"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 108,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L108"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 66,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L66"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "React.CSSProperties",
								"package": "@types/react"
							}
						},
						{
							"id": 137,
							"name": "supportedTokens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Override the default supported tokens for each network\n\nThese tokens will be displayed in \"Send Funds\" Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 124,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L124"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
									"qualifiedName": "SupportedTokens"
								},
								"name": "SupportedTokens",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 132,
							"name": "switchToActiveChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to show \"Switch Network\" button if the wallet is connected,\nbut it is not connected to the "
									},
									{
										"kind": "code",
										"text": "`activeChain`"
									},
									{
										"kind": "text",
										"text": " provided in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "\n\nPlease, note that if you support multiple networks in your app this prop should\nbe set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " to allow users to switch between networks."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 89,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 134,
							"name": "termsOfServiceUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, Modal will show a Terms of Service message at the bottom with below link"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 103,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L103"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 111,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 39,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L39"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 88,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						},
						{
							"id": 136,
							"name": "welcomeScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customize the welcome screen\n\nEither provide a component to replace the default screen entirely\n\nor an object with title, subtitle and imgSrc to change the content of the default screen"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 117,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L117"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
									"qualifiedName": "WelcomeScreen"
								},
								"name": "WelcomeScreen",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								119,
								112,
								110,
								115,
								138,
								118,
								131,
								133,
								113,
								114,
								130,
								135,
								129,
								137,
								132,
								134,
								111,
								136
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
							"line": 37,
							"character": 33,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L37"
						}
					]
				}
			}
		},
		{
			"id": 1456,
			"name": "DelayedRevealLazyMintInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useDelayedRevealLazyMint",
						"target": 766
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 150,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1457,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1459,
							"name": "metadatas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 152,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFTMetadataInput"
									},
									"name": "NFTMetadataInput",
									"package": "@thirdweb-dev/sdk"
								}
							}
						},
						{
							"id": 1460,
							"name": "password",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 153,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1458,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 151,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/core/schema/nft.ts",
									"qualifiedName": "NFTMetadataInput"
								},
								"name": "NFTMetadataInput",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1459,
								1460,
								1458
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 150,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 1454,
			"name": "DropContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible DROP contract types."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 139,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
							"qualifiedName": "NFTDrop"
						},
						"name": "NFTDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/edition-drop.ts",
							"qualifiedName": "EditionDrop"
						},
						"name": "EditionDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
							"qualifiedName": "SignatureDrop"
						},
						"name": "SignatureDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/token-drop.ts",
							"qualifiedName": "TokenDrop"
						},
						"name": "TokenDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
							"qualifiedName": "SmartContract"
						},
						"name": "SmartContract",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 1428,
			"name": "Erc721OrErc1155",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Possible NFT contract types."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 83,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/core/classes/erc-721.ts",
							"qualifiedName": "Erc721"
						},
						"name": "Erc721",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
							"qualifiedName": "Erc1155"
						},
						"name": "Erc1155",
						"package": "@thirdweb-dev/sdk"
					}
				]
			}
		},
		{
			"id": 1485,
			"name": "ExecuteAuctionSale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 197,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1486,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1487,
							"name": "listingId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 198,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1487
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 197,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 489,
			"name": "ExtraCoreWalletOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
					"line": 4,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 490,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 491,
							"name": "chain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								491
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
							"line": 4,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 1472,
			"name": "MakeBidParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 184,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1473,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1475,
							"name": "bid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 186,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Price"
								},
								"name": "Price",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1474,
							"name": "listingId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 185,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1475,
								1474
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 184,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 1476,
			"name": "MakeOfferParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 188,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1477,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1478,
							"name": "listingId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 189,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 1479,
							"name": "pricePerToken",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Price"
								},
								"name": "Price",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1480,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 191,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1478,
								1479,
								1480
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 188,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 1443,
			"name": "MintNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useMintNFT",
						"target": 1111
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 115,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1444,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1445,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 116,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/core/schema/nft.ts",
									"qualifiedName": "NFTMetadataOrUri"
								},
								"name": "NFTMetadataOrUri",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1447,
							"name": "supply",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 118,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1446,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 1418,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1445,
								1447,
								1446
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 115,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 1448,
			"name": "MintNFTReturnType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return type of the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useMintNFT",
						"target": 1111
					},
					{
						"kind": "text",
						"text": " hook."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 125,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 1449,
					"name": "TContract",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "TContract",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../sdk/src/evm/core/classes/erc-721.ts",
						"qualifiedName": "Erc721"
					},
					"name": "Erc721",
					"package": "@thirdweb-dev/sdk"
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Awaited"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "ReturnType"
							},
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "to"
									},
									"objectType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/core/classes/erc-721-mintable.ts",
											"qualifiedName": "Erc721Mintable"
										},
										"name": "Erc721Mintable",
										"package": "@thirdweb-dev/sdk"
									}
								}
							],
							"name": "ReturnType",
							"package": "typescript"
						}
					],
					"name": "Awaited",
					"package": "typescript"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": -1,
						"name": "TContract",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
							"qualifiedName": "Erc1155"
						},
						"name": "Erc1155",
						"package": "@thirdweb-dev/sdk"
					},
					"trueType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Awaited"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "ReturnType"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "to"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/core/classes/erc-1155-mintable.ts",
												"qualifiedName": "Erc1155Mintable"
											},
											"name": "Erc1155Mintable",
											"package": "@thirdweb-dev/sdk"
										}
									}
								],
								"name": "ReturnType",
								"package": "typescript"
							}
						],
						"name": "Awaited",
						"package": "typescript"
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 1438,
			"name": "MintNFTSupplyParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params to pass to "
					},
					{
						"kind": "code",
						"text": "`useMintNFTSupply`"
					},
					{
						"kind": "text",
						"text": "."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 105,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1439,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1441,
							"name": "additionalSupply",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1442,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 108,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 1418,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1440,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 106,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1441,
								1442,
								1440
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 105,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 1426,
			"name": "NFTContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible NFT contract types."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\n```"
							}
						]
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 69,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-collection.ts",
							"qualifiedName": "NFTCollection"
						},
						"name": "NFTCollection",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/edition.ts",
							"qualifiedName": "Edition"
						},
						"name": "Edition",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/pack.ts",
							"qualifiedName": "Pack"
						},
						"name": "Pack",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/multiwrap.ts",
							"qualifiedName": "Multiwrap"
						},
						"name": "Multiwrap",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Exclude"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1454,
								"name": "DropContract",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "literal",
								"value": "TokenDrop"
							}
						],
						"name": "Exclude",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 150,
			"name": "NetworkSelectorProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 42,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L42"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 151,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 157,
							"name": "chains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 46,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L46"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 153,
							"name": "onClose",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 44,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L44"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 154,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 44,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L44"
										}
									],
									"signatures": [
										{
											"id": 155,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 165,
							"name": "onCustomClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 51,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L51"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 166,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 51,
											"character": 18,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L51"
										}
									],
									"signatures": [
										{
											"id": 167,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 161,
							"name": "onSwitch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 50,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L50"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 162,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 50,
											"character": 13,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L50"
										}
									],
									"signatures": [
										{
											"id": 163,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 164,
													"name": "chain",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../chains/src/types.ts",
															"qualifiedName": "Chain"
														},
														"name": "Chain",
														"package": "@thirdweb-dev/chains"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 156,
							"name": "open",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 45,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 158,
							"name": "popularChains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 47,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L47"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 159,
							"name": "recentChains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 48,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L48"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 160,
							"name": "renderChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 49,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L49"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
									"qualifiedName": "RenderChain"
								},
								"name": "RenderChain",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 152,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 43,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L43"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 88,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								157,
								153,
								165,
								161,
								156,
								158,
								159,
								160,
								152
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 42,
							"character": 35,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L42"
						}
					]
				}
			}
		},
		{
			"id": 421,
			"name": "RequiredParam",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Makes a parameter required to be passed, but still allows it to be null or undefined."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/query-utils/required-param.d.ts",
					"line": 6,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 422,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					},
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 1461,
			"name": "RevealLazyMintInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useRevealLazyMint",
						"target": 774
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 160,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1462,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1463,
							"name": "batchId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 161,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 1464,
							"name": "password",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1463,
								1464
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 160,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 1455,
			"name": "RevealableContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible revealable contract types."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 144,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
							"qualifiedName": "NFTDrop"
						},
						"name": "NFTDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
							"qualifiedName": "SignatureDrop"
						},
						"name": "SignatureDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
							"qualifiedName": "SmartContract"
						},
						"name": "SmartContract",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 470,
			"name": "SelectUIProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
					"line": 142,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 480,
					"name": "I",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 488,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					},
					"default": {
						"type": "reference",
						"target": 488,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 471,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 479,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size of the modal\n\nThis is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on React Native"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 171,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "compact"
									},
									{
										"type": "literal",
										"value": "wide"
									}
								]
							}
						},
						{
							"id": 472,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 148,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 473,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 148,
											"character": 14
										}
									],
									"signatures": [
										{
											"id": 474,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Call this function to \"select\" your wallet and render the screen for connecting the wallet"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": []
													}
												]
											},
											"parameters": [
												{
													"id": 475,
													"name": "selectionData",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "selectionData to be passed to "
															},
															{
																"kind": "code",
																"text": "`connectUI`"
															},
															{
																"kind": "text",
																"text": "'s "
															},
															{
																"kind": "code",
																"text": "`selectionData`"
															},
															{
																"kind": "text",
																"text": " prop"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 477,
							"name": "supportedWallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List of all supported wallets including your wallet.\n\nYou can use this to conditionally render UI based on how many wallets are supported.\nFor example: You can render a larger UI if only one wallet (your wallet) is supported."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 161,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 423,
									"name": "WalletConfig",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 478,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "theme of the connect wallet modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 165,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									}
								]
							}
						},
						{
							"id": 476,
							"name": "walletConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "`WalletConfig`"
									},
									{
										"kind": "text",
										"text": " object of your wallet\n\nyou can use this get metadata of your wallet by doing "
									},
									{
										"kind": "code",
										"text": "`walletConfig.meta`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 154,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 423,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "I",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								479,
								472,
								477,
								478,
								476
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
							"line": 142,
							"character": 71
						}
					]
				}
			}
		},
		{
			"id": 536,
			"name": "SetClaimConditionsParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useSetClaimConditions",
						"target": 572,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 20,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 537,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 538,
							"name": "phases",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
										"qualifiedName": "ClaimConditionInput"
									},
									"name": "ClaimConditionInput",
									"package": "@thirdweb-dev/sdk"
								}
							}
						},
						{
							"id": 539,
							"name": "reset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								538,
								539
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 20,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 88,
			"name": "Theme",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/design-system/index.ts#L88"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": {
						"sourceFileName": "src/design-system/index.ts",
						"qualifiedName": "darkThemeObj"
					},
					"name": "darkThemeObj",
					"package": "@thirdweb-dev/react"
				}
			}
		},
		{
			"id": 89,
			"name": "ThemeOverrides",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 92,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/design-system/index.ts#L92"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Exclude"
					},
					"typeArguments": [
						{
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 88,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"type": "literal",
							"value": "type"
						}
					],
					"name": "Exclude",
					"package": "typescript"
				},
				"templateType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": -1,
								"name": "key",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 88,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"name": "Partial",
					"package": "typescript"
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 1423,
			"name": "TokenBurnParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters to pass to the burn function."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 58,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1424,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1425,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1425
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 58,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 1427,
			"name": "TokenContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible Token contract types."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\n```"
							}
						]
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 78,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/token-drop.ts",
							"qualifiedName": "TokenDrop"
						},
						"name": "TokenDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/token.ts",
							"qualifiedName": "Token"
						},
						"name": "Token",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
							"qualifiedName": "SmartContract"
						},
						"name": "SmartContract",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 1419,
			"name": "TokenParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters to pass to the mint and transfer functions."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 49,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1420,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1422,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1421,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 1418,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1422,
								1421
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 49,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 1429,
			"name": "TransferNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params to pass to "
					},
					{
						"kind": "code",
						"text": "`useTransferNFT`"
					},
					{
						"kind": "text",
						"text": "."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 88,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1430,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1433,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 91,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1431,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 89,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 1418,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1432,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 90,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1433,
								1431,
								1432
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 88,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 730,
			"name": "UseContractResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 21,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 733,
					"name": "TContract",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/index.ts",
							"qualifiedName": "ValidContractInstance"
						},
						"name": "ValidContractInstance",
						"package": "@thirdweb-dev/sdk"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
							"qualifiedName": "SmartContract"
						},
						"name": "SmartContract",
						"package": "@thirdweb-dev/sdk"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 731,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 732,
									"name": "contract",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
											"line": 22,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "TContract",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										732
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
									"line": 21,
									"character": 129
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1522,
			"name": "UseWatchTransactionsParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useTransactions.d.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/functions/watchTransactions.ts",
											"qualifiedName": "WatchTransactionsParams"
										},
										"name": "WatchTransactionsParams",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "literal",
										"value": "onTransactions"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1523,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1524,
									"name": "limit",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useTransactions.d.ts",
											"line": 4,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1524
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useTransactions.d.ts",
									"line": 3,
									"character": 100
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1418,
			"name": "WalletAddress",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A wallet address."
					}
				],
				"modifierTags": [
					"@beta"
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 38,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../sdk/src/evm/schema/shared/AddressOrEnsSchema.ts",
					"qualifiedName": "AddressOrEns"
				},
				"name": "AddressOrEns",
				"package": "@thirdweb-dev/sdk"
			}
		},
		{
			"id": 481,
			"name": "WalletClass",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
					"line": 9,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 487,
					"name": "I",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 488,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					},
					"default": {
						"type": "reference",
						"target": 488,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 482,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 483,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 484,
							"name": "meta",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "meta"
								},
								"objectType": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../wallets/src/evm/wallets/base.ts",
											"qualifiedName": "AbstractClientWallet"
										},
										"name": "AbstractClientWallet",
										"package": "@thirdweb-dev/wallets"
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								483,
								484
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
							"line": 9,
							"character": 69
						}
					],
					"signatures": [
						{
							"id": 485,
							"name": "new WalletClass",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 486,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 492,
										"name": "WalletOptions",
										"package": "@thirdweb-dev/react-core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "I",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 423,
			"name": "WalletConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
					"line": 14,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 440,
					"name": "I",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 488,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					},
					"default": {
						"type": "reference",
						"target": 488,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 424,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 425,
							"name": "category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "socialLogin"
									},
									{
										"type": "literal",
										"value": "walletLogin"
									}
								]
							}
						},
						{
							"id": 432,
							"name": "connectUI",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "UI for connecting wallet"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FC"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 441,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "I",
												"refersToTypeParameter": true
											}
										],
										"name": "ConnectUIProps",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "React.FC",
								"package": "@types/react"
							}
						},
						{
							"id": 428,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 429,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 18,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 430,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 431,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 492,
														"name": "WalletOptions",
														"package": "@thirdweb-dev/react-core"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "I",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 426,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 439,
							"name": "isHeadless",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the wallet can sign transactions without user interaction, set this to true."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 434,
							"name": "isInstalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 435,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
											"line": 27,
											"character": 18
										}
									],
									"signatures": [
										{
											"id": 436,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 427,
							"name": "meta",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "meta"
								},
								"objectType": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../wallets/src/evm/wallets/base.ts",
											"qualifiedName": "AbstractClientWallet"
										},
										"name": "AbstractClientWallet",
										"package": "@thirdweb-dev/wallets"
									}
								}
							}
						},
						{
							"id": 437,
							"name": "personalWallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of "
									},
									{
										"kind": "code",
										"text": "`WalletConfig`"
									},
									{
										"kind": "text",
										"text": " that users can use as a personal wallet to connect to your wallet\n\nThis is only required if your wallet requires a personal wallet to be connected such as a Safe Wallet or Smart Wallet\n\nproviding the "
									},
									{
										"kind": "code",
										"text": "`personalWallets`"
									},
									{
										"kind": "text",
										"text": " ensures that autoconnect and ConnectWallet modal works properly for your wallet.\n* autoconnect will connect the last connected personal wallet first and then connect your wallet\n* ConnectWallet modal will reopen once the personal wallet is connected so that you can render UI for connecting your wallet as the next step"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 423,
									"name": "WalletConfig",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 438,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, this wallet will be tagged as \"recommended\" in ConnectWallet Modal and will be shown at the top of the list"
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 433,
							"name": "selectUI",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "UI for selecting wallet - this UI is rendered in the wallet selection screen"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FC"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 470,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "I",
												"refersToTypeParameter": true
											}
										],
										"name": "SelectUIProps",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "React.FC",
								"package": "@types/react"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								425,
								432,
								428,
								426,
								439,
								434,
								427,
								437,
								438,
								433
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
							"line": 14,
							"character": 70
						}
					]
				}
			}
		},
		{
			"id": 488,
			"name": "WalletInstance",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../wallets/src/evm/wallets/base.ts",
					"qualifiedName": "AbstractClientWallet"
				},
				"name": "AbstractClientWallet",
				"package": "@thirdweb-dev/wallets"
			}
		},
		{
			"id": 492,
			"name": "WalletOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/types/wallet.d.ts",
					"line": 7,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../wallets/src/evm/wallets/base.ts",
					"qualifiedName": "WalletOptions"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 489,
						"name": "ExtraCoreWalletOptions",
						"package": "@thirdweb-dev/react-core"
					}
				],
				"name": "WalletOptions_",
				"package": "@thirdweb-dev/wallets",
				"qualifiedName": "WalletOptions"
			}
		},
		{
			"id": 330,
			"name": "ThirdwebThemeContext",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/providers/theme-context.d.ts",
					"line": 2,
					"character": 21
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
					"qualifiedName": ""
				},
				"name": "Context",
				"package": "@types/react"
			}
		},
		{
			"id": 653,
			"name": "compilerMetadata",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 16,
					"character": 21
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 654,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 655,
							"name": "cacheKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 656,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
											"line": 17,
											"character": 14
										}
									],
									"signatures": [
										{
											"id": 657,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 658,
													"name": "contractAddress",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 421,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../react-core/src/evm/types.ts",
																	"qualifiedName": "ContractAddress"
																},
																"name": "ContractAddress",
																"package": "@thirdweb-dev/react-core"
															}
														],
														"name": "RequiredParam",
														"package": "@thirdweb-dev/react-core"
													}
												},
												{
													"id": 659,
													"name": "chainId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 421,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../sdk/src/evm/constants/chains/SUPPORTED_CHAIN_ID.ts",
																	"qualifiedName": "SUPPORTED_CHAIN_ID"
																},
																"name": "SUPPORTED_CHAIN_ID",
																"package": "@thirdweb-dev/sdk"
															}
														],
														"name": "RequiredParam",
														"package": "@thirdweb-dev/react-core"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
													"qualifiedName": ""
												},
												"name": "QueryKey",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							}
						},
						{
							"id": 661,
							"name": "fetchQuery",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
										"qualifiedName": "fetchCompilerMetadata"
									},
									"name": "fetchCompilerMetadata",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 660,
							"name": "useQuery",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 650,
									"name": "useCompilerMetadata",
									"package": "@thirdweb-dev/react-core"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								655,
								661,
								660
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 16,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 641,
			"name": "contractType",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 9,
					"character": 21
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 642,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 643,
							"name": "cacheKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 644,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
											"line": 10,
											"character": 14
										}
									],
									"signatures": [
										{
											"id": 645,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 646,
													"name": "contractAddress",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 421,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../react-core/src/evm/types.ts",
																	"qualifiedName": "ContractAddress"
																},
																"name": "ContractAddress",
																"package": "@thirdweb-dev/react-core"
															}
														],
														"name": "RequiredParam",
														"package": "@thirdweb-dev/react-core"
													}
												},
												{
													"id": 647,
													"name": "chainId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 421,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../sdk/src/evm/constants/chains/SUPPORTED_CHAIN_ID.ts",
																	"qualifiedName": "SUPPORTED_CHAIN_ID"
																},
																"name": "SUPPORTED_CHAIN_ID",
																"package": "@thirdweb-dev/sdk"
															}
														],
														"name": "RequiredParam",
														"package": "@thirdweb-dev/react-core"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
													"qualifiedName": ""
												},
												"name": "QueryKey",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							}
						},
						{
							"id": 649,
							"name": "fetchQuery",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
										"qualifiedName": "fetchContractType"
									},
									"name": "fetchContractType",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 648,
							"name": "useQuery",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 638,
									"name": "useContractType",
									"package": "@thirdweb-dev/react-core"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								643,
								649,
								648
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 9,
							"character": 35
						}
					]
				}
			}
		},
		{
			"id": 1,
			"name": "defaultTokens",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 34,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L34"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
					"qualifiedName": "SupportedTokens"
				},
				"name": "SupportedTokens",
				"package": "@thirdweb-dev/react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2,
			"name": "defaultWallets",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defaultWallets.ts",
					"line": 10,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/defaultWallets.ts#L10"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": 423,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "any"
						}
					],
					"name": "WalletConfig",
					"package": "@thirdweb-dev/react-core"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 139,
			"name": "ConnectModalInline",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
					"line": 27,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx#L27"
				}
			],
			"signatures": [
				{
					"id": 140,
					"name": "ConnectModalInline",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
							"line": 27,
							"character": 34,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx#L27"
						}
					],
					"parameters": [
						{
							"id": 141,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 108,
												"name": "ConnectWalletProps",
												"package": "@thirdweb-dev/react"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "auth"
													},
													{
														"type": "literal",
														"value": "supportedTokens"
													},
													{
														"type": "literal",
														"value": "dropdownPosition"
													},
													{
														"type": "literal",
														"value": "networkSelector"
													},
													{
														"type": "literal",
														"value": "detailsBtn"
													},
													{
														"type": "literal",
														"value": "hideTestnetFaucet"
													},
													{
														"type": "literal",
														"value": "switchToActiveChain"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 142,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 143,
													"name": "onModalHide",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
															"line": 38,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx#L38"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 144,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
																	"line": 38,
																	"character": 18,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx#L38"
																}
															],
															"signatures": [
																{
																	"id": 145,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
																			"line": 38,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx#L38"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														143
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
													"line": 37,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx#L37"
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 104,
			"name": "ConnectWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
					"line": 146,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L146"
				}
			],
			"signatures": [
				{
					"id": 105,
					"name": "ConnectWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A component that allows the user to connect their wallet.\n\nThe button must be descendant of "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " in order to function."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 562,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 106,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 108,
								"name": "ConnectWalletProps",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 107,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 303,
			"name": "MediaRenderer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 378,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L378"
				}
			],
			"signatures": [
				{
					"id": 304,
					"name": "MediaRenderer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This component can be used to render any media type, including image, audio, video, and html files.\nIts convenient for rendering NFT media files, as these can be a variety of different types.\nThe component falls back to a external link if the media type is not supported.\nThe default size is 300px by 300px, but this can be changed using the "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " props.\n\nProps: "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "MediaRendererProps",
								"target": 189,
								"tsLinkText": ""
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "We can take a video file hosted on IPFS and render it using this component as follows\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  return <MediaRenderer\n    src=\"ipfs://Qmb9ZV5yznE4C4YvyJe8DVFv1LSVkebdekY6HjLVaKmHZi\"\n    alt=\"A mp4 video\"\n  />\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nYou can try switching out the "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " prop to different types of URLs and media types to explore the possibilities."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 392,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 305,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 189,
										"name": "MediaRendererProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 146,
			"name": "NetworkSelector",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 68,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L68"
				}
			],
			"signatures": [
				{
					"id": 147,
					"name": "NetworkSelector",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 562,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 148,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 150,
								"name": "NetworkSelectorProps",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 149,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 495,
			"name": "ThirdwebAuthProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/contexts/ThirdwebAuthProvider.d.ts",
					"line": 3,
					"character": 21
				}
			],
			"signatures": [
				{
					"id": 496,
					"name": "ThirdwebAuthProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 562,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 497,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 498,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 499,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/contexts/ThirdwebAuthProvider.d.ts",
															"line": 4,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 501,
														"name": "ThirdwebAuthConfig",
														"package": "@thirdweb-dev/react-core"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														499
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/contexts/ThirdwebAuthProvider.d.ts",
													"line": 3,
													"character": 70
												}
											]
										}
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						},
						{
							"id": 500,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 516,
			"name": "ThirdwebConfigProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-config.d.ts",
					"line": 8,
					"character": 21
				}
			],
			"signatures": [
				{
					"id": 517,
					"name": "ThirdwebConfigProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 562,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 518,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 519,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 520,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-config.d.ts",
															"line": 9,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../react-core/src/evm/contexts/thirdweb-config.tsx",
															"qualifiedName": "ThirdwebConfigContext"
														},
														"name": "ThirdwebConfigContext",
														"package": "@thirdweb-dev/react-core"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														520
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-config.d.ts",
													"line": 8,
													"character": 72
												}
											]
										}
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						},
						{
							"id": 521,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 524,
			"name": "ThirdwebConnectedWalletProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-wallet.d.ts",
					"line": 11,
					"character": 21
				}
			],
			"signatures": [
				{
					"id": 525,
					"name": "ThirdwebConnectedWalletProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 562,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 526,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 527,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 528,
													"name": "signer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-wallet.d.ts",
															"line": 12,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
															"qualifiedName": "Signer"
														},
														"name": "Signer",
														"package": "@ethersproject/abstract-signer"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														528
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-wallet.d.ts",
													"line": 11,
													"character": 81
												}
											]
										}
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						},
						{
							"id": 529,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 320,
			"name": "ThirdwebNftMedia",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/NftMedia.tsx",
					"line": 44,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/NftMedia.tsx#L44"
				}
			],
			"signatures": [
				{
					"id": 321,
					"name": "ThirdwebNftMedia",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This component can be used to render NFTs from the thirdweb SDK.\nIt will render the animation_url if it exists, otherwise it will render the image.\nThe default size is 300px by 300px, but this can be changed using the "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " props.\n\nProps: "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ThirdwebNftMediaProps",
								"target": 309,
								"tsLinkText": ""
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia, useContract, useNFT } from \"@thirdweb-dev/react\";\nexport default function NFTCollectionRender() {\n  const { contract } = useContract(<your-contract-address>);\n  const { data: nft, isLoading } = useNFT(contract, 0);\n\n  return (\n    <div>\n      {!isLoading && nft ? (\n        <ThirdwebNftMedia metadata={nft.metadata} />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 392,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 322,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 309,
										"name": "ThirdwebNftMediaProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 168,
			"name": "ThirdwebProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 67,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/providers/thirdweb-provider.tsx#L67"
				}
			],
			"signatures": [
				{
					"id": 169,
					"name": "ThirdwebProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`<ThirdwebProvider />`"
							},
							{
								"kind": "text",
								"text": " component lets you control what networks you want users to connect to,\nwhat types of wallets can connect to your app, and the settings for the [Thirdweb SDK](https://docs.thirdweb.com/typescript)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can wrap your application with the provider as follows:\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx title=\"App.jsx\"\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 67,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/providers/thirdweb-provider.tsx#L67"
						}
					],
					"typeParameter": [
						{
							"id": 170,
							"name": "TChains",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							},
							"default": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reflection",
											"declaration": {
												"id": 171,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2237,
														"character": 37
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 172,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2294,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 173,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2337,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 174,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2387,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 175,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2436,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 176,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2476,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 177,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2506,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 178,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2556,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 179,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2593,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 180,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2642,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 181,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2677,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 182,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2717,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 183,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2746,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 184,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2791,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 185,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2826,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 186,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2858,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 187,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2887,
														"character": 4
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 188,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
											"qualifiedName": "ThirdwebProviderProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TChains",
												"refersToTypeParameter": true
											}
										],
										"name": "ThirdwebProviderProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 331,
			"name": "ThirdwebProviderCore",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
					"line": 55,
					"character": 21
				}
			],
			"signatures": [
				{
					"id": 332,
					"name": "ThirdwebProviderCore",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-provider.d.ts",
							"line": 55,
							"character": 43
						}
					],
					"typeParameter": [
						{
							"id": 333,
							"name": "TChains",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 334,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 335,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TChains",
												"refersToTypeParameter": true
											}
										],
										"name": "ThirdwebProviderCoreProps",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 1380,
			"name": "ThirdwebSDKProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/providers/thirdweb-sdk-provider.d.ts",
					"line": 13,
					"character": 21
				}
			],
			"signatures": [
				{
					"id": 1381,
					"name": "ThirdwebSDKProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A basic wrapper around the Thirdweb SDK.\n\nYou can use this in order to be able to pass a provider & signer directly to the SDK."
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "Utilizing this provider will mean hooks for wallet management are not available, if you need those please use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ThirdwebProvider",
										"target": 168
									},
									{
										"kind": "text",
										"text": " instead."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/providers/thirdweb-sdk-provider.d.ts",
							"line": 13,
							"character": 42
						}
					],
					"typeParameter": [
						{
							"id": 1382,
							"name": "TChains",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 1383,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1388,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TChains",
												"refersToTypeParameter": true
											}
										],
										"name": "ThirdwebSDKProviderProps",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 323,
			"name": "Web3Button",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 76,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/Web3Button/index.tsx#L76"
				}
			],
			"signatures": [
				{
					"id": 324,
					"name": "Web3Button",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A component that allows the user to call an on-chain function on a contract.\n\nThe button has to be wrapped in a "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " in order to function."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { Web3Button } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n return (\n  <div>\n    <Web3Button contractAddress=\"0x...\" action={(contract) => contract.erc721.transfer(\"0x...\", 1)} />\n  </div>\n)\n}\n```"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 76,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/Web3Button/index.tsx#L76"
						}
					],
					"typeParameter": [
						{
							"id": 325,
							"name": "TAction",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/components/Web3Button/index.tsx",
									"qualifiedName": "ActionFn"
								},
								"name": "ActionFn",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"parameters": [
						{
							"id": 326,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/evm/components/Web3Button/index.tsx",
											"qualifiedName": "Web3ButtonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TAction",
												"refersToTypeParameter": true
											}
										],
										"name": "Web3ButtonProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 26,
			"name": "bloctoWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
					"line": 19,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L19"
				}
			],
			"signatures": [
				{
					"id": 27,
					"name": "bloctoWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
							"line": 19,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L19"
						}
					],
					"parameters": [
						{
							"id": 28,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
									"qualifiedName": "BloctoAdditionalOptions"
								},
								"name": "BloctoAdditionalOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/blocto.ts",
									"qualifiedName": "BloctoWallet"
								},
								"name": "BloctoWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 29,
			"name": "coinbaseWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
					"line": 28,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L28"
				}
			],
			"signatures": [
				{
					"id": 30,
					"name": "coinbaseWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
							"line": 28,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L28"
						}
					],
					"parameters": [
						{
							"id": 31,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
									"qualifiedName": "CoinbaseWalletOptions"
								},
								"name": "CoinbaseWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/coinbase-wallet.ts",
									"qualifiedName": "CoinbaseWallet"
								},
								"name": "CoinbaseWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 82,
			"name": "darkTheme",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 149,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/design-system/index.ts#L149"
				}
			],
			"signatures": [
				{
					"id": 83,
					"name": "darkTheme",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 149,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/design-system/index.ts#L149"
						}
					],
					"parameters": [
						{
							"id": 84,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 89,
								"name": "ThemeOverrides",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 88,
						"name": "Theme",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 32,
			"name": "embeddedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
					"line": 24,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx#L24"
				}
			],
			"signatures": [
				{
					"id": 33,
					"name": "embeddedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
							"line": 24,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx#L24"
						}
					],
					"parameters": [
						{
							"id": 34,
							"name": "_config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
									"qualifiedName": "EmbeddedWalletConfig"
								},
								"name": "EmbeddedWalletConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/embedded-wallet.ts",
									"qualifiedName": "EmbeddedWallet"
								},
								"name": "EmbeddedWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 35,
			"name": "frameWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
					"line": 12,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L12"
				}
			],
			"signatures": [
				{
					"id": 36,
					"name": "frameWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
							"line": 12,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L12"
						}
					],
					"parameters": [
						{
							"id": 37,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
									"qualifiedName": "FrameConfig"
								},
								"name": "FrameConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/frame.ts",
									"qualifiedName": "FrameWallet"
								},
								"name": "FrameWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 1510,
			"name": "getErc1155",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 224,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1511,
					"name": "getErc1155",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 224,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1512,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/index.ts",
													"qualifiedName": "ValidContractInstance"
												},
												"name": "ValidContractInstance",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
									"qualifiedName": "Erc1155"
								},
								"name": "Erc1155",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1516,
			"name": "getErc20",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 226,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1517,
					"name": "getErc20",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 226,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1518,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/index.ts",
													"qualifiedName": "ValidContractInstance"
												},
												"name": "ValidContractInstance",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/classes/erc-20.ts",
									"qualifiedName": "Erc20"
								},
								"name": "Erc20",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1513,
			"name": "getErc721",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 225,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1514,
					"name": "getErc721",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 225,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1515,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/index.ts",
													"qualifiedName": "ValidContractInstance"
												},
												"name": "ValidContractInstance",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/classes/erc-721.ts",
									"qualifiedName": "Erc721"
								},
								"name": "Erc721",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1503,
			"name": "getErcs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
					"line": 219,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1504,
					"name": "getErcs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
							"line": 219,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1505,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/index.ts",
													"qualifiedName": "ValidContractInstance"
												},
												"name": "ValidContractInstance",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1506,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1507,
									"name": "erc1155",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
											"line": 220,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
													"qualifiedName": "Erc1155"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../sdk/src/evm/types/eips.ts",
																	"qualifiedName": ""
																},
																"name": "BaseERC1155",
																"package": "@thirdweb-dev/sdk"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../sdk/src/evm/types/eips.ts",
																	"qualifiedName": ""
																},
																"name": "BaseSignatureMintERC1155",
																"package": "@thirdweb-dev/sdk"
															}
														]
													}
												],
												"name": "Erc1155",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 1509,
									"name": "erc20",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
											"line": 222,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/core/classes/erc-20.ts",
													"qualifiedName": "Erc20"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../sdk/src/evm/types/eips.ts",
																	"qualifiedName": ""
																},
																"name": "BaseERC20",
																"package": "@thirdweb-dev/sdk"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../sdk/src/evm/types/eips.ts",
																	"qualifiedName": ""
																},
																"name": "BaseSignatureMintERC20",
																"package": "@thirdweb-dev/sdk"
															}
														]
													}
												],
												"name": "Erc20",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 1508,
									"name": "erc721",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
											"line": 221,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/core/classes/erc-721.ts",
													"qualifiedName": "Erc721"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/eips.ts",
															"qualifiedName": ""
														},
														"name": "BaseERC721",
														"package": "@thirdweb-dev/sdk"
													}
												],
												"name": "Erc721",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1507,
										1509,
										1508
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/types.d.ts",
									"line": 219,
									"character": 88
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 85,
			"name": "lightTheme",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 145,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/design-system/index.ts#L145"
				}
			],
			"signatures": [
				{
					"id": 86,
					"name": "lightTheme",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 145,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/design-system/index.ts#L145"
						}
					],
					"parameters": [
						{
							"id": 87,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 89,
								"name": "ThemeOverrides",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 88,
						"name": "Theme",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 38,
			"name": "localWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/localWallet/localWallet.tsx",
					"line": 11,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/localWallet/localWallet.tsx#L11"
				}
			],
			"signatures": [
				{
					"id": 39,
					"name": "localWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/localWallet/localWallet.tsx",
							"line": 11,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/localWallet/localWallet.tsx#L11"
						}
					],
					"parameters": [
						{
							"id": 40,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
									"qualifiedName": "LocalWalletConfigOptions"
								},
								"name": "LocalWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
							"qualifiedName": "LocalWalletConfig"
						},
						"name": "LocalWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 41,
			"name": "magicLink",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
					"line": 30,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/magic/magicLink.tsx#L30"
				}
			],
			"signatures": [
				{
					"id": 42,
					"name": "magicLink",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
							"line": 30,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/magic/magicLink.tsx#L30"
						}
					],
					"parameters": [
						{
							"id": 43,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../wallets/src/evm/connectors/magic/types.ts",
											"qualifiedName": "MagicAuthOptions"
										},
										"name": "MagicAuthOptions",
										"package": "@thirdweb-dev/wallets"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 44,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 45,
													"name": "recommended",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
															"line": 35,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/magic/magicLink.tsx#L35"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														45
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
													"line": 31,
													"character": 39,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/magic/magicLink.tsx#L31"
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/magic/types.ts",
							"qualifiedName": "ConfiguredMagicLinkWallet"
						},
						"name": "ConfiguredMagicLinkWallet",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 46,
			"name": "metamaskWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
					"line": 23,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L23"
				}
			],
			"signatures": [
				{
					"id": 47,
					"name": "metamaskWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
							"line": 23,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L23"
						}
					],
					"parameters": [
						{
							"id": 48,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
									"qualifiedName": "MetamaskWalletOptions"
								},
								"name": "MetamaskWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/metamask.ts",
									"qualifiedName": "MetaMaskWallet"
								},
								"name": "MetaMaskWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 79,
			"name": "okxWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
					"line": 20,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L20"
				}
			],
			"signatures": [
				{
					"id": 80,
					"name": "okxWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
							"line": 20,
							"character": 25,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L20"
						}
					],
					"parameters": [
						{
							"id": 81,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
									"qualifiedName": "OKXWalletOptions"
								},
								"name": "OKXWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/okx.ts",
									"qualifiedName": "OKXWallet"
								},
								"name": "OKXWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 49,
			"name": "paperWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/paper/paperWallet.tsx",
					"line": 23,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/paper/paperWallet.tsx#L23"
				}
			],
			"signatures": [
				{
					"id": 50,
					"name": "paperWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/paper/paperWallet.tsx",
							"line": 23,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/paper/paperWallet.tsx#L23"
						}
					],
					"parameters": [
						{
							"id": 51,
							"name": "_config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/paper/types.ts",
									"qualifiedName": "PaperConfig"
								},
								"name": "PaperConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/paper-wallet.ts",
									"qualifiedName": "PaperWallet"
								},
								"name": "PaperWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 52,
			"name": "phantomWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
					"line": 15,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L15"
				}
			],
			"signatures": [
				{
					"id": 53,
					"name": "phantomWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
							"line": 15,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L15"
						}
					],
					"parameters": [
						{
							"id": 54,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
									"qualifiedName": "PhantomWalletOptions"
								},
								"name": "PhantomWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/phantom.ts",
									"qualifiedName": "PhantomWallet"
								},
								"name": "PhantomWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 55,
			"name": "rainbowWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
					"line": 25,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L25"
				}
			],
			"signatures": [
				{
					"id": 56,
					"name": "rainbowWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
							"line": 25,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L25"
						}
					],
					"parameters": [
						{
							"id": 57,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
									"qualifiedName": "RainbowWalletOptions"
								},
								"name": "RainbowWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/rainbow-wallet.ts",
									"qualifiedName": "RainbowWallet"
								},
								"name": "RainbowWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 327,
			"name": "resolveMimeType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/utils/ipfs.d.ts",
					"line": 4,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 328,
					"name": "resolveMimeType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/utils/ipfs.d.ts",
							"line": 4,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 329,
							"name": "url",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 58,
			"name": "safeWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
					"line": 16,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L16"
				}
			],
			"signatures": [
				{
					"id": 59,
					"name": "safeWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
							"line": 16,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L16"
						}
					],
					"parameters": [
						{
							"id": 60,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/wallet/wallets/safe/types.ts",
											"qualifiedName": "SafeWalletConfigOptions"
										},
										"name": "SafeWalletConfigOptions",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 61,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 62,
													"name": "recommended",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
															"line": 21,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L21"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														62
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
													"line": 17,
													"character": 37,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L17"
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/safe/types.ts",
							"qualifiedName": "SafeWalletConfig"
						},
						"name": "SafeWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 417,
			"name": "shouldNeverPersistQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/query-utils/query-key.d.ts",
					"line": 8,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 418,
					"name": "shouldNeverPersistQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/query-utils/query-key.d.ts",
							"line": 8,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 419,
							"name": "TKey",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
									"qualifiedName": "QueryKey"
								},
								"name": "QueryKey",
								"package": "@tanstack/query-core"
							}
						}
					],
					"parameters": [
						{
							"id": 420,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TKey",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 63,
			"name": "smartWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx",
					"line": 12,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx#L12"
				}
			],
			"signatures": [
				{
					"id": 64,
					"name": "smartWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx",
							"line": 12,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx#L12"
						}
					],
					"parameters": [
						{
							"id": 65,
							"name": "wallet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 423,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 66,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/smartWallet/types.ts",
									"qualifiedName": "SmartWalletConfigOptions"
								},
								"name": "SmartWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/smartWallet/types.ts",
							"qualifiedName": "SmartWalletConfig"
						},
						"name": "SmartWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 67,
			"name": "trustWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
					"line": 22,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L22"
				}
			],
			"signatures": [
				{
					"id": 68,
					"name": "trustWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
							"line": 22,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L22"
						}
					],
					"parameters": [
						{
							"id": 69,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
									"qualifiedName": "TrustWalletOptions"
								},
								"name": "TrustWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/trust.ts",
									"qualifiedName": "TrustWallet"
								},
								"name": "TrustWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 916,
			"name": "useAcceptDirectListingOffer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 706,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 917,
					"name": "useAcceptDirectListingOffer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Accept a specific offer on a direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "will accept the latest offer by the given offeror."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: acceptOffer,\n    isLoading,\n    error,\n  } = useAcceptDirectListingOffer(contract);\n\n  if (error) {\n    console.error(\"failed to accept offer\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => acceptOffer({ listingId: 1, addressOfOfferor: \"{{wallet_address}}\" })}\n    >\n      Accept offer\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to accept an offer on a direct listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useacceptdirectlistingoffer?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 706,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 918,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 919,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 921,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 708,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 922,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 708,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 923,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 920,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 707,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														921,
														920
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 706,
													"character": 114
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1481,
								"name": "AcceptDirectOffer",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1268,
			"name": "useAccountAdmins",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
					"line": 37,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1269,
					"name": "useAccountAdmins",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all admins of account"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accounts, isLoading, error } = useAccountSigners(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all admins of the provided account"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccountadmins?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
							"line": 37,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1270,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1418,
									"name": "WalletAddress",
									"package": "@thirdweb-dev/react-core"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1271,
			"name": "useAccountAdminsAndSigners",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
					"line": 52,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1272,
					"name": "useAccountAdminsAndSigners",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all signers and admins of account"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accounts, isLoading, error } = useAccountSigners(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all admins of the provided account"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccountadmins?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
							"line": 52,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1273,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/account.ts",
										"qualifiedName": "SignerWithPermissions"
									},
									"name": "SignerWithPermissions",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1257,
			"name": "useAccountSigners",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
					"line": 22,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1258,
					"name": "useAccountSigners",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all signers of account"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accounts, isLoading, error } = useAccountSigners(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all signers of the provided account"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccountsigners?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
							"line": 22,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1259,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/account.ts",
										"qualifiedName": "SignerWithPermissions"
									},
									"name": "SignerWithPermissions",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1247,
			"name": "useAccounts",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account-factory.d.ts",
					"line": 23,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1248,
					"name": "useAccounts",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all accounts"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accounts, isLoading, error } = useAccounts(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all accounts with their associated admin"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AccountFactory"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccounts?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account-factory.d.ts",
							"line": 23,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1249,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account factory contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1253,
			"name": "useAccountsForAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account-factory.d.ts",
					"line": 38,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1254,
					"name": "useAccountsForAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all accounts associated with the provided address"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accountsForAddress, isLoading, error } = useAccountsForAddress(contract, \"{{account_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all accounts associated with the address"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AccountFactory"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccountsforaddress?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account-factory.d.ts",
							"line": 38,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1255,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account factory contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1256,
							"name": "address",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 413,
			"name": "useActiveChain",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
					"line": 100,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 414,
					"name": "useActiveChain",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is renamed to "
									},
									{
										"kind": "code",
										"text": "`useChain`"
									},
									{
										"kind": "text",
										"text": "\n\nuse the "
									},
									{
										"kind": "code",
										"text": "`useChain`"
									},
									{
										"kind": "text",
										"text": " hook instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
							"line": 100,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 540,
			"name": "useActiveClaimCondition",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 42,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 541,
					"name": "useActiveClaimCondition",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the active claim condition"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: activeClaimCondition, isLoading, error } = useActiveClaimCondition(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object with the currently active claim condition"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useactiveclaimcondition?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 42,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 542,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721, ERC1155 or ERC20 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1454,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 543,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claim conditions for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 544,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
									"qualifiedName": "ClaimConditionFetchOptions"
								},
								"name": "ClaimConditionFetchOptions",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
											"qualifiedName": "ClaimCondition"
										},
										"name": "ClaimCondition",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 567,
			"name": "useActiveClaimConditionForWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 116,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 568,
					"name": "useActiveClaimConditionForWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the active claim condition for a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: activeClaimConditionForWallet, isLoading, error } = useActiveClaimConditionForWallet(contract, \"{{wallet_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the active claim condition for the wallet address or null if there is no active claim condition"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useactiveclaimconditionforwallet?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 116,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 569,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the  ERC20, ERC721 or ERC1155 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1454,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 570,
							"name": "walletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the wallet address to check the active claim condition for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 571,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claim conditions for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
											"qualifiedName": "ClaimCondition"
										},
										"name": "ClaimCondition",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 824,
			"name": "useActiveListings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 189,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 825,
					"name": "useActiveListings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all active listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: listings, isLoading, error } = useActiveListings(contract, { seller: \"{{wallet_address}}\", tokenContract: \"0x...\", tokenId: 1, start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of listings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useactivelistings?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 189,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 826,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 827,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1260,
			"name": "useAddAdmin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
					"line": 157,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1261,
					"name": "useAddAdmin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add an additional admin on the smart wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: addAdmin,\n    isLoading,\n    error,\n  } = useAddAdmin();\n\n  if (error) {\n    console.error(\"failed to add admin\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => addAdmin(\"0x...\")}\n    >\n      Add admin\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
							"line": 157,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResult"
								},
								"name": "TransactionResult",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 409,
			"name": "useAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
					"line": 48,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 410,
					"name": "useAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for accessing the address of the connected wallet\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useAddress } from \"@thirdweb-dev/react\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "To get the address of the connected wallet, you can use the hook as follows:\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { useAddress } from \"@thirdweb-dev/react\"\n\nconst App = () => {\n  const address = useAddress()\n\n  return <div>{address}</div>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe "
									},
									{
										"kind": "code",
										"text": "`address`"
									},
									{
										"kind": "text",
										"text": " variable will hold the address of the connected wallet if a user has connected using one of the supported wallet connection hooks."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaddress?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
							"line": 48,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1127,
			"name": "useAirdropNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 282,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1128,
					"name": "useAirdropNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Airdrop NFTs to a list of wallets"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: airdropNFT,\n    isLoading,\n    error,\n  } = useAirdropNFT(contract);\n\n  if (error) {\n    console.error(\"failed to transfer batch NFTs\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => airdropNFT({\n         tokenId: 2,\n         addresses: [\n           { address: \"{{wallet_address}}\", quantity: 2 },\n           { address: \"{{wallet_address}}\", quantity: 4 } }\n         ]\n      )}\n    >\n      Airdrop NFT\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to transfer batch NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC1155"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useairdropnft?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 282,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1129,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Erc1155",
										"target": {
											"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
											"qualifiedName": "Erc1155"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
									"qualifiedName": "Erc1155"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/eips.ts",
													"qualifiedName": "BaseERC1155"
												},
												"name": "BaseERC1155",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/eips.ts",
													"qualifiedName": "BaseSignatureMintERC1155"
												},
												"name": "BaseSignatureMintERC1155",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "Erc1155",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1130,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1132,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
															"line": 284,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1133,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
																	"line": 284,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1134,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1131,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
															"line": 283,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1132,
														1131
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
													"line": 282,
													"character": 81
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1434,
								"name": "AirdropNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1161,
			"name": "useAllRoleMembers",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
					"line": 35,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1162,
					"name": "useAllRoleMembers",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all members of all roles"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: roles, isLoading, error } = useAllRoleMembers(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a list of addresses for all supported roles on the contract."
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PermissionsEnumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useallrolemembers?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
							"line": 35,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1163,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1164,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1364,
			"name": "useAppURI",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
					"line": 18,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1365,
					"name": "useAppURI",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get App URI"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: contractMetadata, isLoading, error } = useAppURI(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the appURI of the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AppURI"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
							"line": 18,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1366,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"parameters": [
						{
							"id": 1367,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									},
									{
										"kind": "text",
										"text": " instance of the contract to get the appURI of"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 836,
			"name": "useAuctionWinner",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 237,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 837,
					"name": "useAuctionWinner",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the winner of an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: auctionWinner, isLoading, error } = useAuctionWinner(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the address of the winner of the auction or undefined if there is no winner yet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useauctionwinner?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 237,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 838,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
													"qualifiedName": "Marketplace"
												},
												"name": "Marketplace",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
													"qualifiedName": "MarketplaceV3"
												},
												"name": "MarketplaceV3",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 839,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1294,
			"name": "useAuth",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/index.d.ts",
					"line": 7,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1295,
					"name": "useAuth",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/index.d.ts",
							"line": 7,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/auth.ts",
									"qualifiedName": "ThirdwebAuth"
								},
								"name": "ThirdwebAuth",
								"package": "@thirdweb-dev/auth"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 404,
			"name": "useBalance",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
					"line": 10,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 405,
					"name": "useBalance",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hook to get the native or (optional) ERC20 token balance of the connected wallet."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the balance of the connected wallet (native or ERC20)"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
							"line": 10,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 406,
							"name": "tokenAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the token contract, if empty will use the chain's native token"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 750,
			"name": "useBatchesToReveal",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 71,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 751,
					"name": "useBatchesToReveal",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all unrevealed batches"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that gets the batches to still be revealed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Revealable | ERC1155Revealable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usebatchestoreveal?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 71,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 752,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1455,
								"name": "RevealableContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 753,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "RevealableContract",
										"target": 1455,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
										"qualifiedName": ""
									},
									"name": "BatchToReveal",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 840,
			"name": "useBidBuffer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 253,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 841,
					"name": "useBidBuffer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the bid buffer for an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: bidBuffer, isLoading, error } = useBidBuffer(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of listings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usebidbuffer?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 253,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 842,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
													"qualifiedName": "Marketplace"
												},
												"name": "Marketplace",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
													"qualifiedName": "MarketplaceV3"
												},
												"name": "MarketplaceV3",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 843,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check (only necessary for marketplace v3)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 244,
			"name": "useBloctoWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 245,
					"name": "useBloctoWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
							"line": 5,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 246,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 247,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
											"line": 8,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
										}
									],
									"parameters": [
										{
											"id": 248,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 249,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 250,
																	"name": "chainId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
																			"line": 8,
																			"character": 23,
																			"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		250
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
																	"line": 8,
																	"character": 21,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
															"qualifiedName": "BloctoAdditionalOptions"
														},
														"name": "BloctoAdditionalOptions",
														"package": "@thirdweb-dev/react"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/blocto.ts",
													"qualifiedName": "BloctoWallet"
												},
												"name": "BloctoWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1135,
			"name": "useBurnNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 320,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1136,
					"name": "useBurnNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Burn an NFT"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: burnNFT,\n    isLoading,\n    error,\n  } = useBurnNFT(contract);\n\n  if (error) {\n    console.error(\"failed to burn NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => burnNFT({ tokenId: 0, amount: 1 })}\n    >\n      Burn!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to burn an NFT token from the connected wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Burnable | ERC1155Burnable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useburnnft?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 320,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1137,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1426,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1138,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1139,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1141,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
															"line": 322,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1142,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
																	"line": 322,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1143,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1140,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
															"line": 321,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1141,
														1140
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
													"line": 320,
													"character": 126
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1450,
								"name": "BurnNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1234,
			"name": "useBurnToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
					"line": 254,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1235,
					"name": "useBurnToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Burn tokens"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: burnTokens,\n    isLoading,\n    error,\n  } = useBurnToken(contract);\n\n  if (error) {\n    console.error(\"failed to burn tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => burnTokens({ amount: 1000 })}\n    >\n      Burn!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to burn tokens from the connected wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20Burnable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useburntoken?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
							"line": 254,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1236,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1427,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1237,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1239,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 256,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1240,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
																	"line": 256,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1241,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1238,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 255,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1239,
														1238
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
													"line": 254,
													"character": 101
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1423,
								"name": "TokenBurnParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1072,
			"name": "useBuyDirectListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 817,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1073,
					"name": "useBuyDirectListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Buy a direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\", \"marketplace-v3\");\n  const {\n    mutate: buyNow,\n    isLoading,\n    error,\n  } = useBuyDirectListing(contract);\n\n  if (error) {\n    console.error(\"failed to buy direct listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => buyNow({listingId: 1, quantity: 1, buyer: \"{{address}}\"})}\n    >\n      Buy listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to buy out a direct listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useBuyDirectListing?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 817,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1074,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a MarketplaceV3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1075,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1077,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 819,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1078,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 819,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1079,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1076,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 818,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1077,
														1076
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 817,
													"character": 108
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/types.ts",
									"qualifiedName": "BuyFromListingParams"
								},
								"name": "BuyFromListingParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1064,
			"name": "useBuyNow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 780,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1065,
					"name": "useBuyNow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Buy out an auction listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: buyNow,\n    isLoading,\n    error,\n  } = useBuyNow(contract);\n\n  if (error) {\n    console.error(\"failed to buyout listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => buyNow({listingId: 1, type: ListingType.Auction})}\n    >\n      Buy listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to buy out an auction listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usebuynow?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 780,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1066,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1067,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1069,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 782,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1070,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 782,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1071,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1068,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 781,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1069,
														1068
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 780,
													"character": 96
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1488,
								"name": "BuyNowParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 884,
			"name": "useCancelDirectListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 557,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 885,
					"name": "useCancelDirectListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cancel a direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: cancelDirectListing,\n    isLoading,\n    error,\n  } = useCancelDirectListing(contract);\n\n  if (error) {\n    console.error(\"failed to cancel direct listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={cancelDirectListing}\n    >\n      Cancel Direct Listing\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to cancel a direct listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecanceldirectlisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 557,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 886,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 887,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 889,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 559,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 890,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 559,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 891,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 888,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 558,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														889,
														888
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 557,
													"character": 111
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 892,
			"name": "useCancelEnglishAuction",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 594,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 893,
					"name": "useCancelEnglishAuction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cancel an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: cancelEnglishAuction,\n    isLoading,\n    error,\n  } = useCancelEnglishAuction(contract);\n\n  if (error) {\n    console.error(\"failed to cancel english auction\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={cancelEnglishAuction}\n    >\n      Cancel English Auction\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to cancel an english auction"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecancelenglishauction?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 594,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 894,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 895,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 897,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 596,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 898,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 596,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 899,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 896,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 595,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														897,
														896
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 594,
													"character": 112
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 876,
			"name": "useCancelListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 520,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 877,
					"name": "useCancelListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cancel a listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: cancelListing,\n    isLoading,\n    error,\n  } = useCancelListing(contract);\n\n  if (error) {\n    console.error(\"failed to cancel auction listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={cancelListing}\n    >\n      Cancel Auction Listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to cancel a listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecancellisting?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 520,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 878,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 879,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 881,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 522,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 882,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 522,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 883,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 880,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 521,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														881,
														880
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 520,
													"character": 103
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/marketplace/AuctionListing.ts",
													"qualifiedName": "AuctionListing"
												},
												"name": "AuctionListing",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/marketplace/DirectListing.ts",
													"qualifiedName": "DirectListing"
												},
												"name": "DirectListing",
												"package": "@thirdweb-dev/sdk"
											}
										]
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "id"
											}
										]
									}
								],
								"name": "Pick",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 415,
			"name": "useChain",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
					"line": 92,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 416,
					"name": "useChain",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for accessing the active Chain the current wallet is connected to\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useChain } from \"@thirdweb-dev/react-core\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can get the chain of the connected wallet by using the hook as follows:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { useChain } from \"@thirdweb-dev/react-core\"\n\nconst App = () => {\n  const chain = useChain()\n\n  return <div>{chain.chainId}</div>\n}\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useActiveChain?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
							"line": 92,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 411,
			"name": "useChainId",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
					"line": 70,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 412,
					"name": "useChainId",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for accessing the chain ID of the network the current wallet is connected to\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useChainId } from \"@thirdweb-dev/react\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can get the chain ID of the connected wallet by using the hook as follows:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { useChainId } from \"@thirdweb-dev/react\"\n\nconst App = () => {\n  const chainId = useChainId()\n\n  return <div>{chainId}</div>\n}\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usechainid?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/wallet.d.ts",
							"line": 70,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 557,
			"name": "useClaimConditions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 82,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 558,
					"name": "useClaimConditions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all claim conditions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: claimConditions, isLoading, error } = useClaimConditions(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object with the list of claim conditions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimconditions?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 82,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 559,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721, ERC1155 or ERC20 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1454,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 560,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claim conditions for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 561,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
									"qualifiedName": "ClaimConditionFetchOptions"
								},
								"name": "ClaimConditionFetchOptions",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
										"qualifiedName": "ClaimCondition"
									},
									"name": "ClaimCondition",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 562,
			"name": "useClaimIneligibilityReasons",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 99,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 563,
					"name": "useClaimIneligibilityReasons",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the reasons why a specific wallet can't claim"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: claimIneligibilityReasons, isLoading, error } = useClaimIneligibilityReasons(contract, { walletAddress: \"{{wallet_address}}\" });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object with the reasons for the claim ineligibility"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimineligibilityreasons?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 99,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 564,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the  ERC20, ERC721 or ERC1155 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1454,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 565,
							"name": "params",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 532,
								"name": "ClaimIneligibilityParams",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 566,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claim conditions for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
										"qualifiedName": ""
									},
									"name": "ClaimEligibility",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 754,
			"name": "useClaimNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 109,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 755,
					"name": "useClaimNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Claim an NFT to a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: claimNFT,\n    isLoading,\n    error,\n  } = useClaimNFT(contract);\n\n  if (error) {\n    console.error(\"failed to claim nft\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => claimNFT({ to: \"{{wallet_address}}\", quantity: 1 })}\n    >\n      Claim NFT!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to claim a NFT to the wallet specificed in the params"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Claimable | ERC1155Claimable | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimnft?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 109,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 756,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1454,
								"name": "DropContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 757,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DropContract",
										"target": 1454,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1471,
								"name": "ClaimNFTReturnType",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1465,
								"name": "ClaimNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1210,
			"name": "useClaimToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
					"line": 140,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1211,
					"name": "useClaimToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Claim tokens to a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: claimTokens,\n    isLoading,\n    error,\n  } = useClaimToken(contract);\n\n  if (error) {\n    console.error(\"failed to claim tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => claimTokens({ to: \"{{wallet_address}}\", amount: 100 })}\n    >\n      Claim Tokens!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to tokens to the wallet specified in the params"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimtoken?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
							"line": 140,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1212,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1427,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1213,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1215,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 142,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1216,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
																	"line": 142,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1217,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1214,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 141,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1215,
														1214
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
													"line": 140,
													"character": 102
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1498,
								"name": "ClaimTokenParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 747,
			"name": "useClaimedNFTSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 62,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 748,
					"name": "useClaimedNFTSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total number of claimed NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the number of NFTs that are claimed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimednftsupply?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 62,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 749,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721 spec (NFT drop, Signature Drop, or any custom contract that extends the ERC721 spec)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
															"qualifiedName": "BaseContract"
														},
														"name": "BaseContract",
														"package": "@ethersproject/contracts"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
													"qualifiedName": "NFTDrop"
												},
												"name": "NFTDrop",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
													"qualifiedName": "SignatureDrop"
												},
												"name": "SignatureDrop",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/src.ts/index.ts",
									"qualifiedName": ""
								},
								"name": "BigNumber",
								"package": "ethers"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 739,
			"name": "useClaimedNFTs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 45,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 740,
					"name": "useClaimedNFTs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all claimed NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "Equivalent to using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useNFTs",
										"target": 1085
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: claimedNFTs, isLoading, error } = useClaimedNFTs(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of NFTs that are claimed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimednfts?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 45,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 741,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721 spec (NFT drop, Signature Drop, or any custom contract that extends the ERC721 spec)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
											"qualifiedName": "NFTDrop"
										},
										"name": "NFTDrop",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 742,
							"name": "queryParams",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "query params to pass to the query for the sake of pagination"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 743,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/QueryParams.d.ts",
											"line": 12,
											"character": 3
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFT"
									},
									"name": "NFT",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 545,
			"name": "useClaimerProofs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 60,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 546,
					"name": "useClaimerProofs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get claimer proofs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: claimerProofs, isLoading, error } = useClaimerProofs(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object with the snapshot for the provided address"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimerproofs?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 60,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 547,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721, ERC1155 or ERC20 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1454,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 548,
							"name": "claimerAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the claimer to fetch the claimer proofs for"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 549,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claimer proofs for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 550,
							"name": "claimConditionId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "optional the claim condition id to get the proofs for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 551,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 552,
													"name": "address",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
															"line": 61,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 556,
													"name": "currencyAddress",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
															"line": 65,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 554,
													"name": "maxClaimable",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
															"line": 63,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 555,
													"name": "price",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
															"line": 64,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 553,
													"name": "proof",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
															"line": 62,
															"character": 4
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														552,
														556,
														554,
														555,
														553
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
													"line": 60,
													"character": 177
												}
											]
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 230,
			"name": "useCoinbaseWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 231,
					"name": "useCoinbaseWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 232,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 233,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 234,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 235,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 236,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																236
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/coinbase-wallet.ts",
													"qualifiedName": "CoinbaseWallet"
												},
												"name": "CoinbaseWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 650,
			"name": "useCompilerMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 15,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 651,
					"name": "useCompilerMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 15,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 652,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/schema/contracts/custom.ts",
											"qualifiedName": "PublishedMetadata"
										},
										"name": "PublishedMetadata",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 362,
			"name": "useConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 41,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 363,
					"name": "useConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to connect to a wallet class"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 41,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 364,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
									"line": 41,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 365,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 367,
											"name": "I",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 488,
												"name": "WalletInstance",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"parameters": [
										{
											"id": 366,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "intrinsic",
													"name": "undefined"
												},
												"extendsType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": 0
													},
													"objectType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Parameters"
														},
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "connect"
																},
																"objectType": {
																	"type": "reference",
																	"target": -1,
																	"name": "I",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "Parameters",
														"package": "typescript"
													}
												},
												"trueType": {
													"type": "tuple",
													"elements": [
														{
															"type": "namedTupleMember",
															"name": "wallet",
															"isOptional": false,
															"element": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../react-core/src/core/types/wallet.ts",
																	"qualifiedName": ""
																},
																"name": "WalletConfig",
																"package": "@thirdweb-dev/react-core"
															}
														},
														{
															"type": "namedTupleMember",
															"name": "connectParams",
															"isOptional": true,
															"element": {
																"type": "union",
																"types": [
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": 0
																			},
																			"objectType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Parameters"
																				},
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "connect"
																						},
																						"objectType": {
																							"type": "reference",
																							"target": -1,
																							"name": "I",
																							"refersToTypeParameter": true
																						}
																					}
																				],
																				"name": "Parameters",
																				"package": "typescript"
																			}
																		},
																		"extendsType": {
																			"type": "inferred",
																			"name": "T"
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": -1,
																				"name": "T",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": 0
																				},
																				"objectType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Parameters"
																					},
																					"typeArguments": [
																						{
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "connect"
																							},
																							"objectType": {
																								"type": "reference",
																								"target": -1,
																								"name": "I",
																								"refersToTypeParameter": true
																							}
																						}
																					],
																					"name": "Parameters",
																					"package": "typescript"
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": -1,
																					"name": "T",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "literal",
																							"value": null
																						},
																						{
																							"type": "intrinsic",
																							"name": "undefined"
																						}
																					]
																				},
																				"trueType": {
																					"type": "intrinsic",
																					"name": "never"
																				},
																				"falseType": {
																					"type": "reference",
																					"target": -1,
																					"name": "T",
																					"refersToTypeParameter": true
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														}
													]
												},
												"falseType": {
													"type": "tuple",
													"elements": [
														{
															"type": "namedTupleMember",
															"name": "wallet",
															"isOptional": false,
															"element": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../react-core/src/core/types/wallet.ts",
																	"qualifiedName": ""
																},
																"name": "WalletConfig",
																"package": "@thirdweb-dev/react-core"
															}
														},
														{
															"type": "namedTupleMember",
															"name": "connectParams",
															"isOptional": false,
															"element": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": 0
																	},
																	"objectType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Parameters"
																		},
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "connect"
																				},
																				"objectType": {
																					"type": "reference",
																					"target": -1,
																					"name": "I",
																					"refersToTypeParameter": true
																				}
																			}
																		],
																		"name": "Parameters",
																		"package": "typescript"
																	}
																},
																"extendsType": {
																	"type": "inferred",
																	"name": "T_1"
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": -1,
																		"name": "T_1",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": 0
																		},
																		"objectType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Parameters"
																			},
																			"typeArguments": [
																				{
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "connect"
																					},
																					"objectType": {
																						"type": "reference",
																						"target": -1,
																						"name": "I",
																						"refersToTypeParameter": true
																					}
																				}
																			],
																			"name": "Parameters",
																			"package": "typescript"
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": -1,
																			"name": "T_1",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "literal",
																					"value": null
																				},
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				}
																			]
																		},
																		"trueType": {
																			"type": "intrinsic",
																			"name": "never"
																		},
																		"falseType": {
																			"type": "reference",
																			"target": -1,
																			"name": "T_1",
																			"refersToTypeParameter": true
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "I",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 368,
			"name": "useConnectionStatus",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 58,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 369,
					"name": "useConnectionStatus",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the connection status of the wallet\n\nIt can be one of the following:\n1. "
									},
									{
										"kind": "code",
										"text": "`unknown`"
									},
									{
										"kind": "text",
										"text": " - when wallet connection status is not yet known\n2. "
									},
									{
										"kind": "code",
										"text": "`connecting`"
									},
									{
										"kind": "text",
										"text": " - when wallet is connecting\n3. "
									},
									{
										"kind": "code",
										"text": "`connected`"
									},
									{
										"kind": "text",
										"text": " - when wallet is connected\n4. "
									},
									{
										"kind": "code",
										"text": "`disconnected`"
									},
									{
										"kind": "text",
										"text": " - when wallet is disconnected"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 58,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "unknown"
							},
							{
								"type": "literal",
								"value": "connected"
							},
							{
								"type": "literal",
								"value": "disconnected"
							},
							{
								"type": "literal",
								"value": "connecting"
							}
						]
					}
				}
			]
		},
		{
			"id": 662,
			"name": "useContract",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 24,
					"character": 24
				},
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 38,
					"character": 24
				},
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 53,
					"character": 24
				},
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 68,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 663,
					"name": "useContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 24,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 664,
							"name": "TContractAddress",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 665,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContractAddress",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 730,
						"typeArguments": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TContractAddress",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../generated-abis/src/index.ts",
										"qualifiedName": "ContractAddress"
									},
									"name": "GeneratedContractAddress",
									"package": "@thirdweb-dev/generated-abis",
									"qualifiedName": "ContractAddress"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
										"qualifiedName": "SmartContract"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/types/contract.ts",
												"qualifiedName": "BaseContractForAddress"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "TContractAddress",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseContractForAddress",
											"package": "@thirdweb-dev/sdk"
										}
									],
									"name": "SmartContract",
									"package": "@thirdweb-dev/sdk"
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
										"qualifiedName": "SmartContract"
									},
									"name": "SmartContract",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseContractResult",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 666,
					"name": "useContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use this resolve a contract address to a smart contract instance."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract, isLoading, error } = useContract(\"{{contract_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract once it is resolved"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontract?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 38,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 667,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the deployed contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 730,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
									"qualifiedName": "SmartContract"
								},
								"name": "SmartContract",
								"package": "@thirdweb-dev/sdk"
							}
						],
						"name": "UseContractResult",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 668,
					"name": "useContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use this resolve a contract address to a smart contract instance."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract, isLoading, error } = useContract(\"{{contract_address}}\", \"nft-drop\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract once it is resolved"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontract?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 53,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 669,
							"name": "TContractType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "split"
									},
									{
										"type": "literal",
										"value": "custom"
									},
									{
										"type": "literal",
										"value": "token"
									},
									{
										"type": "literal",
										"value": "vote"
									},
									{
										"type": "literal",
										"value": "edition-drop"
									},
									{
										"type": "literal",
										"value": "edition"
									},
									{
										"type": "literal",
										"value": "marketplace"
									},
									{
										"type": "literal",
										"value": "marketplace-v3"
									},
									{
										"type": "literal",
										"value": "multiwrap"
									},
									{
										"type": "literal",
										"value": "nft-collection"
									},
									{
										"type": "literal",
										"value": "nft-drop"
									},
									{
										"type": "literal",
										"value": "pack"
									},
									{
										"type": "literal",
										"value": "signature-drop"
									},
									{
										"type": "literal",
										"value": "token-drop"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 670,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the deployed contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 671,
							"name": "_contractType",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the type of the contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TContractType",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 730,
						"typeArguments": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TContractType",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/index.ts",
										"qualifiedName": "PrebuiltContractType"
									},
									"name": "PrebuiltContractType",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/index.ts",
										"qualifiedName": "ContractForPrebuiltContractType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "TContractType",
											"refersToTypeParameter": true
										}
									],
									"name": "ContractForPrebuiltContractType",
									"package": "@thirdweb-dev/sdk"
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
										"qualifiedName": "SmartContract"
									},
									"name": "SmartContract",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseContractResult",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 672,
					"name": "useContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use this resolve a contract address to a smart contract instance."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract, isLoading, error } = useContract(\"{{contract_address}}\", ABI);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract once it is resolved"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontract?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 68,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 673,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the deployed contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 674,
							"name": "_abi",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the ABI of the contract to use"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
									"qualifiedName": "ContractInterface"
								},
								"name": "ContractInterface",
								"package": "@ethersproject/contracts"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 730,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
									"qualifiedName": "SmartContract"
								},
								"name": "SmartContract",
								"package": "@thirdweb-dev/sdk"
							}
						],
						"name": "UseContractResult",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 693,
			"name": "useContractEvents",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 144,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 694,
					"name": "useContractEvents",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get or subscribe to contract events"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: contractEvents, isLoading } = useContractEvents(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract events"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontractevents?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 144,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 695,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidContractInstance",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instance of the contract to listen to events for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 696,
							"name": "eventName",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the name of the event to query for (omit this or pass "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " to query for all events)"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 697,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "options includes the filters ("
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "QueryAllEvents"
									},
									{
										"kind": "text",
										"text": ") for the query as well as if you want to subscribe to real-time updates (default: true)"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 698,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 699,
											"name": "queryFilter",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 145,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/events.ts",
													"qualifiedName": "EventQueryOptions"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "EventQueryOptions",
												"package": "@thirdweb-dev/sdk"
											}
										},
										{
											"id": 700,
											"name": "subscribe",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 146,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												699,
												700
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
											"line": 144,
											"character": 120
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/events.ts",
										"qualifiedName": "ContractEvent"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									],
									"name": "ContractEvent",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 675,
			"name": "useContractMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 82,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 676,
					"name": "useContractMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the metadata of this contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: contractMetadata, isLoading } = useContractMetadata(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract metadata of the deployed contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ContractMetadata"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 82,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 677,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"parameters": [
						{
							"id": 678,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidContractInstance",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instance of the contract to get the metadata for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 421,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "TContract",
											"refersToTypeParameter": true
										}
									],
									"name": "RequiredParam",
									"package": "@thirdweb-dev/react-core"
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "undefined"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "undefined"
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Awaited"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "ReturnType"
											},
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "get"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "metadata"
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "TContract",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"name": "ReturnType",
											"package": "typescript"
										}
									],
									"name": "Awaited",
									"package": "typescript"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 679,
			"name": "useContractMetadataUpdate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 116,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 680,
					"name": "useContractMetadataUpdate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Update the metadata of this contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updateContractMetadata,\n    isLoading,\n    error,\n  } = useContractMetadataUpdate(contract);\n\n  if (error) {\n    console.error(\"failed to update contract metadata\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updateContractMetadata({ name: \"New name\", description: \"New description\" })}\n    >\n      Update contract metadata\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract metadata of the deployed contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ContractMetadata"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 116,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 681,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidContractInstance",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instance of the contract to get the metadata for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 682,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 684,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 118,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 685,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
															"line": 118,
															"character": 10
														}
													],
													"signatures": [
														{
															"id": 686,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 683,
											"name": "receipt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 117,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
													"qualifiedName": "TransactionReceipt"
												},
												"name": "providers.TransactionReceipt",
												"package": "@ethersproject/abstract-provider",
												"qualifiedName": "TransactionReceipt"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												684,
												683
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
											"line": 116,
											"character": 117
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 687,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 692,
											"name": "app_uri",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 124,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 689,
											"name": "description",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 121,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 691,
											"name": "external_link",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 123,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 690,
											"name": "image",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 122,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 688,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 120,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												692,
												689,
												691,
												690,
												688
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
											"line": 119,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 701,
			"name": "useContractRead",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 164,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 702,
					"name": "useContractRead",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get data from a contract read-function call"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\nconst { data, isLoading, error } = useContractRead(contract, \"functionName\", ...args);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the data returned by the function call"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontractread?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 164,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 703,
							"name": "TContractAddress",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 704,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 705,
							"name": "TContractInstance",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 706,
							"name": "TFunctionName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 707,
							"name": "TArgs",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 708,
							"name": "TReturnType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"parameters": [
						{
							"id": 709,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the contract instance of the contract to call a function on"
									}
								]
							},
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TContractInstance",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/index.ts",
										"qualifiedName": "ValidContractInstance"
									},
									"name": "ValidContractInstance",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": 421,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "TContractInstance",
											"refersToTypeParameter": true
										}
									],
									"name": "RequiredParam",
									"package": "@thirdweb-dev/react-core"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": -1,
										"name": "TContractAddress",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "never"
									},
									"trueType": {
										"type": "reference",
										"target": 421,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/contract.ts",
															"qualifiedName": "BaseContractForAddress"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TContractAddress",
																"refersToTypeParameter": true
															}
														],
														"name": "BaseContractForAddress",
														"package": "@thirdweb-dev/sdk"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										],
										"name": "RequiredParam",
										"package": "@thirdweb-dev/react-core"
									},
									"falseType": {
										"type": "reference",
										"target": 421,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
															"qualifiedName": "BaseContract"
														},
														"name": "BaseContract",
														"package": "@ethersproject/contracts"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										],
										"name": "RequiredParam",
										"package": "@thirdweb-dev/react-core"
									}
								}
							}
						},
						{
							"id": 710,
							"name": "functionName",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the name of the function to call"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "TFunctionName",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 711,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The arguments to pass to the function (if any), with optional call arguments as the last parameter"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TArgs",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 712,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
									"qualifiedName": "CallOverrides"
								},
								"name": "CallOverrides",
								"package": "@ethersproject/contracts"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "TReturnType",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 638,
			"name": "useContractType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 8,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 639,
					"name": "useContractType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 8,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 640,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "split"
									},
									{
										"type": "literal",
										"value": "edition-drop"
									},
									{
										"type": "literal",
										"value": "edition"
									},
									{
										"type": "literal",
										"value": "marketplace"
									},
									{
										"type": "literal",
										"value": "marketplace-v3"
									},
									{
										"type": "literal",
										"value": "multiwrap"
									},
									{
										"type": "literal",
										"value": "nft-collection"
									},
									{
										"type": "literal",
										"value": "nft-drop"
									},
									{
										"type": "literal",
										"value": "pack"
									},
									{
										"type": "literal",
										"value": "signature-drop"
									},
									{
										"type": "literal",
										"value": "token-drop"
									},
									{
										"type": "literal",
										"value": "token"
									},
									{
										"type": "literal",
										"value": "vote"
									},
									{
										"type": "literal",
										"value": "custom"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 713,
			"name": "useContractWrite",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
					"line": 183,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 714,
					"name": "useContractWrite",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mke a write call to your contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\nconst { mutate: myFunction, isLoading, error } = useContractWrite(contract, \"myFunction\");\n\n// the function can be called as follows:\n// myFunction([\"param 1\", \"param 2\", ...])\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the write function to call"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontractwrite?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
							"line": 183,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 715,
							"name": "TContractAddress",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 716,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 717,
							"name": "TContractInstance",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 718,
							"name": "TFunctionName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 719,
							"name": "TArgs",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 720,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the contract instance of the contract to call a function on"
									}
								]
							},
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TContractInstance",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/index.ts",
										"qualifiedName": "ValidContractInstance"
									},
									"name": "ValidContractInstance",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": 421,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "TContractInstance",
											"refersToTypeParameter": true
										}
									],
									"name": "RequiredParam",
									"package": "@thirdweb-dev/react-core"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": -1,
										"name": "TContractAddress",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "never"
									},
									"trueType": {
										"type": "reference",
										"target": 421,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/contract.ts",
															"qualifiedName": "BaseContractForAddress"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TContractAddress",
																"refersToTypeParameter": true
															}
														],
														"name": "BaseContractForAddress",
														"package": "@thirdweb-dev/sdk"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										],
										"name": "RequiredParam",
										"package": "@thirdweb-dev/react-core"
									},
									"falseType": {
										"type": "reference",
										"target": 421,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
															"qualifiedName": "BaseContract"
														},
														"name": "BaseContract",
														"package": "@ethersproject/contracts"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										],
										"name": "RequiredParam",
										"package": "@thirdweb-dev/react-core"
									}
								}
							}
						},
						{
							"id": 721,
							"name": "functionName",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the name of the function to call"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "TFunctionName",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 722,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 724,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
															"line": 185,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 725,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
																	"line": 185,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 726,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 723,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
															"line": 184,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														724,
														723
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 183,
													"character": 1247
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 727,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 728,
											"name": "args",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 187,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "TArgs",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 729,
											"name": "overrides",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
													"line": 188,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "CallOverrides"
												},
												"name": "CallOverrides",
												"package": "@ethersproject/contracts"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												728,
												729
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contracts.d.ts",
											"line": 186,
											"character": 21
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1250,
			"name": "useCreateAccount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account-factory.d.ts",
					"line": 91,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1251,
					"name": "useCreateAccount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a account"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: createAccount,\n    isLoading,\n    error,\n  } = useCreateAccount(contract);\n\n  if (error) {\n    console.error(\"failed to create account\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => createAccount(\"0x...\")}\n    >\n      Create Account\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to create a account"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AccountFactory"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecreateaccount?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account-factory.d.ts",
							"line": 91,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1252,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account factory contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 861,
			"name": "useCreateAuctionListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 475,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 862,
					"name": "useCreateAuctionListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a new english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: createAuctionListing,\n    isLoading,\n    error,\n  } = useCreateAuctionListing(contract);\n\n  if (error) {\n    console.error(\"failed to create auction listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => createAuctionListing(auctionListingData)}\n    >\n      Create Auction Listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to create a new auction listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecreateauctionlisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 475,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 863,
							"name": "TMarketplace",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 864,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TMarketplace",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "TransactionResultWithId",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TMarketplace",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
										"qualifiedName": "Marketplace"
									},
									"name": "Marketplace",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/marketplace/NewAuctionListing.ts",
										"qualifiedName": "NewAuctionListing"
									},
									"name": "NewAuctionListing",
									"package": "@thirdweb-dev/sdk"
								},
								"falseType": {
									"type": "reflection",
									"declaration": {
										"id": 865,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 869,
												"name": "assetContractAddress",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 479,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 873,
												"name": "bidBufferBps",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 483,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "bigint"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																"qualifiedName": "BigNumber"
															},
															"name": "BigNumber",
															"package": "@ethersproject/bignumber"
														}
													]
												}
											},
											{
												"id": 868,
												"name": "buyoutBidAmount",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 478,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											},
											{
												"id": 871,
												"name": "currencyContractAddress",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 481,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 875,
												"name": "endTimestamp",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 485,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Date"
															},
															"name": "Date",
															"package": "typescript"
														}
													]
												}
											},
											{
												"id": 867,
												"name": "minimumBidAmount",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 477,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											},
											{
												"id": 870,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 480,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "bigint"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																"qualifiedName": "BigNumber"
															},
															"name": "BigNumber",
															"package": "@ethersproject/bignumber"
														}
													]
												}
											},
											{
												"id": 874,
												"name": "startTimestamp",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 484,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Date"
															},
															"name": "Date",
															"package": "typescript"
														}
													]
												}
											},
											{
												"id": 872,
												"name": "timeBufferInSeconds",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 482,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "bigint"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																"qualifiedName": "BigNumber"
															},
															"name": "BigNumber",
															"package": "@ethersproject/bignumber"
														}
													]
												}
											},
											{
												"id": 866,
												"name": "tokenId",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 476,
														"character": 4
													}
												],
												"type": {
													"type": "intersection",
													"types": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "bigint"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																		"qualifiedName": "BigNumber"
																	},
																	"name": "BigNumber",
																	"package": "@ethersproject/bignumber"
																}
															]
														},
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "bigint"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																		"qualifiedName": "BigNumber"
																	},
																	"name": "BigNumber",
																	"package": "@ethersproject/bignumber"
																},
																{
																	"type": "intrinsic",
																	"name": "undefined"
																}
															]
														}
													]
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													869,
													873,
													868,
													871,
													875,
													867,
													870,
													874,
													872,
													866
												]
											}
										],
										"sources": [
											{
												"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
												"line": 475,
												"character": 273
											}
										]
									}
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 848,
			"name": "useCreateDirectListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 432,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 849,
					"name": "useCreateDirectListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a new direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: createDirectListing,\n    isLoading,\n    error,\n  } = useCreateDirectListing(contract);\n\n  if (error) {\n    console.error(\"failed to create direct listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => createDirectListing(directListingData)}\n    >\n      Create Direct Listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to create a new direct listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecreatedirectlisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 432,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 850,
							"name": "TMarketplace",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 851,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TMarketplace",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "TransactionResultWithId",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TMarketplace",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
										"qualifiedName": "Marketplace"
									},
									"name": "Marketplace",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/marketplace/NewDirectListing.ts",
										"qualifiedName": "NewDirectListing"
									},
									"name": "NewDirectListing",
									"package": "@thirdweb-dev/sdk"
								},
								"falseType": {
									"type": "reflection",
									"declaration": {
										"id": 852,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 855,
												"name": "assetContractAddress",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 435,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 857,
												"name": "currencyContractAddress",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 437,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 859,
												"name": "endTimestamp",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 439,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Date"
															},
															"name": "Date",
															"package": "typescript"
														}
													]
												}
											},
											{
												"id": 860,
												"name": "isReservedListing",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 440,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											},
											{
												"id": 854,
												"name": "pricePerToken",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 434,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											},
											{
												"id": 856,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 436,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "bigint"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																"qualifiedName": "BigNumber"
															},
															"name": "BigNumber",
															"package": "@ethersproject/bignumber"
														}
													]
												}
											},
											{
												"id": 858,
												"name": "startTimestamp",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 438,
														"character": 4
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Date"
															},
															"name": "Date",
															"package": "typescript"
														}
													]
												}
											},
											{
												"id": 853,
												"name": "tokenId",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
														"line": 433,
														"character": 4
													}
												],
												"type": {
													"type": "intersection",
													"types": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "bigint"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																		"qualifiedName": "BigNumber"
																	},
																	"name": "BigNumber",
																	"package": "@ethersproject/bignumber"
																}
															]
														},
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "bigint"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																		"qualifiedName": "BigNumber"
																	},
																	"name": "BigNumber",
																	"package": "@ethersproject/bignumber"
																},
																{
																	"type": "intrinsic",
																	"name": "undefined"
																}
															]
														}
													]
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													855,
													857,
													859,
													860,
													854,
													856,
													858,
													853
												]
											}
										],
										"sources": [
											{
												"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
												"line": 432,
												"character": 271
											}
										]
									}
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1264,
			"name": "useCreateSessionKey",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
					"line": 97,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1265,
					"name": "useCreateSessionKey",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create and add a session key for the smart wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: createSessionKey,\n    isLoading,\n    error,\n  } = useCreateSessionKey();\n\n  if (error) {\n    console.error(\"failed to create session key\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => createSessionKey(\n        \"0x...\",\n        {\n          approvedCallTargets: [\"0x...\"], // the addresses of contracts that the session key can call\n          nativeTokenLimitPerTransaction: 0.1, // the maximum amount of native token (in ETH) that the session key can spend per transaction\n          startDate: new Date(), // the date when the session key becomes active\n          expirationDate = new Date(Date.now() + 24 * 60 * 60 * 1000); // the date when the session key expires\n        }\n       )}\n    >\n      Create Session Key\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
							"line": 97,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResult"
								},
								"name": "TransactionResult",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
									"qualifiedName": "CreateSessionKeyInput"
								},
								"name": "CreateSessionKeyInput",
								"package": "@thirdweb-dev/react-core"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 370,
			"name": "useCreateWalletInstance",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 68,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 371,
					"name": "useCreateWalletInstance",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to create an instance of given wallet class"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 68,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 372,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
									"line": 68,
									"character": 51
								}
							],
							"signatures": [
								{
									"id": 373,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 375,
											"name": "I",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 488,
												"name": "WalletInstance",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"parameters": [
										{
											"id": 374,
											"name": "Wallet",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../react-core/src/core/types/wallet.ts",
													"qualifiedName": ""
												},
												"name": "WalletConfig",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "I",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 766,
			"name": "useDelayedRevealLazyMint",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 181,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 767,
					"name": "useDelayedRevealLazyMint",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Lazy mint NFTs with delayed reveal"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: delayedRevealLazyMint,\n    isLoading,\n    error,\n  } = useDelayedRevealLazyMint(contract);\n\n  if (error) {\n    console.error(\"failed to lazy mint NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => delayedRevealLazyMint({ metadatas: [{ name: \"My NFT!\"}] })}\n    >\n      Delayed Reveal Lazy mint NFT!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to lazy mint a batch of NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Revealable | ERC1155Revealable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usedelayedreveallazymint?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 181,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 768,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1455,
								"name": "RevealableContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 769,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DropContract",
										"target": 1454,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 770,
							"name": "onProgress",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an optional callback that will be called with the progress of the upload"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 771,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
											"line": 181,
											"character": 136
										}
									],
									"signatures": [
										{
											"id": 772,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
													"line": 181,
													"character": 136
												}
											],
											"parameters": [
												{
													"id": 773,
													"name": "progress",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/events.ts",
															"qualifiedName": "UploadProgressEvent"
														},
														"name": "UploadProgressEvent",
														"package": "@thirdweb-dev/sdk"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
										"qualifiedName": ""
									},
									"name": "TransactionResultWithId",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1456,
								"name": "DelayedRevealLazyMintInput",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 787,
			"name": "useDirectListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 41,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 788,
					"name": "useDirectListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get a direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0; // the listing id to check\nconst { data: directListing, isLoading, error } = useListing(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the desired direct listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usedirectlisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 41,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 789,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 790,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 799,
			"name": "useDirectListings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 87,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 800,
					"name": "useDirectListings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all direct listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: directListings, isLoading, error } = useDirectListings(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of direct listings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usedirectlistings?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 87,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 801,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 802,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 818,
			"name": "useDirectListingsCount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 160,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 819,
					"name": "useDirectListingsCount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total count of direct listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: directListingsCount, isLoading, error } = useDirectListingsCount(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the direct listings count"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usedirectlistingscount?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 160,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 820,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 376,
			"name": "useDisconnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 46,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 377,
					"name": "useDisconnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to disconnect from the current active wallet"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 46,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 378,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
									"line": 46,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 379,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1378,
			"name": "useENS",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useENS.d.ts",
					"line": 1,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1379,
					"name": "useENS",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useENS.d.ts",
							"line": 1,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1310,
			"name": "useEdition",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useEdition.d.ts",
					"line": 32,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1311,
					"name": "useEdition",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`Edition`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is used to interface with ERC1155 compliant NFTs."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"edition\")\n\n  // Now you can use the edition contract in the rest of the component\n\n  // For example, this function will return all the NFTs on this contract\n  async function getNFTs() {\n    const nfts = await contract.getAll()\n    return nfts\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const edition = useEdition(\"0x1234...\");\n+ const edition = useContract(\"0x1234...\", \"edition\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useEdition.d.ts",
							"line": 32,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1312,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Edition contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "Edition",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1307,
			"name": "useEditionDrop",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useEditionDrop.d.ts",
					"line": 31,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1308,
					"name": "useEditionDrop",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`EditionDrop`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is used to interface with ERC1155 compliant NFTs that can be lazily minted."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"edition-drop\")\n\n  // Now you can use the edition drop contract in the rest of the component\n\n  // For example, this function will let the connected wallet claim a new NFT\n  async function claim(tokenId, quantity) {\n    await contract.claim(tokenId, quantity)\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const editionDrop = useEditionDrop(\"0x1234...\");\n+ const editionDrop = useContract(\"0x1234...\", \"edition-drop\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useEditionDrop.d.ts",
							"line": 31,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1309,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Edition Drop contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "EditionDrop",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 251,
			"name": "useEmbeddedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
					"line": 20,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L20"
				}
			],
			"signatures": [
				{
					"id": 252,
					"name": "useEmbeddedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to authenticate and connect to an embedded wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a function to connect to an embedded wallet"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
							"line": 20,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L20"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 253,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 254,
									"name": "connect",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
											"line": 71,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L71"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 255,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
													"line": 28,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L28"
												}
											],
											"signatures": [
												{
													"id": 256,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
															"line": 28,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L28"
														}
													],
													"parameters": [
														{
															"id": 257,
															"name": "authParams",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/types.ts",
																	"qualifiedName": "AuthParams"
																},
																"name": "AuthParams",
																"package": "@thirdweb-dev/wallets"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/wallets/embedded-wallet.ts",
																	"qualifiedName": "EmbeddedWallet"
																},
																"name": "EmbeddedWallet",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 258,
									"name": "sendVerificationEmail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
											"line": 72,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L72"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
													"line": 55,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L55"
												}
											],
											"signatures": [
												{
													"id": 260,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
															"line": 55,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L55"
														}
													],
													"parameters": [
														{
															"id": 261,
															"name": "__namedParameters",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 262,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 263,
																			"name": "email",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
																					"line": 55,
																					"character": 24,
																					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L55"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				263
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
																			"line": 55,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L55"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts",
																	"qualifiedName": "SendEmailOtpReturnType"
																},
																"name": "SendEmailOtpReturnType",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										254,
										258
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
									"line": 70,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L70"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 264,
			"name": "useEmbeddedWalletSendVerificationEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 265,
					"name": "useEmbeddedWalletSendVerificationEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
							"line": 5,
							"character": 54,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 266,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
									"line": 9,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 267,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
											"line": 9,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 268,
											"name": "email",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts",
													"qualifiedName": "SendEmailOtpReturnType"
												},
												"name": "SendEmailOtpReturnType",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 791,
			"name": "useEnglishAuction",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 57,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 792,
					"name": "useEnglishAuction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst auctionId = 0; // the listing id to check\nconst { data: englishAuction, isLoading, error } = useEnglishAuction(contract, auctionId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the desired english auction"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useenglishauctions?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 57,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 793,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 794,
							"name": "auctionId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the auction id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 832,
			"name": "useEnglishAuctionWinningBid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 221,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 833,
					"name": "useEnglishAuctionWinningBid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the winning bid for an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: winningBid, isLoading, error } = useWinningBid(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Bid"
									},
									{
										"kind": "text",
										"text": " that is winning the auction"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useenglishauctionwinningbid?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 221,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 834,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 835,
							"name": "auctionId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the auction id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 807,
			"name": "useEnglishAuctions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 117,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 808,
					"name": "useEnglishAuctions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all english auctions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: englishAuctions, isLoading, error } = useEnglishAuctions(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of english auctions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useenglishauctions?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 117,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 809,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 810,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 821,
			"name": "useEnglishAuctionsCount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 174,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 822,
					"name": "useEnglishAuctionsCount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total count of english auctions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: englishAuctionsCount, isLoading, error } = useEnglishAuctionsCount(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the direct english actions count"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useenglishauctionscount?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 174,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 823,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 924,
			"name": "useExecuteAuctionSale",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 743,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 925,
					"name": "useExecuteAuctionSale",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute an auction sale. Can only be executed once the auction has ended and the auction has a winning bid."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: executeAuctionSale,\n    isLoading,\n    error,\n  } = useExecuteAuctionSale(contract);\n\n  if (error) {\n    console.error(\"failed to execute sale\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => executeAuctionSale({ listingId: 1 })}\n    >\n      Execute sale\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to accept an offer on a direct listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useexecuteauctionsale?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 743,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 926,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 927,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 929,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 745,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 930,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 745,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 931,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 928,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 744,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														929,
														928
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 743,
													"character": 108
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1485,
								"name": "ExecuteAuctionSale",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 237,
			"name": "useFrameWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useFrame.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 238,
					"name": "useFrameWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useFrame.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 239,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 240,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 241,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 242,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 243,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																243
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/frame.ts",
													"qualifiedName": "FrameWallet"
												},
												"name": "FrameWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1180,
			"name": "useGrantRole",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
					"line": 140,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1181,
					"name": "useGrantRole",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Grant a role to a specific address"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: grantRole,\n    isLoading,\n    error,\n  } = useGrantRole(contract);\n\n  if (error) {\n    console.error(\"failed to grant role\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => grantRole({ role: \"admin\", address: {{wallet_address}} })}\n    >\n      Grant Role\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to grant a member of a role on the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Permissions | PermissionsEnumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usegrantrole?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
							"line": 140,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1182,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1183,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 202,
			"name": "useInstalledWallets",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/hooks/useInstalledWallets.ts",
					"line": 7,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/hooks/useInstalledWallets.ts#L7"
				}
			],
			"signatures": [
				{
					"id": 203,
					"name": "useInstalledWallets",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/hooks/useInstalledWallets.ts",
							"line": 7,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/hooks/useInstalledWallets.ts#L7"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 204,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 206,
									"name": "coinbaseWallet",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/hooks/useInstalledWallets.ts",
											"line": 23,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/hooks/useInstalledWallets.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "isCoinbaseWalletInstalled"
								},
								{
									"id": 205,
									"name": "metamask",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/hooks/useInstalledWallets.ts",
											"line": 22,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/hooks/useInstalledWallets.ts#L22"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "isMetamaskInstalled"
								},
								{
									"id": 207,
									"name": "trustWallet",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/hooks/useInstalledWallets.ts",
											"line": 24,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/hooks/useInstalledWallets.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "isTrustWalletInstalled"
								},
								{
									"id": 208,
									"name": "zerionWallet",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/hooks/useInstalledWallets.ts",
											"line": 25,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/hooks/useInstalledWallets.ts#L25"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "isZerionWalletInstalled"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										206,
										205,
										207,
										208
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/hooks/useInstalledWallets.ts",
									"line": 21,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/hooks/useInstalledWallets.ts#L21"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1242,
			"name": "useIsAccountDeployed",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account-factory.d.ts",
					"line": 53,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1243,
					"name": "useIsAccountDeployed",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if a account has been deployed for the given admin"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: isAccountDeployed, isLoading, error } = useIsAccountDeployed(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a boolean indicating if a account has been deployed for the given admin"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AccountFactory"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useisaccountdeployed?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account-factory.d.ts",
							"line": 53,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1244,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account factory contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1245,
							"name": "admin",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1246,
							"name": "extraData",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/src.ts/index.ts",
									"qualifiedName": "BytesLike"
								},
								"name": "BytesLike",
								"package": "@ethersproject/bytes"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1170,
			"name": "useIsAddressRole",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
					"line": 68,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1171,
					"name": "useIsAddressRole",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if an address is a member of a specific role"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: isMember, isLoading, error } = useIsAddressRole(contract, \"admin\", \"{{wallet_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the address is a member of the role, or false if not"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PermissionsEnumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useisaddressrole?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
							"line": 68,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1172,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1173,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1174,
							"name": "role",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the role to check the member against, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Role",
										"target": {
											"sourceFileName": "../sdk/src/evm/common/role.ts",
											"qualifiedName": "Role"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
									"qualifiedName": "RolesForContract"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RolesForContract",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1175,
							"name": "walletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 90,
			"name": "useIsWalletModalOpen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 79,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L79"
				}
			],
			"signatures": [
				{
					"id": 91,
					"name": "useIsWalletModalOpen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 79,
							"character": 36,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 758,
			"name": "useLazyMint",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 145,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 759,
					"name": "useLazyMint",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Lazy mint NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: lazyMint,\n    isLoading,\n    error,\n  } = useLazyMint(contract);\n\n  if (error) {\n    console.error(\"failed to lazy mint NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => lazyMint({ metadatas: [{ name: \"My NFT!\"}] })}\n    >\n      Lazy mint NFT!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to lazy mint a batch of NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable | ERC1155LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselazymint?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 145,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 760,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1454,
								"name": "DropContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 761,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426
									},
									{
										"kind": "text",
										"text": " with the drop extension"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 762,
							"name": "onProgress",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an optional callback that will be called with the progress of the upload"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 763,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
											"line": 145,
											"character": 117
										}
									],
									"signatures": [
										{
											"id": 764,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
													"line": 145,
													"character": 117
												}
											],
											"parameters": [
												{
													"id": 765,
													"name": "progress",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/events.ts",
															"qualifiedName": "UploadProgressEvent"
														},
														"name": "UploadProgressEvent",
														"package": "@thirdweb-dev/sdk"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 783,
			"name": "useListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 25,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 784,
					"name": "useListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get a listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0; // the listing id to check\nconst { data: listing, isLoading, error } = useListing(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the desired listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselisting?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 25,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 785,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 786,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 795,
			"name": "useListings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 72,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 796,
					"name": "useListings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: listings, isLoading, error } = useListings(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of listings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselistings?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 72,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 797,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 798,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 815,
			"name": "useListingsCount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 146,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 816,
					"name": "useListingsCount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total count of listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: listingsCount, isLoading, error } = useListingsCount(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the listing count"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselistingscount?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 146,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 817,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1274,
			"name": "useLogin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogin.d.ts",
					"line": 11,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1275,
					"name": "useLogin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to securely login to a backend with the connected wallet. The backend\nauthentication URL must be configured on the ThirdwebProvider."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "- A function to invoke to login with the connected wallet, and an isLoading state."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselogin?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogin.d.ts",
							"line": 11,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1276,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1280,
									"name": "isLoading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogin.d.ts",
											"line": 13,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1277,
									"name": "login",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogin.d.ts",
											"line": 12,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1278,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogin.d.ts",
													"line": 12,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 1279,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1280,
										1277
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogin.d.ts",
									"line": 11,
									"character": 36
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1281,
			"name": "useLogout",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogout.d.ts",
					"line": 11,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1282,
					"name": "useLogout",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to logout the connected wallet from the backend.\nThe backend logout URL must be configured on the ThirdwebProvider."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "- A function to invoke to logout."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselogout?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogout.d.ts",
							"line": 11,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1283,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1285,
									"name": "isLoading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogout.d.ts",
											"line": 13,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1284,
									"name": "logout",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogout.d.ts",
											"line": 12,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
											"qualifiedName": ""
										},
										"name": "UseMutateAsyncFunction",
										"package": "@tanstack/react-query"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1285,
										1284
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useLogout.d.ts",
									"line": 11,
									"character": 37
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 99,
			"name": "useMagic",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
					"line": 6,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/connectors/magic/useMagic.ts#L6"
				}
			],
			"signatures": [
				{
					"id": 100,
					"name": "useMagic",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
							"line": 6,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/connectors/magic/useMagic.ts#L6"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 101,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
									"line": 9,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/connectors/magic/useMagic.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 102,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
											"line": 9,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/connectors/magic/useMagic.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 103,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/magic.ts",
													"qualifiedName": "MagicLink"
												},
												"name": "MagicLink",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 900,
			"name": "useMakeBid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 631,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 901,
					"name": "useMakeBid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Make a bid on an auction listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: makeBid,\n    isLoading,\n    error,\n  } = useMakeBid(contract);\n\n  if (error) {\n    console.error(\"failed to make a bid\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => makeBid({ listingId: 1, bid: 2 })}\n    >\n      Bid!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to make a bid on an auction listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemakebid?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 631,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 902,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 903,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 905,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 633,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 906,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 633,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 907,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 904,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 632,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														905,
														904
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 631,
													"character": 97
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1472,
								"name": "MakeBidParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 908,
			"name": "useMakeOffer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 668,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 909,
					"name": "useMakeOffer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Nake an offer on a direct or auction listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: makeOffer,\n    isLoading,\n    error,\n  } = useMakeOffer(contract);\n\n  if (error) {\n    console.error(\"failed to make a bid\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => makeOffer({ listingId: 1, pricePerToken: 0.5, quantity: 1 })}\n    >\n      Bid!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to make a bid on an auction listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemakeoffer?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 668,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 910,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 911,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 913,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 670,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 914,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
																	"line": 670,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 915,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 912,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 669,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														913,
														912
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 668,
													"character": 99
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1476,
								"name": "MakeOfferParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1316,
			"name": "useMarketplace",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useMarketplace.d.ts",
					"line": 32,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1317,
					"name": "useMarketplace",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Marketplace`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is used to support marketplace for purchase and sale of on-chain assets."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"marketplace\")\n\n  // Now you can use the marketplace contract in the rest of the component\n\n  // For example, this function will return all the listings on the marketplace\n  async function getListings() {\n    const listings = await contract.getAll()\n    return listings\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const marketplace = useMarketplace(\"0x1234...\");\n+ const marketplace = useContract(\"0x1234...\", \"marketplace\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useMarketplace.d.ts",
							"line": 32,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1318,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Marketplace contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "Marketplace",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 632,
			"name": "useMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
					"line": 191,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 633,
					"name": "useMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the metadata of this contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: metadata, isLoading, error } = useMetadata(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CustomContractMetadata"
									},
									{
										"kind": "text",
										"text": " object containing the metadata"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemetadata?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
							"line": 191,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 634,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 223,
			"name": "useMetamask",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useMetamask.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 224,
					"name": "useMetamask",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useMetamask.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 225,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 226,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 227,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 228,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 229,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																229
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/metamask.ts",
													"qualifiedName": "MetaMaskWallet"
												},
												"name": "MetaMaskWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 844,
			"name": "useMinimumNextBid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 269,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 845,
					"name": "useMinimumNextBid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the minimum next bid for an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: minimumNextBid, isLoading, error } = useMinimumNextBid(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the minimum next bid for the auction listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAucton"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useminimumnextbid?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 269,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 846,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
													"qualifiedName": "Marketplace"
												},
												"name": "Marketplace",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
													"qualifiedName": "MarketplaceV3"
												},
												"name": "MarketplaceV3",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 847,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1111,
			"name": "useMintNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 165,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1112,
					"name": "useMintNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mint an NFT to a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: mintNft,\n    isLoading,\n    error,\n  } = useMintNFT(contract);\n\n  if (error) {\n    console.error(\"failed to mint NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => mintNft({ name: \"My awesome NFT!\", to: \"{{wallet_address}}\" })}\n    >\n      Mint!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to mint a new NFT token to the connected wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Mintable | ERC1155Mintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemintnft?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 165,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1113,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1426,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1114,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1448,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "MintNFTReturnType",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1443,
								"name": "MintNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1115,
			"name": "useMintNFTSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 200,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1116,
					"name": "useMintNFTSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Increase the supply of an existing NFT"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: mintNftSupply,\n    isLoading,\n    error,\n  } = useMintNFTSupply(contract);\n\n  if (error) {\n    console.error(\"failed to mint additional supply\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => mintNftSupply({ tokenId: 0, additionalSupply: 100, to: \"{{wallet_address}}\"})}\n    >\n      Mint Additional Supply!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to mint a more supply of a token id to the provided wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC1155Mintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemintnftsupply?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 200,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1117,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Erc1155",
										"target": {
											"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
											"qualifiedName": "Erc1155"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
									"qualifiedName": "Erc1155"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/eips.ts",
													"qualifiedName": "BaseERC1155"
												},
												"name": "BaseERC1155",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/eips.ts",
													"qualifiedName": "BaseSignatureMintERC1155"
												},
												"name": "BaseSignatureMintERC1155",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "Erc1155",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "TransactionResultWithId",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1438,
								"name": "MintNFTSupplyParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1202,
			"name": "useMintToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
					"line": 102,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1203,
					"name": "useMintToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mint tokens"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: mintTokens,\n    isLoading,\n    error,\n  } = useMintToken(contract);\n\n  if (error) {\n    console.error(\"failed to mint tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => mintTokens({ to: \"{{wallet_address}}\", amount: 1000 })}\n    >\n      Mint!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to mint new tokens to the connected wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20Mintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useminttoken?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
							"line": 102,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1204,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1427,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1205,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1207,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 104,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1208,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
																	"line": 104,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1209,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1206,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 103,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1207,
														1206
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
													"line": 102,
													"character": 101
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1419,
								"name": "TokenParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1337,
			"name": "useMultiwrap",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useMultiwrap.d.ts",
					"line": 31,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1338,
					"name": "useMultiwrap",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`Multiwrap`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is an ERC721 in which you can wrap ERC721, ERC1155 and ERC20 tokens."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"multiwrap\")\n\n  // Now you can use the multiwrap contract in the rest of the component\n\n  // For example, this function will let the connected wallet wrap tokens\n  async function wrap(tokensToWrap, wrappedNFTMetadata) {\n    await contract.wrap(tokensToWrap, wrappedNFTMetadata)\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const multiwrap = useMultiwrap(\"0x1234...\");\n+ const multiwrap = useContract(\"0x1234...\", \"multiwrap\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useMultiwrap.d.ts",
							"line": 31,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1339,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Multiwrap contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "Multiwrap",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1080,
			"name": "useNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 26,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1081,
					"name": "useNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get a single NFT"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst tokenId = 0; // the tokenId to look up\nconst { data: nft, isLoading, error } = useNFT(contract, tokenId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the metadata for the given tokenId"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721 | ERC1155"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usenft?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 26,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1082,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1426,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1083,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1084,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the tokenId to look up"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/core/schema/nft.ts",
									"qualifiedName": "NFT"
								},
								"name": "NFT",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1106,
			"name": "useNFTBalance",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 112,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1107,
					"name": "useNFTBalance",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get NFT balance of a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: ownerBalance, isLoading, error } = useNFTBalance(contract, \"{{wallet_address}}\");\n// for ERC1155 contracts, you can also pass a tokenId\nconst tokenId = 0;\nconst { data: ownerBalance, isLoading, error } = useNFTBalance(contract, \"{{wallet_address}}\", tokenId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the total balance of the owner"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721 | ERC1155"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usenftbalance?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 112,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1108,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1426,
										"name": "NFTContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1109,
							"name": "ownerWalletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the wallet address to check the balance of"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1110,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "required for ERC1155, the tokenId to look up"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1319,
			"name": "useNFTCollection",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useNFTCollection.d.ts",
					"line": 32,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1320,
					"name": "useNFTCollection",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`NFTCollection`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is meant to interface with ERC721 compliant NFTs."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract, isLoading, error } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"nft-collection\")\n\n  // Now you can use the nftCollection contract in the rest of the component\n\n  // For example, this function will return all the NFTs on this contract\n  async function getNFTs() {\n    const nfts = await contract.getAll()\n    return nfts\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const nftCollection = useNFTCollection(\"0x1234...\");\n+ const nftCollection = useContract(\"0x1234...\", \"nft-collection\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useNFTCollection.d.ts",
							"line": 32,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1321,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the NFT Collection contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "NFTCollection",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1313,
			"name": "useNFTDrop",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useNFTDrop.d.ts",
					"line": 31,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1314,
					"name": "useNFTDrop",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`NFTDrop`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is meant to interface with ERC721 compliant NFTs that can be lazily minted."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"nft-drop\")\n\n  // Now you can use the nft drop contract in the rest of the component\n\n  // For example, this function will let the connected wallet claim a new NFT\n  async function claim(quantity) {\n    await contract.claim(quantity)\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const nftDrop = useNFTDrop(\"0x1234...\");\n+ const nftDrop = useContract(\"0x1234...\", \"nft-drop\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useNFTDrop.d.ts",
							"line": 31,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1315,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the NFT Drop contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "NFTDrop",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1085,
			"name": "useNFTs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 42,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1086,
					"name": "useNFTs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: nfts, isLoading, error } = useNFTs(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Supply | ERC721Enumerable | ERC1155Enumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usenfts?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 42,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1087,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1426,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1088,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1089,
							"name": "queryParams",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "query params to pass to the query for pagination"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1090,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/QueryParams.d.ts",
											"line": 12,
											"character": 3
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFT"
									},
									"name": "NFT",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 400,
			"name": "useNetwork",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/useNetwork.d.ts",
					"line": 47,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 401,
					"name": "useNetwork",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "- use "
									},
									{
										"kind": "code",
										"text": "`useChain`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`useSwitchChain`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`useChainId`"
									},
									{
										"kind": "text",
										"text": " instead\n\nHook for getting metadata about the network the current wallet is connected to and switching networks"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useNetwork } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  const [, switchNetwork] = useNetwork();\n  return (\n     // switchNetwork is undefined if the wallet does not support programmatic network switching\n     // 137 is the chainId for Polygon in this example\n    <button onClick={() => switchNetwork(137)}>\n       Switch Network\n    </button>\n  );\n};\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIt's important to note that some wallet apps do not support programmatic network switching and switchNetwork will be undefined.\nFor those situations, you can typically switch networks in the wallet app this hook will still work."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/useNetwork.d.ts",
							"line": 47,
							"character": 24
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/hooks/useNetwork.ts",
									"qualifiedName": "NetworkMetadata"
								},
								"name": "NetworkMetadata",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../react-core/src/core/hooks/useNetwork.ts",
											"qualifiedName": "SwitchNetwork"
										},
										"name": "SwitchNetwork",
										"package": "@thirdweb-dev/react-core"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						]
					}
				}
			]
		},
		{
			"id": 1349,
			"name": "useNetworkMismatch",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useNetworkMismatch.d.ts",
					"line": 28,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1350,
					"name": "useNetworkMismatch",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for checking whether the connected wallet is on the correct network specified by the "
							},
							{
								"kind": "code",
								"text": "`network`"
							},
							{
								"kind": "text",
								"text": " passed to the "
							},
							{
								"kind": "code",
								"text": "`<ThirdwebProvider />`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useNetworkMismatch } from \"@thirdweb-dev/react\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the chainId of the connected wallet is different from the chainId of the network passed into <ThirdwebProvider />"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usenetworkmismatch?utm_source=sdk"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can check if a users wallet is connected to the correct chain ID as follows:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { useNetworkMismatch } from \"@thirdweb-dev/react\"\n\nconst App = () => {\n  const isMismatched = useNetworkMismatch()\n\n  return <div>{isMismatched}</div>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFrom here, you can prompt users to switch their network using the "
									},
									{
										"kind": "code",
										"text": "`useNetwork`"
									},
									{
										"kind": "text",
										"text": " hook."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useNetworkMismatch.d.ts",
							"line": 28,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 932,
			"name": "useOffers",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 291,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 933,
					"name": "useOffers",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all the offers for a listing"
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "Fetch all the offers for a specified direct or auction listing."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: offers, isLoading, error } = useOffers(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useoffers?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 291,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 934,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 935,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the listing to fetch offers for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 936,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 937,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 292,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										},
										{
											"id": 945,
											"name": "dataUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 300,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 938,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 293,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 949,
											"name": "errorUpdateCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 304,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 946,
											"name": "errorUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 301,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 947,
											"name": "failureCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 302,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 948,
											"name": "failureReason",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 303,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 967,
											"name": "fetchStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 316,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
													"qualifiedName": ""
												},
												"name": "FetchStatus",
												"package": "@tanstack/react-query"
											}
										},
										{
											"id": 939,
											"name": "isError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 294,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 950,
											"name": "isFetched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 305,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 951,
											"name": "isFetchedAfterMount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 306,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 952,
											"name": "isFetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 307,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 953,
											"name": "isInitialLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 308,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 940,
											"name": "isLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 295,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 941,
											"name": "isLoadingError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 296,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 954,
											"name": "isPaused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 309,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 955,
											"name": "isPlaceholderData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 310,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 956,
											"name": "isPreviousData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 311,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 942,
											"name": "isRefetchError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 297,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 957,
											"name": "isRefetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 312,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 958,
											"name": "isStale",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 313,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 943,
											"name": "isSuccess",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 298,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 959,
											"name": "refetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 314,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 960,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 314,
															"character": 13
														}
													],
													"signatures": [
														{
															"id": 961,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameter": [
																{
																	"id": 963,
																	"name": "TPageData",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {}
																}
															],
															"parameters": [
																{
																	"id": 962,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																					"qualifiedName": ""
																				},
																				"name": "RefetchOptions",
																				"package": "@tanstack/react-query"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																					"qualifiedName": ""
																				},
																				"name": "RefetchQueryFilters",
																				"package": "@tanstack/react-query"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																			"qualifiedName": ""
																		},
																		"name": "QueryObserverResult",
																		"package": "@tanstack/react-query"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 964,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 315,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 965,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 315,
															"character": 12
														}
													],
													"signatures": [
														{
															"id": 966,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 944,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 299,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												937,
												945,
												938,
												949,
												946,
												947,
												948,
												967,
												939,
												950,
												951,
												952,
												953,
												940,
												941,
												954,
												955,
												956,
												942,
												957,
												958,
												943,
												959,
												964,
												944
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
											"line": 291,
											"character": 113
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 968,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 969,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 318,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										},
										{
											"id": 977,
											"name": "dataUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 326,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 970,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 319,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": null
											}
										},
										{
											"id": 981,
											"name": "errorUpdateCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 330,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 978,
											"name": "errorUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 327,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 979,
											"name": "failureCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 328,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 980,
											"name": "failureReason",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 329,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 999,
											"name": "fetchStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 342,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
													"qualifiedName": ""
												},
												"name": "FetchStatus",
												"package": "@tanstack/react-query"
											}
										},
										{
											"id": 971,
											"name": "isError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 320,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 982,
											"name": "isFetched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 331,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 983,
											"name": "isFetchedAfterMount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 332,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 984,
											"name": "isFetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 333,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 985,
											"name": "isInitialLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 334,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 972,
											"name": "isLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 321,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 973,
											"name": "isLoadingError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 322,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 986,
											"name": "isPaused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 335,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 987,
											"name": "isPlaceholderData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 336,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 988,
											"name": "isPreviousData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 337,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 974,
											"name": "isRefetchError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 323,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 989,
											"name": "isRefetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 338,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 990,
											"name": "isStale",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 339,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 975,
											"name": "isSuccess",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 324,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 991,
											"name": "refetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 340,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 992,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 340,
															"character": 13
														}
													],
													"signatures": [
														{
															"id": 993,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameter": [
																{
																	"id": 995,
																	"name": "TPageData",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {}
																}
															],
															"parameters": [
																{
																	"id": 994,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																					"qualifiedName": ""
																				},
																				"name": "RefetchOptions",
																				"package": "@tanstack/react-query"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																					"qualifiedName": ""
																				},
																				"name": "RefetchQueryFilters",
																				"package": "@tanstack/react-query"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																			"qualifiedName": ""
																		},
																		"name": "QueryObserverResult",
																		"package": "@tanstack/react-query"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 996,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 341,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 997,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 341,
															"character": 12
														}
													],
													"signatures": [
														{
															"id": 998,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 976,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 325,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": "success"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												969,
												977,
												970,
												981,
												978,
												979,
												980,
												999,
												971,
												982,
												983,
												984,
												985,
												972,
												973,
												986,
												987,
												988,
												974,
												989,
												990,
												975,
												991,
												996,
												976
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
											"line": 317,
											"character": 4
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1000,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1001,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 344,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										},
										{
											"id": 1009,
											"name": "dataUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 352,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1002,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 345,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1013,
											"name": "errorUpdateCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 356,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1010,
											"name": "errorUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 353,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1011,
											"name": "failureCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 354,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1012,
											"name": "failureReason",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 355,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1031,
											"name": "fetchStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 368,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
													"qualifiedName": ""
												},
												"name": "FetchStatus",
												"package": "@tanstack/react-query"
											}
										},
										{
											"id": 1003,
											"name": "isError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 346,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1014,
											"name": "isFetched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 357,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1015,
											"name": "isFetchedAfterMount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 358,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1016,
											"name": "isFetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 359,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1017,
											"name": "isInitialLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 360,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1004,
											"name": "isLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 347,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 1005,
											"name": "isLoadingError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 348,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1018,
											"name": "isPaused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 361,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1019,
											"name": "isPlaceholderData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 362,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1020,
											"name": "isPreviousData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 363,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1006,
											"name": "isRefetchError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 349,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 1021,
											"name": "isRefetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 364,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1022,
											"name": "isStale",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 365,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1007,
											"name": "isSuccess",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 350,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 1023,
											"name": "refetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 366,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1024,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 366,
															"character": 13
														}
													],
													"signatures": [
														{
															"id": 1025,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameter": [
																{
																	"id": 1027,
																	"name": "TPageData",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {}
																}
															],
															"parameters": [
																{
																	"id": 1026,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																					"qualifiedName": ""
																				},
																				"name": "RefetchOptions",
																				"package": "@tanstack/react-query"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																					"qualifiedName": ""
																				},
																				"name": "RefetchQueryFilters",
																				"package": "@tanstack/react-query"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																			"qualifiedName": ""
																		},
																		"name": "QueryObserverResult",
																		"package": "@tanstack/react-query"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 1028,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 367,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1029,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 367,
															"character": 12
														}
													],
													"signatures": [
														{
															"id": 1030,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 1008,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 351,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1001,
												1009,
												1002,
												1013,
												1010,
												1011,
												1012,
												1031,
												1003,
												1014,
												1015,
												1016,
												1017,
												1004,
												1005,
												1018,
												1019,
												1020,
												1006,
												1021,
												1022,
												1007,
												1023,
												1028,
												1008
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
											"line": 343,
											"character": 4
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1032,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1033,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 370,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										},
										{
											"id": 1041,
											"name": "dataUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 378,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1034,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 371,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": null
											}
										},
										{
											"id": 1045,
											"name": "errorUpdateCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 382,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1042,
											"name": "errorUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 379,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1043,
											"name": "failureCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 380,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1044,
											"name": "failureReason",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 1063,
											"name": "fetchStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 394,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
													"qualifiedName": ""
												},
												"name": "FetchStatus",
												"package": "@tanstack/react-query"
											}
										},
										{
											"id": 1035,
											"name": "isError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 372,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 1046,
											"name": "isFetched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 383,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1047,
											"name": "isFetchedAfterMount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 384,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1048,
											"name": "isFetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1049,
											"name": "isInitialLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 386,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1036,
											"name": "isLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1037,
											"name": "isLoadingError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 374,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 1050,
											"name": "isPaused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 387,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1051,
											"name": "isPlaceholderData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 388,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1052,
											"name": "isPreviousData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 389,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1038,
											"name": "isRefetchError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 375,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 1053,
											"name": "isRefetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 390,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1054,
											"name": "isStale",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 391,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1039,
											"name": "isSuccess",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 376,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 1055,
											"name": "refetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 392,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1056,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 392,
															"character": 13
														}
													],
													"signatures": [
														{
															"id": 1057,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameter": [
																{
																	"id": 1059,
																	"name": "TPageData",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {}
																}
															],
															"parameters": [
																{
																	"id": 1058,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																					"qualifiedName": ""
																				},
																				"name": "RefetchOptions",
																				"package": "@tanstack/react-query"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																					"qualifiedName": ""
																				},
																				"name": "RefetchQueryFilters",
																				"package": "@tanstack/react-query"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
																			"qualifiedName": ""
																		},
																		"name": "QueryObserverResult",
																		"package": "@tanstack/react-query"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 1060,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 393,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1061,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
															"line": 393,
															"character": 12
														}
													],
													"signatures": [
														{
															"id": 1062,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 1040,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": "loading"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1033,
												1041,
												1034,
												1045,
												1042,
												1043,
												1044,
												1063,
												1035,
												1046,
												1047,
												1048,
												1049,
												1036,
												1037,
												1050,
												1051,
												1052,
												1038,
												1053,
												1054,
												1039,
												1055,
												1060,
												1040
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
											"line": 369,
											"character": 4
										}
									]
								}
							}
						]
					}
				}
			]
		},
		{
			"id": 1099,
			"name": "useOwnedNFTs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 92,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1100,
					"name": "useOwnedNFTs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all NFTs owned by a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: ownedNFTs, isLoading, error } = useOwnedNFTs(contract, \"{{wallet_address}}\", { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the list of owned tokens"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Enumerable | ERC1155Enumerable | ERC721Supply"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useownednfts?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 92,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1101,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1426,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1102,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1103,
							"name": "ownerWalletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the wallet address to get owned tokens for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1104,
							"name": "queryParams",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "query params to pass to the query for pagination"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1105,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/QueryParams.d.ts",
											"line": 12,
											"character": 3
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFT"
									},
									"name": "NFT",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1322,
			"name": "usePack",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/usePack.d.ts",
					"line": 32,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1323,
					"name": "usePack",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Pack`"
							},
							{
								"kind": "text",
								"text": " contract. This contract supports the creation of on-chain luck-based lootboxes."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = usePack(\"<YOUR-CONTRACT-ADDRESS>\", \"pack\")\n\n  // Now you can use the pack contract in the rest of the component\n\n  // For example, this function will get all the packs on this contract\n  async function getPacks() {\n    const packs = await contract.getAll()\n    return packs\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const pack = usePack(\"0x1234...\");\n+ const pack = useContract(\"0x1234...\", \"pack\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/usePack.d.ts",
							"line": 32,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1324,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Pack contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "Pack",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 271,
			"name": "usePaperWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
					"line": 16,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L16"
				}
			],
			"signatures": [
				{
					"id": 272,
					"name": "usePaperWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
							"line": 16,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L16"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 273,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
									"line": 19,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 274,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
											"line": 19,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
										}
									],
									"parameters": [
										{
											"id": 275,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 276,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 277,
																	"name": "chainId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																			"line": 19,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 278,
																	"name": "email",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																			"line": 19,
																			"character": 40,
																			"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		277,
																		278
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																	"line": 19,
																	"character": 20,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
															"qualifiedName": "PaperConfig"
														},
														"name": "PaperConfig",
														"package": "@thirdweb-dev/react"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/paper-wallet.ts",
													"qualifiedName": "PaperWallet"
												},
												"name": "PaperWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 269,
			"name": "usePaperWalletUserEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L32"
				}
			],
			"signatures": [
				{
					"id": 270,
					"name": "usePaperWalletUserEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
							"line": 32,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/usePaper.ts#L32"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 615,
			"name": "usePlatformFees",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
					"line": 134,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 616,
					"name": "usePlatformFees",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the platform fee recipient and basis points"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: platformFees, isLoading, error } = usePlatformFees(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "an object containing the platform fee basis points and the fee recipient address"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PlatformFee"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useplatformfees?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
							"line": 134,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 617,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 618,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 619,
											"name": "platform_fee_basis_points",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 135,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 620,
											"name": "platform_fee_recipient",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 136,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												619,
												620
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
											"line": 134,
											"character": 104
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 587,
			"name": "usePrimarySaleRecipient",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
					"line": 20,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 588,
					"name": "usePrimarySaleRecipient",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the primary sale recipient"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: primarySaleRecipient, isLoading, error } = usePrimarySalesRecipient(contract);\n```"
									},
									{
										"kind": "text",
										"text": "\n\nUse this to get the primary sales recipient of your "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the wallet address of the primary sales recipient"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PrimarySale"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useprimarysalerecipient?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
							"line": 20,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 589,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 209,
			"name": "useRainbowWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 210,
					"name": "useRainbowWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 211,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 212,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 213,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 214,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 215,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																215
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/rainbow-wallet.ts",
													"qualifiedName": "RainbowWallet"
												},
												"name": "RainbowWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1262,
			"name": "useRemoveAdmin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
					"line": 187,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1263,
					"name": "useRemoveAdmin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add an additional admin on the smart wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: removeAdmin,\n    isLoading,\n    error,\n  } = useRemoveAdmin();\n\n  if (error) {\n    console.error(\"failed to remove admin\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => removeAdmin(\"0x...\")}\n    >\n      Remove admin\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
							"line": 187,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResult"
								},
								"name": "TransactionResult",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 578,
			"name": "useResetClaimConditions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 190,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 579,
					"name": "useResetClaimConditions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reset claim conditions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: resetClaimConditions,\n    isLoading,\n    error,\n  } = useResetClaimConditions(contract);\n\n  if (error) {\n    console.error(\"failed to reset claim conditions\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={resetClaimConditions}\n    >\n      Reset Claim Conditions\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to reset claim conditions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 190,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 580,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DropContract",
										"target": 1454,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1454,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 581,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 582,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 584,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
															"line": 192,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 585,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
																	"line": 192,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 586,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 583,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
															"line": 191,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														584,
														583
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
													"line": 190,
													"character": 135
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 295,
			"name": "useResolvedMediaType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 528,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L528"
				}
			],
			"signatures": [
				{
					"id": 296,
					"name": "useResolvedMediaType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the fully resolved url + mime type of the media"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Usage with fully formed url:\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const resolved = useResolvedMediaType(\"https://example.com/video.mp4\");\n  console.log(\"mime type\", resolved.data.mimeType);\n  console.log(\"url\", resolved.data.url);\n  return null;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nUsage with ipfs cid:\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const resolved = useResolvedMediaType(\"ipfs://QmWATWQ7fVPP2EFGu71UkfnqhYXDYH566qy47CnJDgvsd\");\n  console.log(\"mime type\", resolved.data.mimeType);\n  console.log(\"url\", resolved.data.url);\n  return null;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 528,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L528"
						}
					],
					"parameters": [
						{
							"id": 297,
							"name": "uri",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the uri to resolve (can be a url or a ipfs://\\<cid\\>)"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 298,
							"name": "mimeType",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 299,
							"name": "gatewayUrl",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 300,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 302,
									"name": "mimeType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
											"line": 559,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L559"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": "resolvedMimType.data"
								},
								{
									"id": 301,
									"name": "url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
											"line": 558,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L558"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "resolvedUrl"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										302,
										301
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
									"line": 557,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/components/MediaRenderer.tsx#L557"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 774,
			"name": "useRevealLazyMint",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 216,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 775,
					"name": "useRevealLazyMint",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reveal a batch of delayed reveal NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: revealLazyMint,\n    isLoading,\n    error,\n  } = useRevealLazyMint(contract);\n\n  if (error) {\n    console.error(\"failed to reveal batch\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => revealLazyMint({ batchId: \"0\", password: \"my-password\" })}\n    >\n      Reveal batch!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to reveal a batch of delayed reveal NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Revealable | ERC1155Revealable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usereveallazymint?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 216,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 776,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1455,
								"name": "RevealableContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 777,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "RevealableContract",
										"target": 1455,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 778,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 780,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
															"line": 218,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 781,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
																	"line": 218,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 782,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 779,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
															"line": 217,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														780,
														779
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
													"line": 216,
													"character": 140
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1461,
								"name": "RevealLazyMintInput",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1184,
			"name": "useRevokeRole",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
					"line": 178,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1185,
					"name": "useRevokeRole",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Revoke a role from a specific address"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: revokeRole,\n    isLoading,\n    error,\n  } = useRevokeRole(contract);\n\n  if (error) {\n    console.error(\"failed to revoke role\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => revokeRole({ role: \"admin\", address: {{wallet_address}} })}\n    >\n      Revoke Role\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to revoke a role from a member on the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Permissions | PermissionsEnumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.userevokerole?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
							"line": 178,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1186,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1187,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1266,
			"name": "useRevokeSessionKey",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
					"line": 127,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1267,
					"name": "useRevokeSessionKey",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Revoke a session key on the smart wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: revokeSessionKey,\n    isLoading,\n    error,\n  } = useRevokeSessionKey();\n\n  if (error) {\n    console.error(\"failed to revoke session key\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => revokeSessionKey(\"0x...\")}\n    >\n      Revoke Session Key\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/account.d.ts",
							"line": 127,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResult"
								},
								"name": "TransactionResult",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1165,
			"name": "useRoleMembers",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
					"line": 51,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1166,
					"name": "useRoleMembers",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all members of a specific role"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: members, isLoading, error } = useRoleMembers(SmartContract, \"admin\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a list of addresses that are members of the role"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Permissions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.userolemembers?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
							"line": 51,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1167,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1168,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1169,
							"name": "role",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the role to get the members of, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Role",
										"target": {
											"sourceFileName": "../sdk/src/evm/common/role.ts",
											"qualifiedName": "Role"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
									"qualifiedName": "RolesForContract"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RolesForContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 595,
			"name": "useRoyaltySettings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
					"line": 72,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 596,
					"name": "useRoyaltySettings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the royalty recipient and fee"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: settings, isLoading, error } = useRoyaltySettings(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "an object containing recipient address and the royalty basis points"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Royalty"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useroyaltysettings?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
							"line": 72,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 597,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 598,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 600,
											"name": "fee_recipient",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 599,
											"name": "seller_fee_basis_points",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												600,
												599
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
											"line": 72,
											"character": 107
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1384,
			"name": "useSDK",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useSDK.d.ts",
					"line": 17,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1385,
					"name": "useSDK",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ThirdwebSDK"
									},
									{
										"kind": "text",
										"text": "\nAccess the instance of the thirdweb SDK created by the ThirdwebProvider\nto call methods using the connected wallet on the desiredChainId."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst sdk = useSDK();\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useSDK.d.ts",
							"line": 17,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/sdk.ts",
									"qualifiedName": "ThirdwebSDK"
								},
								"name": "ThirdwebSDK",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 94,
			"name": "useSafe",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/connectors/gnosis/useSafe.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 95,
					"name": "useSafe",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
							"line": 5,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/connectors/gnosis/useSafe.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 96,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/connectors/gnosis/useSafe.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 97,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
											"line": 8,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/connectors/gnosis/useSafe.ts#L8"
										}
									],
									"parameters": [
										{
											"id": 98,
											"name": "connectProps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/connectors/safe/types.ts",
													"qualifiedName": "SafeConnectionArgs"
												},
												"name": "SafeConnectionArgs",
												"package": "@thirdweb-dev/wallets"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/safe.ts",
													"qualifiedName": "SafeWallet"
												},
												"name": "SafeWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1176,
			"name": "useSetAllRoleMembers",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
					"line": 105,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1177,
					"name": "useSetAllRoleMembers",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Overwrite the list of members for specific roles"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: overwriteRoles,\n    isLoading,\n    error,\n  } = useSetAllRoleMembers(contract);\n\n  if (error) {\n    console.error(\"failed to overwrite roles\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => overwriteRoles({ rolesWithAddresses: { minter: [\"{{wallet_address}\"] } })}\n    >\n      Overwrite Roles\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to overwrite all roles on the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Permissions"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/roles.d.ts",
							"line": 105,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1178,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1179,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1368,
			"name": "useSetAppURI",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
					"line": 50,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1369,
					"name": "useSetAppURI",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set App URI"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: useSetAppURI,\n    isLoading,\n    error,\n  } = useSetAppURI(contract);\n\n  if (error) {\n    console.error(\"failed to update appURI\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => useSetAppURI({ uri })}\n    >\n      Update App URI\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the appURI of a contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AppUR"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
							"line": 50,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1370,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1371,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1373,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
															"line": 52,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1374,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
																	"line": 52,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1375,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1372,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
															"line": 51,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1373,
														1372
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
													"line": 50,
													"character": 109
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1376,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1377,
											"name": "uri",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
													"line": 54,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1377
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/app.d.ts",
											"line": 53,
											"character": 21
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 572,
			"name": "useSetClaimConditions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
					"line": 154,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 573,
					"name": "useSetClaimConditions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set claim conditions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: setClaimConditions,\n    isLoading,\n    error,\n  } = useSetClaimConditions(contract);\n\n  if (error) {\n    console.error(\"failed to set claim conditions\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => setClaimConditions({ phases: [{ price: 2, maxClaimableSupply: 100 }] })}\n    >\n      Set Claim Conditions!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to set claim conditions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usesetclaimconditions?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
							"line": 154,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 574,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DropContract",
										"target": 1454,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1454,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 575,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 576,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 577,
											"name": "receipt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
													"line": 155,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
													"qualifiedName": "TransactionReceipt"
												},
												"name": "providers.TransactionReceipt",
												"package": "@ethersproject/abstract-provider",
												"qualifiedName": "TransactionReceipt"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												577
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/claim-conditions.d.ts",
											"line": 154,
											"character": 128
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 536,
								"name": "SetClaimConditionsParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 394,
			"name": "useSetConnectedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 78,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 395,
					"name": "useSetConnectedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to set a connected wallet instance"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 78,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 396,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
									"line": 78,
									"character": 49
								}
							],
							"signatures": [
								{
									"id": 397,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 398,
											"name": "wallet",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 488,
												"name": "WalletInstance",
												"package": "@thirdweb-dev/react-core"
											}
										},
										{
											"id": 399,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/dist/declarations/src/index.d.ts",
													"qualifiedName": ""
												},
												"name": "ConnectParams",
												"package": "@thirdweb-dev/wallets"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 389,
			"name": "useSetConnectionStatus",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 63,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 390,
					"name": "useSetConnectionStatus",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to create an instance of given wallet class"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 63,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 391,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
									"line": 63,
									"character": 50
								}
							],
							"signatures": [
								{
									"id": 392,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 393,
											"name": "status",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "unknown"
													},
													{
														"type": "literal",
														"value": "connected"
													},
													{
														"type": "literal",
														"value": "disconnected"
													},
													{
														"type": "literal",
														"value": "connecting"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 92,
			"name": "useSetIsWalletModalOpen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 83,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L83"
				}
			],
			"signatures": [
				{
					"id": 93,
					"name": "useSetIsWalletModalOpen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 83,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
							"qualifiedName": "BoolSetter"
						},
						"name": "BoolSetter",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 1147,
			"name": "useSetSharedMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPrivate": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 329,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1148,
					"name": "useSetSharedMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set shared metadata\nTODO add docs"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 329,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1149,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1426,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1150,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1151,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1153,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
															"line": 331,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1154,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
																	"line": 331,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1155,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1152,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
															"line": 330,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1153,
														1152
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
													"line": 329,
													"character": 136
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1156,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1160,
											"name": "animation_url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
													"line": 336,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1158,
											"name": "description",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
													"line": 334,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 1159,
											"name": "image",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
													"line": 335,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1157,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
													"line": 333,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1160,
												1158,
												1159,
												1157
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
											"line": 332,
											"character": 21
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1144,
			"name": "useSharedMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 127,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1145,
					"name": "useSharedMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the shared metadata of an Open Edition NFT contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: sharedMetadata, isLoading, error } = useSharedMetadata(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the shared metadata of the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721SharedMetadata"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usesharedmetadata?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 127,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1146,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1426,
										"name": "NFTContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/core/schema/nft.ts",
											"qualifiedName": "BasicNFTInput"
										},
										"name": "BasicNFTInput",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1340,
			"name": "useSignatureDrop",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useSignatureDrop.d.ts",
					"line": 31,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1341,
					"name": "useSignatureDrop",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`SignatureDrop`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is meant to interface with ERC721 compliant NFTs that can be lazily minted."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"signature-drop\")\n\n  // Now you can use the Signature drop contract in the rest of the component\n\n  // For example, this function will let the connected wallet claim a new NFT\n  async function claim(quantity) {\n    await contract.claim(quantity)\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const signatureDrop = useSignatureDrop(\"0x1234...\");\n+ const signatureDrop = useContract(\"0x1234...\", \"signature-drop\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useSignatureDrop.d.ts",
							"line": 31,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1342,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the NFT Drop contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "SignatureDrop",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 3,
			"name": "useSmartWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 4,
					"name": "useSmartWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 5,
							"name": "W",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 488,
								"name": "WalletInstance",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 6,
							"name": "personalWallet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 423,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "W",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 7,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/smartWallet/types.ts",
									"qualifiedName": "SmartWalletConfigOptions"
								},
								"name": "SmartWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9,
									"name": "connect",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
											"line": 91,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L91"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 10,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
													"line": 41,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
												}
											],
											"signatures": [
												{
													"id": 11,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
															"line": 41,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
														}
													],
													"parameters": [
														{
															"id": 12,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 13,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 14,
																			"name": "connectPersonalWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 42,
																					"character": 6,
																					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 15,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																							"line": 42,
																							"character": 30,
																							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																						}
																					],
																					"signatures": [
																						{
																							"id": 16,
																							"name": "__type",
																							"variant": "signature",
																							"kind": 4096,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																									"line": 42,
																									"character": 30,
																									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																								}
																							],
																							"parameters": [
																								{
																									"id": 17,
																									"name": "wallet",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "reference",
																										"target": -1,
																										"name": "W",
																										"refersToTypeParameter": true
																									}
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Promise"
																								},
																								"typeArguments": [
																									{
																										"type": "intrinsic",
																										"name": "void"
																									}
																								],
																								"name": "Promise",
																								"package": "typescript"
																							}
																						}
																					]
																				}
																			}
																		},
																		{
																			"id": 18,
																			"name": "connectionArgs",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 43,
																					"character": 6,
																					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L43"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Omit"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../wallets/src/evm/connectors/smart-wallet/types.ts",
																							"qualifiedName": "SmartWalletConnectionArgs"
																						},
																						"name": "SmartWalletConnectionArgs",
																						"package": "@thirdweb-dev/wallets"
																					},
																					{
																						"type": "literal",
																						"value": "personalWallet"
																					}
																				],
																				"name": "Omit",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				14,
																				18
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																			"line": 41,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/wallets/smart-wallet.ts",
																	"qualifiedName": "SmartWallet"
																},
																"name": "SmartWallet",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 19,
									"name": "predictAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
											"line": 92,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L92"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 20,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
													"line": 29,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
												}
											],
											"signatures": [
												{
													"id": 21,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
															"line": 29,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
														}
													],
													"parameters": [
														{
															"id": 22,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 23,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 25,
																			"name": "data",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 29,
																					"character": 50,
																					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/src.ts/index.ts",
																					"qualifiedName": "BytesLike"
																				},
																				"name": "BytesLike",
																				"package": "@ethersproject/bytes"
																			}
																		},
																		{
																			"id": 24,
																			"name": "personalWalletAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 29,
																					"character": 19,
																					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				25,
																				24
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																			"line": 29,
																			"character": 17,
																			"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9,
										19
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
									"line": 90,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L90"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1334,
			"name": "useSplit",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useSplit.d.ts",
					"line": 32,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1335,
					"name": "useSplit",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Split`"
							},
							{
								"kind": "text",
								"text": " contract. This contract supports fund distribution to multiple parties."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"split\")\n\n  // Now you can use the split contract in the rest of the component\n\n  // For example, this function will return all the recipients of the split\n  async function getRecipients() {\n    const recipients = await contract.getAllRecipients()\n    return recipients\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const split = useSplit(\"0x1234...\");\n+ const split = useContract(\"0x1234...\", \"split\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useSplit.d.ts",
							"line": 32,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1336,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Split contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "Split",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1347,
			"name": "useStorage",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/storage/index.d.ts",
					"line": 7,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1348,
					"name": "useStorage",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the configured "
							},
							{
								"kind": "code",
								"text": "`ThirdwebStorage`"
							},
							{
								"kind": "text",
								"text": " instance"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "code",
										"text": "`storageInterface`"
									},
									{
										"kind": "text",
										"text": " configured on the "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usestorage?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/storage/index.d.ts",
							"line": 7,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../storage/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "ThirdwebStorage",
								"package": "@thirdweb-dev/storage"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1343,
			"name": "useStorageUpload",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/storage/useStorageUpload.d.ts",
					"line": 35,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1344,
					"name": "useStorageUpload",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook used to upload any files or JSON data to decentralized storage systems like IPFS,\nusing the "
							},
							{
								"kind": "code",
								"text": "`storageInterface`"
							},
							{
								"kind": "text",
								"text": " configured on the "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Function used to upload files or JSON to decentralized storage systems"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nimport { useStorageUpload } from \"@thirdweb-dev/react\";\n\nexport default function Component() {\n  const { mutateAsync: upload, isLoading } = useStorageUpload();\n\n  async function uploadData() {\n    const filesToUpload = [...];\n    const uris = await upload({ data: files });\n    console.log(uris);\n  }\n\n  return (\n    <button onClick={uploadData}>\n      Upload\n    </button>\n  )\n}\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usestorageupload?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/storage/useStorageUpload.d.ts",
							"line": 35,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1345,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../storage/src/types/upload.ts",
									"qualifiedName": "UploadOptions"
								},
								"name": "UploadOptions",
								"package": "@thirdweb-dev/storage"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../storage/src/types/upload.ts",
									"qualifiedName": "IpfsUploadBatchOptions"
								},
								"name": "IpfsUploadBatchOptions",
								"package": "@thirdweb-dev/storage"
							}
						}
					],
					"parameters": [
						{
							"id": 1346,
							"name": "uploadOptions",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1359,
			"name": "useSupportedChains",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useSupportedChains.d.ts",
					"line": 1,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1360,
					"name": "useSupportedChains",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useSupportedChains.d.ts",
							"line": 1,
							"character": 24
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/dist/declarations/src/index.d.ts",
								"qualifiedName": ""
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			]
		},
		{
			"id": 1361,
			"name": "useSupportedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useSupportedWallet.d.ts",
					"line": 1,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1362,
					"name": "useSupportedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useSupportedWallet.d.ts",
							"line": 1,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1363,
							"name": "id",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/evm/index.ts",
							"qualifiedName": ""
						},
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 1296,
			"name": "useSwitchAccount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useSwitchAccount.d.ts",
					"line": 10,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1297,
					"name": "useSwitchAccount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to switch the account of the active wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "- A function to invoke to switch account."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useswitchaccount?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useSwitchAccount.d.ts",
							"line": 10,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1298,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1300,
									"name": "isLoading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useSwitchAccount.d.ts",
											"line": 12,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1299,
									"name": "switchAccount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useSwitchAccount.d.ts",
											"line": 11,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
											"qualifiedName": ""
										},
										"name": "UseMutateAsyncFunction",
										"package": "@tanstack/react-query"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1300,
										1299
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useSwitchAccount.d.ts",
									"line": 10,
									"character": 44
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 380,
			"name": "useSwitchChain",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 73,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 381,
					"name": "useSwitchChain",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to connect the wallet to network/chain with given chainId"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 73,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 382,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
									"line": 73,
									"character": 42
								}
							],
							"signatures": [
								{
									"id": 383,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 384,
											"name": "chain",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 493,
			"name": "useThirdwebAuthContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
					"line": 37,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 494,
					"name": "useThirdwebAuthContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-auth.d.ts",
							"line": 37,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
									"qualifiedName": "ThirdwebAuthContext"
								},
								"name": "ThirdwebAuthContext",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 522,
			"name": "useThirdwebConfigContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-config.d.ts",
					"line": 11,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 523,
					"name": "useThirdwebConfigContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-config.d.ts",
							"line": 11,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/evm/contexts/thirdweb-config.tsx",
							"qualifiedName": "ThirdwebConfigContext"
						},
						"name": "ThirdwebConfigContext",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 530,
			"name": "useThirdwebConnectedWalletContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-wallet.d.ts",
					"line": 14,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 531,
					"name": "useThirdwebConnectedWalletContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/contexts/thirdweb-wallet.d.ts",
							"line": 14,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/evm/contexts/thirdweb-wallet.tsx",
							"qualifiedName": "ThirdwebConnectedWalletContext"
						},
						"name": "ThirdwebConnectedWalletContext",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 1325,
			"name": "useToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useToken.d.ts",
					"line": 32,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1326,
					"name": "useToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Token`"
							},
							{
								"kind": "text",
								"text": " contract. This contract supports ERC20 compliant tokens."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"token\")\n\n  // Now you can use the token contract in the rest of the component\n\n  // For example, this function will get the connected wallets token balance\n  async function balance() {\n    const balance = await contract.balance()\n    return balance\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const token = useToken(\"0x1234...\");\n+ const token = useContract(\"0x1234...\", \"token\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useToken.d.ts",
							"line": 32,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1327,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Token contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "Token",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1195,
			"name": "useTokenBalance",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
					"line": 43,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1196,
					"name": "useTokenBalance",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get token balance for a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: balance, isLoading, error } = useTokenBalance(contract, \"{{wallet_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the balance of the address"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetokenbalance?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
							"line": 43,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1197,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1427,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1198,
							"name": "walletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1199,
			"name": "useTokenDecimals",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
					"line": 64,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1200,
					"name": "useTokenDecimals",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get token decimals"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: decimals, isLoading, error } = useTokenDecimals(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the decimals of the ERC20 token"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetokendecimals?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
							"line": 64,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1201,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1427,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1328,
			"name": "useTokenDrop",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useTokenDrop.d.ts",
					"line": 32,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1329,
					"name": "useTokenDrop",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Token Drop`"
							},
							{
								"kind": "text",
								"text": " contract."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"token-drop\")\n\n  // Now you can use the token drop contract in the rest of the component\n\n  // For example, this function will get the connected wallets token balance\n  async function balance() {\n    const balance = await contract.balance()\n    return balance\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const token = useTokenDrop(\"0x1234...\");\n+ const token = useContract(\"0x1234...\", \"token-drop\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useTokenDrop.d.ts",
							"line": 32,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1330,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Token Drop contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "TokenDrop",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1192,
			"name": "useTokenSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
					"line": 22,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1193,
					"name": "useTokenSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total supply for this token"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: totalSupply, isLoading, error } = useTokenSupply(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the total minted supply"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetokensupply?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
							"line": 22,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1194,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1427,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1095,
			"name": "useTotalCirculatingSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 75,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1096,
					"name": "useTotalCirculatingSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get total minted supply count"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\nconst { data: totalCirculatingSupply, isLoading, error } = useTotalCirculatingSupply(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the total minted supply"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Supply | ERC1155Enumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetotalcirculatingsupply?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 75,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1097,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1426,
										"name": "NFTContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1098,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "required for ERC1155, the tokenId to look up"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1091,
			"name": "useTotalCount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 58,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1092,
					"name": "useTotalCount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get total supply count"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\nconst { data: count, isLoading, error } = useTotalCount(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the total count of NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Supply | ERC1155Enumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetotalcount?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 58,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1093,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1426,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1094,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1226,
			"name": "useTransferBatchToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
					"line": 216,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1227,
					"name": "useTransferBatchToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Airdrop tokens to a list of wallets"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: transferBatchTokens,\n    isLoading,\n    error,\n  } = useTransferToken(contract);\n\n  if (error) {\n    console.error(\"failed to transfer batch tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => transferBatchTokens([{ to: \"{{wallet_address}}\", amount: 1000 }, { to: \"{{wallet_address}}\", amount: 2000 }])}\n    >\n      Airdrop\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to transfer batch tokens"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetransferbatchtoken?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
							"line": 216,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1228,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1427,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1229,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1231,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 218,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1232,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
																	"line": 218,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1233,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1230,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 217,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1231,
														1230
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
													"line": 216,
													"character": 110
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1419,
									"name": "TokenParams",
									"package": "@thirdweb-dev/react-core"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1118,
			"name": "useTransferNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
					"line": 238,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1119,
					"name": "useTransferNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transfer an NFT"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: transferNFT,\n    isLoading,\n    error,\n  } = useTransferNFT(contract);\n\n  if (error) {\n    console.error(\"failed to transfer NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => transferNFT({\n        to: \"{{wallet_address}}\",\n        tokenId: 2\n      })}\n    >\n      Transfer\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to transfer NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721 | ERC1155"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetransfernft?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
							"line": 238,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1120,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1426,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 1121,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1426,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1122,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1124,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
															"line": 240,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1125,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
																	"line": 240,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1126,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1123,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
															"line": 239,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1124,
														1123
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/nft.d.ts",
													"line": 238,
													"character": 130
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1429,
								"name": "TransferNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1218,
			"name": "useTransferToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
					"line": 178,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1219,
					"name": "useTransferToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transfer tokens to a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: transferTokens,\n    isLoading,\n    error,\n  } = useTransferToken(contract);\n\n  if (error) {\n    console.error(\"failed to transfer tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => transferTokens({ to: \"{{wallet_address}}\", amount: 1000 })}\n    >\n      Transfer\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to transfer tokens"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetransfertoken?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
							"line": 178,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1220,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1427,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1221,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1223,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 180,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1224,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
																	"line": 180,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 1225,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1222,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
															"line": 179,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1223,
														1222
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/token.d.ts",
													"line": 178,
													"character": 105
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1419,
								"name": "TokenParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 216,
			"name": "useTrustWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 217,
					"name": "useTrustWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 218,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 219,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 220,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 221,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 222,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																222
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/trust.ts",
													"qualifiedName": "TrustWallet"
												},
												"name": "TrustWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 744,
			"name": "useUnclaimedNFTSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 53,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 745,
					"name": "useUnclaimedNFTSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the number of NFTs that are unclaimed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useunclaimednftsupply?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 53,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 746,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721 spec (NFT drop, Signature Drop, or any custom contract that extends the ERC721 spec)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
															"qualifiedName": "BaseContract"
														},
														"name": "BaseContract",
														"package": "@ethersproject/contracts"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
													"qualifiedName": "NFTDrop"
												},
												"name": "NFTDrop",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
													"qualifiedName": "SignatureDrop"
												},
												"name": "SignatureDrop",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/ethers@5.7.2/node_modules/ethers/src.ts/index.ts",
									"qualifiedName": ""
								},
								"name": "BigNumber",
								"package": "ethers"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 734,
			"name": "useUnclaimedNFTs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
					"line": 27,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 735,
					"name": "useUnclaimedNFTs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all unclaimed NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: unclaimedNfts, isLoading, error } = useUnclaimedNFTs(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of NFTs that are unclaimed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useunclaimednfts?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/drop.d.ts",
							"line": 27,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 736,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721 spec (NFT drop, Signature Drop, or any custom contract that extends the ERC721 spec)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
											"qualifiedName": "NFTDrop"
										},
										"name": "NFTDrop",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 737,
							"name": "queryParams",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "query params to pass to the query for the sake of pagination"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 738,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/QueryParams.d.ts",
											"line": 12,
											"character": 3
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFT"
									},
									"name": "NFT",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 635,
			"name": "useUpdateMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
					"line": 227,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 636,
					"name": "useUpdateMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the metadata of this contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updateMetadata,\n    isLoading,\n    error,\n  } = useUpdateMetadata(contract);\n\n  if (error) {\n    console.error(\"failed to update metadata\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updateMetadata({\n       name: \"My Contract\",\n       description: \"This is my contract\"\n      })}\n    >\n      Update Contract Metadata\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the metadata"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useupdatemetadata?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
							"line": 227,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 637,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 621,
			"name": "useUpdatePlatformFees",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
					"line": 171,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 622,
					"name": "useUpdatePlatformFees",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the platform fee recipient and basis points"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updatePlatformFees,\n    isLoading,\n    error,\n  } = useUpdatePlatformFees(contract);\n\n  if (error) {\n    console.error(\"failed to update platform fees\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updatePlatformFees({ updatePayload: { fee_recipient: \"{{wallet_address}}\", platform_fee_basis_points: 5_00 } })}\n    >\n      Update Platform fees\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the platform fees settings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PlatformFee"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useupdateplatformfees?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
							"line": 171,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 623,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 624,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 626,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
															"line": 173,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 627,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
																	"line": 173,
																	"character": 10
																}
															],
															"signatures": [
																{
																	"id": 628,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 625,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
															"line": 172,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														626,
														625
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 171,
													"character": 118
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 629,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 631,
											"name": "fee_recipient",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 176,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 630,
											"name": "platform_fee_basis_points",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 175,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												631,
												630
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
											"line": 174,
											"character": 21
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 590,
			"name": "useUpdatePrimarySaleRecipient",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
					"line": 55,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 591,
					"name": "useUpdatePrimarySaleRecipient",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the primary sale recipient"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updatePrimarySalesRecipient,\n    isLoading,\n    error,\n  } = useUpdatePrimarySaleRecipient(contract);\n\n  if (error) {\n    console.error(\"failed to update recipient\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updatePrimarySalesRecipient({ newRecipient: \"{{wallet_address}}\" })}\n    >\n      Update Recipient\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the primary sales recipient"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PrimarySale"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useupdateprimarysalerecipient?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
							"line": 55,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 592,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 593,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 594,
											"name": "receipt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 56,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
													"qualifiedName": "TransactionReceipt"
												},
												"name": "providers.TransactionReceipt",
												"package": "@ethersproject/abstract-provider",
												"qualifiedName": "TransactionReceipt"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												594
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
											"line": 55,
											"character": 121
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 601,
			"name": "useUpdateRoyaltySettings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
					"line": 110,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 602,
					"name": "useUpdateRoyaltySettings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the royalty recipient and fee"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updateRoyaltySettings,\n    isLoading,\n    error,\n  } = useUpdateRoyaltySettings(contract);\n\n  if (error) {\n    console.error(\"failed to update royalty settings\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updateRoyaltySettings({ updatePayload: { fee_recipient: \"{{wallet_address}}\", seller_fee_basis_points: 5_00 } })}\n    >\n      Update Royalty Settings\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the royalty settings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Royalty"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useupdateroyaltysettings?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
							"line": 110,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 603,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 604,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 606,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 112,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 607,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
															"line": 112,
															"character": 10
														}
													],
													"signatures": [
														{
															"id": 608,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 609,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 611,
																					"name": "fee_recipient",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
																							"line": 114,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 610,
																					"name": "seller_fee_basis_points",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
																							"line": 113,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						611,
																						610
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
																					"line": 112,
																					"character": 24
																				}
																			]
																		}
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 605,
											"name": "receipt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
													"qualifiedName": "TransactionReceipt"
												},
												"name": "providers.TransactionReceipt",
												"package": "@ethersproject/abstract-provider",
												"qualifiedName": "TransactionReceipt"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												606,
												605
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
											"line": 110,
											"character": 116
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 612,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 614,
											"name": "fee_recipient",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 118,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 613,
											"name": "seller_fee_basis_points",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
													"line": 117,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												614,
												613
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/contract-settings.d.ts",
											"line": 116,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1286,
			"name": "useUser",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useUser.d.ts",
					"line": 14,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1287,
					"name": "useUser",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to get the currently logged in user."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "- The currently logged in user or null if not logged in, as well as a loading state."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useuser?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useUser.d.ts",
							"line": 14,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 1288,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/schema/common.ts",
									"qualifiedName": "Json"
								},
								"name": "Json",
								"package": "@thirdweb-dev/auth"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/schema/common.ts",
									"qualifiedName": "Json"
								},
								"name": "Json",
								"package": "@thirdweb-dev/auth"
							}
						},
						{
							"id": 1289,
							"name": "TContext",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/schema/common.ts",
									"qualifiedName": "Json"
								},
								"name": "Json",
								"package": "@thirdweb-dev/auth"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/schema/common.ts",
									"qualifiedName": "Json"
								},
								"name": "Json",
								"package": "@thirdweb-dev/auth"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1290,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1293,
									"name": "isLoading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useUser.d.ts",
											"line": 17,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1292,
									"name": "isLoggedIn",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useUser.d.ts",
											"line": 16,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1291,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useUser.d.ts",
											"line": 15,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1301,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TData",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "TContext",
														"refersToTypeParameter": true
													}
												],
												"name": "UserWithData",
												"package": "@thirdweb-dev/react-core"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1293,
										1292,
										1291
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/dist/declarations/src/evm/hooks/auth/useUser.d.ts",
									"line": 14,
									"character": 92
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 803,
			"name": "useValidDirectListings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 102,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 804,
					"name": "useValidDirectListings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all valid direct listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: validDirectListings, isLoading, error } = useValidDirectListings(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of direct listings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usevaliddirectlistings?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 102,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 805,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 806,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 811,
			"name": "useValidEnglishAuctions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 132,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 812,
					"name": "useValidEnglishAuctions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all valid english auctions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: validEnglishAuctions, isLoading, error } = useValidEnglishAuctions(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of english auctions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usevalidenglishauctions?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 132,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 813,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 814,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1331,
			"name": "useVote",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useVote.d.ts",
					"line": 32,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1332,
					"name": "useVote",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`Vote`"
							},
							{
								"kind": "text",
								"text": " contract. This contract enables fully featured voting-based decentralized governance systems."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"vote\")\n\n  // Now you can use the vote contract in the rest of the component\n\n  // For example, this function will get all the proposals on this contract\n  async function getProposals() {\n    const proposals = await contract.getAll()\n    return proposals\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 662
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const vote = useVote(\"0x1234...\");\n+ const vote = useContract(\"0x1234...\", \"vote\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/contracts/useVote.d.ts",
							"line": 32,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1333,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Vote contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/dist/declarations/src/index.d.ts",
									"qualifiedName": ""
								},
								"name": "Vote",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 357,
			"name": "useWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 26,
					"character": 24
				},
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 27,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 358,
					"name": "useWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the current active wallet instance"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 26,
							"character": 24
						}
					],
					"typeParameter": [
						{
							"id": 359,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
									"qualifiedName": "WalletId"
								},
								"name": "WalletId",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 360,
							"name": "walletId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
										"qualifiedName": "WalletIdToWalletTypeMap"
									},
									"name": "WalletIdToWalletTypeMap",
									"package": "@thirdweb-dev/react-core"
								}
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 361,
					"name": "useWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 27,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 488,
								"name": "WalletInstance",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 387,
			"name": "useWalletConfig",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 31,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 388,
					"name": "useWalletConfig",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the current active wallet's configuration object"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 31,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": ""
								},
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 279,
			"name": "useWalletConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 280,
					"name": "useWalletConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L18"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 281,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
									"line": 21,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 282,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
											"line": 21,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L21"
										}
									],
									"parameters": [
										{
											"id": 283,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 284,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 285,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 22,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L22"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 286,
															"name": "projectId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 23,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L23"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 287,
															"name": "qrModalOptions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 24,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L24"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/dist/declarations/src/evm/connectors/wallet-connect/qrModalOptions.d.ts",
																	"qualifiedName": "QRModalOptions"
																},
																"name": "QRModalOptions",
																"package": "@thirdweb-dev/wallets"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																285,
																286,
																287
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
															"line": 21,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L21"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
													"qualifiedName": "WalletConnect"
												},
												"name": "WalletConnect",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 288,
			"name": "useWalletConnectV1",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 289,
					"name": "useWalletConnectV1",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
							"line": 5,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 290,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 291,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
											"line": 8,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L8"
										}
									],
									"parameters": [
										{
											"id": 292,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 293,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 294,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 8,
																	"character": 23,
																	"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L8"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																294
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
															"line": 8,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L8"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
													"qualifiedName": "WalletConnect"
												},
												"name": "WalletConnect",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 402,
			"name": "useWalletContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-wallet-provider.d.ts",
					"line": 53,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 403,
					"name": "useWalletContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/providers/thirdweb-wallet-provider.d.ts",
							"line": 53,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/providers/thirdweb-wallet-provider.tsx",
							"qualifiedName": "ThirdwebWalletContextData"
						},
						"name": "ThirdwebWalletContextData",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 385,
			"name": "useWallets",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
					"line": 36,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 386,
					"name": "useWallets",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "code",
										"text": "`supportedWallets`"
									},
									{
										"kind": "text",
										"text": " configured in the "
									},
									{
										"kind": "code",
										"text": "`<ThirdwebProvider/>`"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/core/hooks/wallet-hooks.d.ts",
							"line": 36,
							"character": 24
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../react-core/src/core/types/wallet.ts",
								"qualifiedName": ""
							},
							"name": "WalletConfig",
							"package": "@thirdweb-dev/react-core"
						}
					}
				}
			]
		},
		{
			"id": 1519,
			"name": "useWatchTransactions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useTransactions.d.ts",
					"line": 23,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1520,
					"name": "useWatchTransactions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook that listens to transactions on a given chain for a given address.\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useWatchTransactions } from \"@thirdweb-dev/react\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js\nconst transactions = useWatchTransactions({\n address: \"0x1234\",\n network: \"ethereum\",\n});\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "an array of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Transaction",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/src.ts/index.ts",
											"qualifiedName": "Transaction"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " objects"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/useTransactions.d.ts",
							"line": 23,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 1521,
							"name": "watchTransactionParams",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1522,
								"name": "UseWatchTransactionsParams",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/src.ts/index.ts",
								"qualifiedName": "Transaction"
							},
							"name": "Transaction",
							"package": "@ethersproject/transactions"
						}
					}
				}
			]
		},
		{
			"id": 828,
			"name": "useWinningBid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
					"line": 205,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 829,
					"name": "useWinningBid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the winning bid for an auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: winningBid, isLoading, error } = useWinningBid(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Offer"
									},
									{
										"kind": "text",
										"text": " that is winning the auction"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usewinningbid?utm_source=sdk"
									}
								]
							}
						],
						"modifierTags": [
							"@beta"
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/dist/declarations/src/evm/hooks/async/marketplace.d.ts",
							"line": 205,
							"character": 24
						}
					],
					"parameters": [
						{
							"id": 830,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 831,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 421,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/index.ts",
							"qualifiedName": ""
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 70,
			"name": "walletConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
					"line": 32,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L32"
				}
			],
			"signatures": [
				{
					"id": 71,
					"name": "walletConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 32,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L32"
						}
					],
					"parameters": [
						{
							"id": 72,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
									"qualifiedName": "walletConnectConfig"
								},
								"name": "walletConnectConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WalletConnect"
								},
								"name": "WalletConnect",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 73,
			"name": "walletConnectV1",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnectV1.tsx",
					"line": 9,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/walletConnectV1.tsx#L9"
				}
			],
			"signatures": [
				{
					"id": 74,
					"name": "walletConnectV1",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`walletConnect`"
									},
									{
										"kind": "text",
										"text": " instead\n\nThe WalletConnect v1.0 protocol has been shut down and no longer works.\nTo avoid breaking change, "
									},
									{
										"kind": "code",
										"text": "`walletConnectV1`"
									},
									{
										"kind": "text",
										"text": " is still available but is an alias of "
									},
									{
										"kind": "code",
										"text": "`walletConnect`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 32,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L32"
						}
					],
					"parameters": [
						{
							"id": 75,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
									"qualifiedName": "walletConnectConfig"
								},
								"name": "walletConnectConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WalletConnect"
								},
								"name": "WalletConnect",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 76,
			"name": "zerionWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
					"line": 22,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L22"
				}
			],
			"signatures": [
				{
					"id": 77,
					"name": "zerionWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
							"line": 22,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/9f454d1/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L22"
						}
					],
					"parameters": [
						{
							"id": 78,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
									"qualifiedName": "ZerionkWalletOptions"
								},
								"name": "ZerionkWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 423,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/zerion.ts",
									"qualifiedName": "ZerionWallet"
								},
								"name": "ZerionWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				505,
				189,
				306,
				501,
				309,
				335,
				1388,
				1301
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1481,
				1434,
				1450,
				1488,
				1407,
				532,
				1465,
				1471,
				1498,
				441,
				108,
				1456,
				1454,
				1428,
				1485,
				489,
				1472,
				1476,
				1443,
				1448,
				1438,
				1426,
				150,
				421,
				1461,
				1455,
				470,
				536,
				88,
				89,
				1423,
				1427,
				1419,
				1429,
				730,
				1522,
				1418,
				481,
				423,
				488,
				492
			]
		},
		{
			"title": "Variables",
			"children": [
				330,
				653,
				641,
				1,
				2
			]
		},
		{
			"title": "Functions",
			"children": [
				139,
				104,
				303,
				146,
				495,
				516,
				524,
				320,
				168,
				331,
				1380,
				323,
				26,
				29,
				82,
				32,
				35,
				1510,
				1516,
				1513,
				1503,
				85,
				38,
				41,
				46,
				79,
				49,
				52,
				55,
				327,
				58,
				417,
				63,
				67,
				916,
				1268,
				1271,
				1257,
				1247,
				1253,
				413,
				540,
				567,
				824,
				1260,
				409,
				1127,
				1161,
				1364,
				836,
				1294,
				404,
				750,
				840,
				244,
				1135,
				1234,
				1072,
				1064,
				884,
				892,
				876,
				415,
				411,
				557,
				562,
				754,
				1210,
				747,
				739,
				545,
				230,
				650,
				362,
				368,
				662,
				693,
				675,
				679,
				701,
				638,
				713,
				1250,
				861,
				848,
				1264,
				370,
				766,
				787,
				799,
				818,
				376,
				1378,
				1310,
				1307,
				251,
				264,
				791,
				832,
				807,
				821,
				924,
				237,
				1180,
				202,
				1242,
				1170,
				90,
				758,
				783,
				795,
				815,
				1274,
				1281,
				99,
				900,
				908,
				1316,
				632,
				223,
				844,
				1111,
				1115,
				1202,
				1337,
				1080,
				1106,
				1319,
				1313,
				1085,
				400,
				1349,
				932,
				1099,
				1322,
				271,
				269,
				615,
				587,
				209,
				1262,
				578,
				295,
				774,
				1184,
				1266,
				1165,
				595,
				1384,
				94,
				1176,
				1368,
				572,
				394,
				389,
				92,
				1147,
				1144,
				1340,
				3,
				1334,
				1347,
				1343,
				1359,
				1361,
				1296,
				380,
				493,
				522,
				530,
				1325,
				1195,
				1199,
				1328,
				1192,
				1095,
				1091,
				1226,
				1118,
				1218,
				216,
				744,
				734,
				635,
				621,
				590,
				601,
				1286,
				803,
				811,
				1331,
				357,
				387,
				279,
				288,
				402,
				385,
				1519,
				828,
				70,
				73,
				76
			]
		}
	],
	"packageName": "@thirdweb-dev/react",
	"readme": [
		{
			"kind": "text",
			"text": "<p align=\"center\">\n<br />\n<a href=\"https://thirdweb.com\"><img src=\"https://github.com/thirdweb-dev/js/blob/main/packages/sdk/logo.svg?raw=true\" width=\"200\" alt=\"\"/></a>\n<br />\n</p>\n<h1 align=\"center\">thirdweb React SDK</h1>\n<p align=\"center\">\n<a href=\"https://www.npmjs.com/package/@thirdweb-dev/react\"><img src=\"https://img.shields.io/npm/v/@thirdweb-dev/react?color=red&label=npm&logo=npm\" alt=\"npm version\"/></a>\n<a href=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml\"><img alt=\"Build Status\" src=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml/badge.svg\"/></a>\n<a href=\"https://discord.gg/thirdweb\"><img alt=\"Join our Discord!\" src=\"https://img.shields.io/discord/834227967404146718.svg?color=7289da&label=discord&logo=discord&style=flat\"/></a>\n\n</p>\n<p align=\"center\"><strong>Ultimate collection of React hooks for your web3 apps</strong></p>\n<br />\n\n<br />\n\n## Installation\n\nThe easiest way to get started with the React SDK is to use the CLI:\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nnpx thirdweb create --app\n```"
		},
		{
			"kind": "text",
			"text": "\n\nAlternatively, you can install the SDK into your existing project using npm or yarn:\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nnpm install @thirdweb-dev/react @thirdweb-dev/sdk ethers@5\n```"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nyarn add @thirdweb-dev/react @thirdweb-dev/sdk ethers@5\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n## Getting Started\n\nOur SDK uses a [Provider Pattern](https://flexiple.com/react/provider-pattern-with-react-context-api/); meaning any component within the "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": " will have access to the SDK. If you use the CLI to initialize your project, this is already set up for you.\n\nLet's take a look at a typical setup:\n\n<br />\n\n### Configure the "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": "\n\nSpecify the network your smart contracts are deployed to in the "
		},
		{
			"kind": "code",
			"text": "`desiredChainId`"
		},
		{
			"kind": "text",
			"text": " prop and wrap your application like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"App.jsx\"\nimport { ChainId, ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider desiredChainId={ChainId.Mainnet}>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\nBelow are examples of where to set this up in your application:\n\n<p>\n  <a href=\"https://github.com/thirdweb-example/cra-javascript-starter/blob/main/src/index.js\">Create React App</a> •\n  <a href=\"https://github.com/thirdweb-example/next-javascript-starter/blob/main/pages/_app.js\">Next.js</a> •\n  <a href=\"https://github.com/thirdweb-example/vite-javascript-starter/blob/main/src/main.jsx\">Vite</a>\n</p>\n\n<br />\n\n### Connect to a User's Wallet\n\nNow the provider is set up, we can use all of the hooks and UI components available in the SDK, such as the [ConnectWallet](https://portal.thirdweb.com/ui-components/connectwalletbutton) component.\n\nOnce the user has connected their wallet, all the calls we make to interact with contracts using the SDK will be on behalf of the user.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"ConnectMetamaskButton.jsx\"\nimport { ConnectWallet, useAddress } from \"@thirdweb-dev/react\";\n\nexport const YourApp = () => {\n  const address = useAddress();\n  return (\n    <div>\n      <ConnectWallet />\n    </div>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe "
		},
		{
			"kind": "code",
			"text": "`ConnectWallet`"
		},
		{
			"kind": "text",
			"text": " component handles everything for us, including switching networks, accounts, displaying balances and more.\n\nWe can then get the connected address using the "
		},
		{
			"kind": "code",
			"text": "`useAddress`"
		},
		{
			"kind": "text",
			"text": " hook anywhere in the app.\n\n<br/>\n\n### Interact With Contracts\n\nConnect to your smart contract using the ["
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/getting-a-contract#connect-to-a-contract)\nhook like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport { useContract } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n\n  // Now you can use the contract in the rest of the component!\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can then use ["
		},
		{
			"kind": "code",
			"text": "`useContractRead`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/using-contracts) and ["
		},
		{
			"kind": "code",
			"text": "`useContractWrite`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/using-contracts) to read data and write transactions to the contract.\n\nYou pass the "
		},
		{
			"kind": "code",
			"text": "`contract`"
		},
		{
			"kind": "text",
			"text": " object returned from "
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": " to these hooks as the first parameter and the name of the function (or view/mapping, etc.) on your smart contract as the second parameter. If your function requires parameters, you can pass them as additional arguments.\n\nFor example, we can read the "
		},
		{
			"kind": "code",
			"text": "`name`"
		},
		{
			"kind": "text",
			"text": " of our contract like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport {\n  useContract,\n  useContractRead,\n  useContractWrite,\n} from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: name, isLoading: loadingName } = useContractRead(\n    contract,\n    \"name\", // The name of the view/mapping/variable on your contract\n  );\n  const { mutate: setName, isLoading: settingName } = useContractWrite(\n    contract,\n    \"setName\", // The name of the function on your contract\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n### Using Extensions\n\nEach [extension](https://portal.thirdweb.com/extensions) you implement in your smart contract unlocks new functionality in the SDK.\n\nThese hooks make it easy to interact with your smart contracts by implementing the complex logic for you under the hood.\n\nFor example, if your smart contract implements [ERC721Supply](https://portal.thirdweb.com/solidity/extensions/erc721supply), you unlock the ability to [view all NFTs](https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721supply#get-all-minted-nfts) on that contract using the SDK; which fetches all of your NFT metadata and the current owner of each NFT in parallel. In the React SDK, that is available using "
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nimport { useContract, useNFTs } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nIf we want to mint an NFT and our contract implements [ERC721Mintable](https://portal.thirdweb.com/solidity/extensions/erc721mintable), we can use the ["
		},
		{
			"kind": "code",
			"text": "`useMintNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721mintable) hook to mint an NFT from the connected wallet; handling all of the logic of uploading and pinning the metadata to IPFS for us behind the scenes.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nimport { useContract, useNFTs, useMintNFT } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n  const { mutate: mintNFT, isLoading: isMintingNFT } = useMintNFT(contract);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n### UI Components\n\nThe SDK provides many UI components to help you build your application.\n\nFor example, we can render each of the NFTs using the ["
		},
		{
			"kind": "code",
			"text": "`NFT Media Renderer`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/ui-components/nft-renderer)\ncomponent, making use of the loading state from "
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport { useContract, useNFTs, ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n\n  return (\n    <div>\n      <h2>My NFTs</h2>\n      {isReadingNfts ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {nfts.map((nft) => (\n            <ThirdwebNftMedia\n              key={nft.metadata.id}\n              metadata={nft.metadata}\n              height={200}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe ["
		},
		{
			"kind": "code",
			"text": "`Web3Button`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/ui-components/web3button) component ensures the user has connected their wallet and is currently configured to the same network as your smart contract before calling the function. It also has access to the "
		},
		{
			"kind": "code",
			"text": "`contract`"
		},
		{
			"kind": "text",
			"text": " directly, allowing you to perform any action on your smart contract when the button is clicked.\n\nFor example, we can mint an NFT like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport {\n  useContract,\n  useNFTs,\n  ThirdwebNftMedia,\n  Web3Button,\n} from \"@thirdweb-dev/react\";\n\nconst contractAddress = \"<CONTRACT_ADDRESS>\";\nexport default function Home() {\n  const { contract } = useContract(contractAddress);\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n\n  return (\n    <div>\n      {/* ... Existing Display Logic here ... */}\n\n      <Web3Button\n        contractAddress={contractAddress}\n        action={(contract) =>\n          contract.erc721.mint({\n            name: \"Hello world!\",\n            image:\n              // You can use a file or URL here!\n              \"ipfs://QmZbovNXznTHpYn2oqgCFQYP4ZCpKDquenv5rFCX8irseo/0.png\",\n          })\n        }\n      >\n        Mint NFT\n      </Web3Button>\n    </div>\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n## Advanced Configuration\n\nThe "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": " offers a number of configuration options to control the behavior of the React and Typescript SDK.\n\nThese are all the configuration options of the "
		},
		{
			"kind": "code",
			"text": "`<ThirdwebProvider />`"
		},
		{
			"kind": "text",
			"text": ".\nWe provide defaults for all of these, but you customize them to suit your needs.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"App.jsx\"\nimport { ChainId, IpfsStorage, ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst KitchenSinkExample = () => {\n  return (\n    <ThirdwebProvider\n      desiredChainId={ChainId.Mainnet}\n      chainRpc={{ [ChainId.Mainnet]: \"https://mainnet.infura.io/v3\" }}\n      dAppMeta={{\n        name: \"Example App\",\n        description: \"This is an example app\",\n        isDarkMode: false,\n        logoUrl: \"https://example.com/logo.png\",\n        url: \"https://example.com\",\n      }}\n      storageInterface={new IpfsStorage(\"https://your.ipfs.host.com\")}\n      supportedChains={[ChainId.Mainnet]}\n      walletConnectors={[\n        \"walletConnect\",\n        { name: \"injected\", options: { shimDisconnect: false } },\n        {\n          name: \"walletLink\",\n          options: {\n            appName: \"Example App\",\n          },\n        },\n        {\n          name: \"magic\",\n          options: {\n            apiKey: \"your-magic-api-key\",\n            rpcUrls: {\n              [ChainId.Mainnet]: \"https://mainnet.infura.io/v3\",\n            },\n          },\n        },\n      ]}\n      sdkOptions={{\n        gasSettings: { maxPriceInGwei: 500, speed: \"fast\" },\n        readonlySettings: {\n          chainId: ChainId.Mainnet,\n          rpcUrl: \"https://mainnet.infura.io/v3\",\n        },\n        gasless: {\n          openzeppelin: {\n            relayerUrl: \"your-relayer-url\",\n          },\n        },\n      }}\n    >\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Available hooks\n\n### Main hooks\n\n| Hook                                                                                 | Description                                                                |\n| ------------------------------------------------------------------------------------ | -------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSDK`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesdk)                           | Access the instance of the thirdweb SDK created by the ThirdwebProvider.   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontract)                 | Use this resolve a contract address to a smart contract instance.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractWrite`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractwrite)       | Use this to get data from a contract read-function call.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractRead`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractread)         | Use this to get a function to make a write call to your contract.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractEvents`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractevents)     | Use this to get the contract metadata for a (built-in or custom) contract. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractMetadata`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractmetadata) | Use this to get the contract metadata for a (built-in or custom) contract. |\n\n### Wallet connection\n\n| Hook                                                                             | Description                                                 |\n| -------------------------------------------------------------------------------- | ----------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAddress`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useaddress)               | Hook for accessing the address of the connected wallet.     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMetamask`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemetamask)             | Hook for connecting to a Metamask wallet.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useWalletConnect`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usewalletconnect)   | Hook for connecting to a mobile wallet with Wallet Connect. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCoinbaseWallet`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecoinbasewallet) | Hook for connecting to a Coinbase wallet.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMagic`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemagic)                   | Hook for connecting to an email wallet using magic link.    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useGnosis`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usegnosis)                 | Hook for connecting to a Gnosis Safe.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useDisconnect`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usedisconnect)         | Hook for disconnecting the currently connected wallet.      |\n\n### Network connection\n\n| Hook                                                                               | Description                                                                                                                                  |\n| ---------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useChainId`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usechainid)                 | Hook for accessing the chain ID of the network the current wallet is connected to                                                            |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNetwork`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenetwork)                 | Hook for getting metadata about the network the current wallet is connected to and switching networks.                                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNetworkMismatch`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenetworkmismatch) | Hook for checking whether the connected wallet is on the correct network specified by the desiredChainId passed to the <ThirdwebProvider />. |\n\n### NFT\n\n| Hook                                                                                             | Description                                                                         |\n| ------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenft)                                       | Use this to get an individual NFT token of your NFTContract.                        |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenfts)                                     | Use this to get a list of NFT tokens of your NFTContract.                           |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTotalCirculatingSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetotalcirculatingsupply) | Use this to get a the total (minted) supply of your NFTContract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useOwnedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useownednfts)                           | Use this to get a the owned NFTs for a specific Erc721OrErc1155 and wallet address. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFTBalance`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenftbalance)                         | Use this to get a the total balance of a NFTContract and wallet address.            |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTotalCount`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetotalcount)                         | Use this to get the total count of NFT tokens of your NFTContract.                  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemintnft)                               | Use this to mint a new NFT on your Erc721OrErc1155.                                 |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemintnftsupply)                   | Use this mint extra supply on your Erc1155.                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransfernft)                       | Use this to transfer tokens on your NFTContract.                                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAirdropNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useairdropnft)                         | Use this to airdrop tokens on your Erc1155.                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBurnNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useburnnft)                               | Use this to burn an NFT on your Erc721OrErc1155.                                    |\n\n### Token\n\n| Hook                                                                                     | Description                                                        |\n| ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------ |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokensupply)               | Use this to get a the total supply of your contract.               |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenBalance`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokenbalance)             | Use this to get the balance of your contract for a given address.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenDecimals`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokendecimals)           | Use this to get the decimals of your contract for a given address. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useminttoken)                   | Use this to mint new tokens on your contract.                      |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimtoken)                 | Use this to claim tokens from your contract.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransfertoken)           | Use this to transfer tokens on your contract.                      |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferBatchToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransferbatchtoken) | Use this to transfer batch tokens on your contract.                |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBurnToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useburntoken)                   | Use this to burn tokens on your contract.                          |\n\n### Marketplace\n\n| Hook                                                                                         | Description                                                                               |\n| -------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselisting)                           | Use this to get a specific listing from the marketplace.                                  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListings`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselistings)                         | Use this to get a list all listings from your marketplace contract.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListingsCount`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselistingscount)               | Use this to get a count of all listings on your marketplace contract.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useActiveListings`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useactivelistings)             | Use this to get a list active listings from your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useWinningBid`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usewinningbid)                     | Use this to get a the winning bid for an auction listing from your marketplace contract.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAuctionWinner`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useauctionwinner)               | Use this to get the winner of an auction listing from your marketplace contract.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBidBuffer`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebidbuffer)                       | Use this to get the buffer in basis points between offers from your marketplace contract. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCreateDirectListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecreatedirectlisting)   | Use this to create a new Direct Listing on your marketplace contract.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCreateAuctionListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecreateauctionlisting) | Use this to create a new Auction Listing on your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCancelListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecancellisting)               | Use this to cancel a listing on your marketplace contract.                                |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMakeBid`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemakebid)                           | Use this to place a bid on an auction listing from your marketplace contract.             |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBuyNow`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebuynow)                             | Use this to buy out an auction listing from your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBuyDirectListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useBuyDirectListing)         | Use this to buy from a direct listing in your marketplace v3 contract.                    |\n\n### Permissions Controls\n\n| Hook                                                                                   | Description                                                                     |\n| -------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAllRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useallrolemembers)       | Use this to get the roles of all members.                                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.userolemembers)             | Use this to get the members of a role.                                          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useIsAddressRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useisaddressrole)         | Use this to check if a WalletAddress is a member of a role.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSetAllRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesetallrolemembers) | Use this to OVERWRITE the list of addresses that are members of specific roles. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useGrantRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usegrantrole)                 | Use this to grant a WalletAddress a specific role.                              |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRevokeRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.userevokerole)               | Use this to revoke a WalletAddress a specific role.                             |\n\n### Drop\n\n| Hook                                                                                           | Description                                                                          |\n| ---------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ |\n| ["
		},
		{
			"kind": "code",
			"text": "`useUnclaimedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useunclaimednfts)                 | Use this to get a list of unclaimed NFT tokens of your ERC721 Drop contract.         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimednfts)                     | Use this to get a list of claimed (minted) NFT tokens of your ERC721 Drop contract.. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useUnclaimedNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useunclaimednftsupply)       | Use this to get the total unclaimed NFT supply of your ERC721 Drop contract.         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimedNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimednftsupply)           | Use this to get the total claimed (minted) NFT supply of your ERC721 Drop contract.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBatchesToReveal`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebatchestoreveal)             | Use this to get a list of batches that are ready to be revealed.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimnft)                           | Use this to claim a NFT on your DropContract                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselazymint)                           | Use this to lazy mint a batch of NFTs on your DropContract.                          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useDelayedRevealLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usedelayedreveallazymint) | Use this to lazy mint a batch of delayed reveal NFTs on your DropContract.           |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRevealLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usereveallazymint)               | Use this to reveal a batch of delayed reveal NFTs on your RevealableContract.        |\n\n### Claim Conditions\n\n| Hook                                                                                                   | Description                                                                                              |\n| ------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useActiveClaimCondition`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useactiveclaimcondition)           | Use this to get the active claim condition for ERC20, ERC721 or ERC1155 based contracts.                 |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimconditions)                     | Use this to get all claim conditions for ERC20, ERC721 or ERC1155 based contracts.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimIneligibilityReasons`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimineligibilityreasons) | Use this to check for reasons that prevent claiming for either ERC20, ERC721 or ERC1155 based contracts. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSetClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesetclaimconditions)               | Use this to set claim conditions on your DropContract.                                                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useResetClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useresetclaimconditions)           | Use this to reset claim conditions on your DropContract.                                                 |"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "defaultTokens"
		},
		"2": {
			"sourceFileName": "src/wallet/wallets/defaultWallets.ts",
			"qualifiedName": "defaultWallets"
		},
		"3": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "useSmartWallet"
		},
		"4": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "useSmartWallet"
		},
		"5": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "W"
		},
		"6": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "personalWallet"
		},
		"7": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "options"
		},
		"8": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object"
		},
		"9": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object.connect"
		},
		"10": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"11": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"12": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "args"
		},
		"13": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"14": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.connectPersonalWallet"
		},
		"15": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"16": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"17": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "wallet"
		},
		"18": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.connectionArgs"
		},
		"19": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object.predictAddress"
		},
		"20": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"21": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"22": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "args"
		},
		"23": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"24": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.personalWalletAddress"
		},
		"25": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.data"
		},
		"26": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "bloctoWallet"
		},
		"27": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "bloctoWallet"
		},
		"28": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "options"
		},
		"29": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "coinbaseWallet"
		},
		"30": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "coinbaseWallet"
		},
		"31": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "options"
		},
		"32": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "embeddedWallet"
		},
		"33": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "embeddedWallet"
		},
		"34": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "_config"
		},
		"35": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "frameWallet"
		},
		"36": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "frameWallet"
		},
		"37": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "config"
		},
		"38": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "localWallet"
		},
		"39": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "localWallet"
		},
		"40": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "config"
		},
		"41": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "magicLink"
		},
		"42": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "magicLink"
		},
		"43": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "config"
		},
		"44": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "__type"
		},
		"45": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "__type.recommended"
		},
		"46": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "metamaskWallet"
		},
		"47": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "metamaskWallet"
		},
		"48": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "options"
		},
		"49": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "paperWallet"
		},
		"50": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "paperWallet"
		},
		"51": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "_config"
		},
		"52": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "phantomWallet"
		},
		"53": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "phantomWallet"
		},
		"54": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "options"
		},
		"55": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "rainbowWallet"
		},
		"56": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "rainbowWallet"
		},
		"57": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "options"
		},
		"58": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "safeWallet"
		},
		"59": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "safeWallet"
		},
		"60": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "config"
		},
		"61": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type"
		},
		"62": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"63": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "smartWallet"
		},
		"64": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "smartWallet"
		},
		"65": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "wallet"
		},
		"66": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "config"
		},
		"67": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "trustWallet"
		},
		"68": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "trustWallet"
		},
		"69": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "options"
		},
		"70": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnect"
		},
		"71": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnect"
		},
		"72": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "config"
		},
		"73": {
			"sourceFileName": "src/wallet/wallets/walletConnectV1.tsx",
			"qualifiedName": "walletConnectV1"
		},
		"74": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnectV1"
		},
		"75": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "config"
		},
		"76": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "zerionWallet"
		},
		"77": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "zerionWallet"
		},
		"78": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "options"
		},
		"79": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "okxWallet"
		},
		"80": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "okxWallet"
		},
		"81": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "options"
		},
		"82": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "darkTheme"
		},
		"83": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "darkTheme"
		},
		"84": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "overrides"
		},
		"85": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "lightTheme"
		},
		"86": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "lightTheme"
		},
		"87": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "overrides"
		},
		"88": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "Theme"
		},
		"89": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "ThemeOverrides"
		},
		"90": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useIsWalletModalOpen"
		},
		"91": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useIsWalletModalOpen"
		},
		"92": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetIsWalletModalOpen"
		},
		"93": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetIsWalletModalOpen"
		},
		"94": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "useSafe"
		},
		"95": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "useSafe"
		},
		"96": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "__function"
		},
		"97": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "__function"
		},
		"98": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "connectProps"
		},
		"99": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "useMagic"
		},
		"100": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "useMagic"
		},
		"101": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "__function"
		},
		"102": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "__function"
		},
		"103": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "options"
		},
		"104": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWallet"
		},
		"105": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ConnectWallet"
		},
		"106": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"107": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "context"
		},
		"108": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWalletProps"
		},
		"109": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"110": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.className"
		},
		"111": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.theme"
		},
		"112": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.btnTitle"
		},
		"113": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalTitle"
		},
		"114": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalTitleIconUrl"
		},
		"115": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.detailsBtn"
		},
		"116": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"117": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"118": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.dropdownPosition"
		},
		"119": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.auth"
		},
		"120": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"121": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"122": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"123": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"124": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"125": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "token"
		},
		"126": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"127": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"128": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"129": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.style"
		},
		"130": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.networkSelector"
		},
		"131": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.hideTestnetFaucet"
		},
		"132": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.switchToActiveChain"
		},
		"133": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalSize"
		},
		"134": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"135": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"136": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.welcomeScreen"
		},
		"137": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.supportedTokens"
		},
		"138": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.displayBalanceToken"
		},
		"139": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
			"qualifiedName": "ConnectModalInline"
		},
		"140": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
			"qualifiedName": "ConnectModalInline"
		},
		"141": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
			"qualifiedName": "props"
		},
		"142": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
			"qualifiedName": "__type"
		},
		"143": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
			"qualifiedName": "__type.onModalHide"
		},
		"144": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
			"qualifiedName": "__type"
		},
		"145": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectModalInline.tsx",
			"qualifiedName": "__type"
		},
		"146": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelector"
		},
		"147": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NetworkSelector"
		},
		"148": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"149": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "context"
		},
		"150": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelectorProps"
		},
		"151": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"152": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.theme"
		},
		"153": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onClose"
		},
		"154": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"155": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"156": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.open"
		},
		"157": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.chains"
		},
		"158": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.popularChains"
		},
		"159": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.recentChains"
		},
		"160": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.renderChain"
		},
		"161": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onSwitch"
		},
		"162": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"163": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"164": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "chain"
		},
		"165": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onCustomClick"
		},
		"166": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"167": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"168": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProvider"
		},
		"169": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProvider"
		},
		"170": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "TChains"
		},
		"171": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"172": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"173": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"174": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"175": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"176": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"177": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"178": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"179": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"180": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"181": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"182": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"183": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"184": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"185": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"186": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"187": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"188": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "__0"
		},
		"189": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps"
		},
		"190": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.src"
		},
		"191": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.alt"
		},
		"192": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.poster"
		},
		"193": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.gatewayUrl"
		},
		"194": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.width"
		},
		"195": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.height"
		},
		"196": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"197": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"198": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"199": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"200": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"201": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"202": {
			"sourceFileName": "src/wallet/hooks/useInstalledWallets.ts",
			"qualifiedName": "useInstalledWallets"
		},
		"203": {
			"sourceFileName": "src/wallet/hooks/useInstalledWallets.ts",
			"qualifiedName": "useInstalledWallets"
		},
		"204": {
			"sourceFileName": "src/wallet/hooks/useInstalledWallets.ts",
			"qualifiedName": "__object"
		},
		"205": {
			"sourceFileName": "src/wallet/hooks/useInstalledWallets.ts",
			"qualifiedName": "__object.metamask"
		},
		"206": {
			"sourceFileName": "src/wallet/hooks/useInstalledWallets.ts",
			"qualifiedName": "__object.coinbaseWallet"
		},
		"207": {
			"sourceFileName": "src/wallet/hooks/useInstalledWallets.ts",
			"qualifiedName": "__object.trustWallet"
		},
		"208": {
			"sourceFileName": "src/wallet/hooks/useInstalledWallets.ts",
			"qualifiedName": "__object.zerionWallet"
		},
		"209": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "useRainbowWallet"
		},
		"210": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "useRainbowWallet"
		},
		"211": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__function"
		},
		"212": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__function"
		},
		"213": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"214": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__type"
		},
		"215": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"216": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "useTrustWallet"
		},
		"217": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "useTrustWallet"
		},
		"218": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__function"
		},
		"219": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__function"
		},
		"220": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"221": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__type"
		},
		"222": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"223": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "useMetamask"
		},
		"224": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "useMetamask"
		},
		"225": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__function"
		},
		"226": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__function"
		},
		"227": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "connectOptions"
		},
		"228": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__type"
		},
		"229": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__type.chainId"
		},
		"230": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "useCoinbaseWallet"
		},
		"231": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "useCoinbaseWallet"
		},
		"232": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__function"
		},
		"233": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__function"
		},
		"234": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"235": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__type"
		},
		"236": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"237": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "useFrameWallet"
		},
		"238": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "useFrameWallet"
		},
		"239": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__function"
		},
		"240": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__function"
		},
		"241": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "connectOptions"
		},
		"242": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__type"
		},
		"243": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__type.chainId"
		},
		"244": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "useBloctoWallet"
		},
		"245": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "useBloctoWallet"
		},
		"246": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__function"
		},
		"247": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__function"
		},
		"248": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "options"
		},
		"249": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__type"
		},
		"250": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"251": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWallet"
		},
		"252": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWallet"
		},
		"253": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object"
		},
		"254": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object.connect"
		},
		"255": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"256": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"257": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "authParams"
		},
		"258": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object.sendVerificationEmail"
		},
		"259": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"260": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"261": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__0"
		},
		"262": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__type"
		},
		"263": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__type.email"
		},
		"264": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "useEmbeddedWalletSendVerificationEmail"
		},
		"265": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "useEmbeddedWalletSendVerificationEmail"
		},
		"266": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "__function"
		},
		"267": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "__function"
		},
		"268": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "email"
		},
		"269": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWalletUserEmail"
		},
		"270": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWalletUserEmail"
		},
		"271": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWallet"
		},
		"272": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWallet"
		},
		"273": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__function"
		},
		"274": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__function"
		},
		"275": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "options"
		},
		"276": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type"
		},
		"277": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type.chainId"
		},
		"278": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type.email"
		},
		"279": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnect"
		},
		"280": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnect"
		},
		"281": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"282": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"283": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "options"
		},
		"284": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type"
		},
		"285": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.chainId"
		},
		"286": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.projectId"
		},
		"287": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.qrModalOptions"
		},
		"288": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnectV1"
		},
		"289": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnectV1"
		},
		"290": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"291": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"292": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "options"
		},
		"293": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type"
		},
		"294": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.chainId"
		},
		"295": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "useResolvedMediaType"
		},
		"296": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "useResolvedMediaType"
		},
		"297": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "uri"
		},
		"298": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "mimeType"
		},
		"299": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "gatewayUrl"
		},
		"300": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object"
		},
		"301": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object.url"
		},
		"302": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object.mimeType"
		},
		"303": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaRenderer"
		},
		"304": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MediaRenderer"
		},
		"305": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"306": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType"
		},
		"307": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType.url"
		},
		"308": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType.mimeType"
		},
		"309": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps"
		},
		"310": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.metadata"
		},
		"311": {
			"sourceFileName": "../sdk/src/core/schema/nft.ts",
			"qualifiedName": "__type"
		},
		"312": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.width"
		},
		"313": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.height"
		},
		"314": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"315": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"316": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"317": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"318": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"319": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"320": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMedia"
		},
		"321": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ThirdwebNftMedia"
		},
		"322": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"323": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3Button"
		},
		"324": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3Button"
		},
		"325": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "TAction"
		},
		"326": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "props"
		},
		"327": {
			"sourceFileName": "../react-core/src/core/utils/ipfs.ts",
			"qualifiedName": "resolveMimeType"
		},
		"328": {
			"sourceFileName": "../react-core/src/core/utils/ipfs.ts",
			"qualifiedName": "resolveMimeType"
		},
		"329": {
			"sourceFileName": "../react-core/src/core/utils/ipfs.ts",
			"qualifiedName": "url"
		},
		"330": {
			"sourceFileName": "../react-core/src/core/providers/theme-context.tsx",
			"qualifiedName": "ThirdwebThemeContext"
		},
		"331": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCore"
		},
		"332": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCore"
		},
		"333": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "TChains"
		},
		"334": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "__0"
		},
		"335": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps"
		},
		"336": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.supportedWallets"
		},
		"337": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.dAppMeta"
		},
		"338": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.autoConnect"
		},
		"339": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.theme"
		},
		"340": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.createWalletStorage"
		},
		"341": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.autoSwitch"
		},
		"342": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.autoConnectTimeout"
		},
		"343": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.signerWallet"
		},
		"344": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "clientId"
		},
		"345": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "secretKey"
		},
		"346": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "activeChain"
		},
		"347": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"348": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"349": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "supportedChains"
		},
		"350": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "sdkOptions"
		},
		"351": {
			"sourceFileName": "../sdk/src/evm/schema/sdk-options.ts",
			"qualifiedName": "__type"
		},
		"352": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "storageInterface"
		},
		"353": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "authConfig"
		},
		"354": {
			"sourceFileName": "../react-core/src/core/providers/query-client.tsx",
			"qualifiedName": "queryClient"
		},
		"355": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.TChains"
		},
		"357": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallet"
		},
		"358": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallet"
		},
		"359": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "T"
		},
		"360": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "walletId"
		},
		"361": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallet"
		},
		"362": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useConnect"
		},
		"363": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useConnect"
		},
		"364": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"365": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"366": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "args"
		},
		"367": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "I"
		},
		"368": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useConnectionStatus"
		},
		"369": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useConnectionStatus"
		},
		"370": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useCreateWalletInstance"
		},
		"371": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useCreateWalletInstance"
		},
		"372": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"373": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"374": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "Wallet"
		},
		"375": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "I"
		},
		"376": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useDisconnect"
		},
		"377": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useDisconnect"
		},
		"378": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"379": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"380": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSwitchChain"
		},
		"381": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSwitchChain"
		},
		"382": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"383": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"384": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "chain"
		},
		"385": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallets"
		},
		"386": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallets"
		},
		"387": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWalletConfig"
		},
		"388": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWalletConfig"
		},
		"389": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSetConnectionStatus"
		},
		"390": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSetConnectionStatus"
		},
		"391": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"392": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"393": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "status"
		},
		"394": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSetConnectedWallet"
		},
		"395": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSetConnectedWallet"
		},
		"396": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"397": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "__type"
		},
		"398": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "wallet"
		},
		"399": {
			"sourceFileName": "../react-core/src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "params"
		},
		"400": {
			"sourceFileName": "../react-core/src/core/hooks/useNetwork.ts",
			"qualifiedName": "useNetwork"
		},
		"401": {
			"sourceFileName": "../react-core/src/core/hooks/useNetwork.ts",
			"qualifiedName": "useNetwork"
		},
		"402": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "useWalletContext"
		},
		"403": {
			"sourceFileName": "../react-core/src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "useWalletContext"
		},
		"404": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useBalance"
		},
		"405": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useBalance"
		},
		"406": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "tokenAddress"
		},
		"409": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useAddress"
		},
		"410": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useAddress"
		},
		"411": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useChainId"
		},
		"412": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useChainId"
		},
		"413": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useActiveChain"
		},
		"414": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useActiveChain"
		},
		"415": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useChain"
		},
		"416": {
			"sourceFileName": "../react-core/src/evm/hooks/wallet.ts",
			"qualifiedName": "useChain"
		},
		"417": {
			"sourceFileName": "../react-core/src/core/query-utils/query-key.ts",
			"qualifiedName": "shouldNeverPersistQuery"
		},
		"418": {
			"sourceFileName": "../react-core/src/core/query-utils/query-key.ts",
			"qualifiedName": "shouldNeverPersistQuery"
		},
		"419": {
			"sourceFileName": "../react-core/src/core/query-utils/query-key.ts",
			"qualifiedName": "TKey"
		},
		"420": {
			"sourceFileName": "../react-core/src/core/query-utils/query-key.ts",
			"qualifiedName": "key"
		},
		"421": {
			"sourceFileName": "../react-core/src/core/query-utils/required-param.ts",
			"qualifiedName": "RequiredParam"
		},
		"422": {
			"sourceFileName": "../react-core/src/core/query-utils/required-param.ts",
			"qualifiedName": "T"
		},
		"423": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "WalletConfig"
		},
		"424": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"425": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.category"
		},
		"426": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.id"
		},
		"427": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.meta"
		},
		"428": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.create"
		},
		"429": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"430": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"431": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "options"
		},
		"432": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.connectUI"
		},
		"433": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.selectUI"
		},
		"434": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.isInstalled"
		},
		"435": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"436": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"437": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.personalWallets"
		},
		"438": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.recommended"
		},
		"439": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.isHeadless"
		},
		"440": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "I"
		},
		"441": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "ConnectUIProps"
		},
		"442": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"443": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.hide"
		},
		"444": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"445": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"446": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.connected"
		},
		"447": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"448": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"449": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.isOpen"
		},
		"450": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.show"
		},
		"451": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"452": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"453": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.goBack"
		},
		"454": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"455": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"456": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.theme"
		},
		"457": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.walletConfig"
		},
		"458": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.selectionData"
		},
		"459": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.setSelectionData"
		},
		"460": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"461": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"462": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "data"
		},
		"463": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.supportedWallets"
		},
		"464": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.modalSize"
		},
		"465": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.onLocallyConnected"
		},
		"466": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"467": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"468": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "walleInstance"
		},
		"469": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "I"
		},
		"470": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "SelectUIProps"
		},
		"471": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"472": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.onSelect"
		},
		"473": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"474": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"475": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "selectionData"
		},
		"476": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.walletConfig"
		},
		"477": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.supportedWallets"
		},
		"478": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.theme"
		},
		"479": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.modalSize"
		},
		"480": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "I"
		},
		"481": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "WalletClass"
		},
		"482": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"483": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.id"
		},
		"484": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.meta"
		},
		"485": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"486": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "options"
		},
		"487": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "I"
		},
		"488": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "WalletInstance"
		},
		"489": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "ExtraCoreWalletOptions"
		},
		"490": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"491": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "__type.chain"
		},
		"492": {
			"sourceFileName": "../react-core/src/core/types/wallet.ts",
			"qualifiedName": "WalletOptions"
		},
		"493": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "useThirdwebAuthContext"
		},
		"494": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "useThirdwebAuthContext"
		},
		"495": {
			"sourceFileName": "../react-core/src/evm/contexts/ThirdwebAuthProvider.tsx",
			"qualifiedName": "ThirdwebAuthProvider"
		},
		"496": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ThirdwebAuthProvider"
		},
		"497": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"498": {
			"sourceFileName": "../react-core/src/evm/contexts/ThirdwebAuthProvider.tsx",
			"qualifiedName": "__type"
		},
		"499": {
			"sourceFileName": "../react-core/src/evm/contexts/ThirdwebAuthProvider.tsx",
			"qualifiedName": "__type.value"
		},
		"500": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "context"
		},
		"501": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ThirdwebAuthConfig"
		},
		"502": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ThirdwebAuthConfig.authUrl"
		},
		"503": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ThirdwebAuthConfig.domain"
		},
		"504": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ThirdwebAuthConfig.secureStorage"
		},
		"505": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage"
		},
		"506": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.getItem"
		},
		"507": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.getItem"
		},
		"508": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "key"
		},
		"509": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.setItem"
		},
		"510": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.setItem"
		},
		"511": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "key"
		},
		"512": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "value"
		},
		"513": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.removeItem"
		},
		"514": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.removeItem"
		},
		"515": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "key"
		},
		"516": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-config.tsx",
			"qualifiedName": "ThirdwebConfigProvider"
		},
		"517": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ThirdwebConfigProvider"
		},
		"518": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"519": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-config.tsx",
			"qualifiedName": "__type"
		},
		"520": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-config.tsx",
			"qualifiedName": "__type.value"
		},
		"521": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "context"
		},
		"522": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-config.tsx",
			"qualifiedName": "useThirdwebConfigContext"
		},
		"523": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-config.tsx",
			"qualifiedName": "useThirdwebConfigContext"
		},
		"524": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-wallet.tsx",
			"qualifiedName": "ThirdwebConnectedWalletProvider"
		},
		"525": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ThirdwebConnectedWalletProvider"
		},
		"526": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"527": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-wallet.tsx",
			"qualifiedName": "__type"
		},
		"528": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-wallet.tsx",
			"qualifiedName": "__type.signer"
		},
		"529": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "context"
		},
		"530": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-wallet.tsx",
			"qualifiedName": "useThirdwebConnectedWalletContext"
		},
		"531": {
			"sourceFileName": "../react-core/src/evm/contexts/thirdweb-wallet.tsx",
			"qualifiedName": "useThirdwebConnectedWalletContext"
		},
		"532": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "ClaimIneligibilityParams"
		},
		"533": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"534": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.walletAddress"
		},
		"535": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.quantity"
		},
		"536": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "SetClaimConditionsParams"
		},
		"537": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"538": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.phases"
		},
		"539": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.reset"
		},
		"540": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useActiveClaimCondition"
		},
		"541": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useActiveClaimCondition"
		},
		"542": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"543": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"544": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "options"
		},
		"545": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimerProofs"
		},
		"546": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimerProofs"
		},
		"547": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"548": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "claimerAddress"
		},
		"549": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"550": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "claimConditionId"
		},
		"551": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"552": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.address"
		},
		"553": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.proof"
		},
		"554": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.maxClaimable"
		},
		"555": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.price"
		},
		"556": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.currencyAddress"
		},
		"557": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimConditions"
		},
		"558": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimConditions"
		},
		"559": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"560": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"561": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "options"
		},
		"562": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimIneligibilityReasons"
		},
		"563": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimIneligibilityReasons"
		},
		"564": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"565": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "params"
		},
		"566": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"567": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useActiveClaimConditionForWallet"
		},
		"568": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useActiveClaimConditionForWallet"
		},
		"569": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"570": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "walletAddress"
		},
		"571": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"572": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useSetClaimConditions"
		},
		"573": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useSetClaimConditions"
		},
		"574": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"575": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"576": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"577": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.receipt"
		},
		"578": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useResetClaimConditions"
		},
		"579": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useResetClaimConditions"
		},
		"580": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"581": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"582": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"583": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.receipt"
		},
		"584": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.data"
		},
		"585": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"586": {
			"sourceFileName": "../react-core/src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"587": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "usePrimarySaleRecipient"
		},
		"588": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "usePrimarySaleRecipient"
		},
		"589": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"590": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdatePrimarySaleRecipient"
		},
		"591": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdatePrimarySaleRecipient"
		},
		"592": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"593": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"594": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.receipt"
		},
		"595": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useRoyaltySettings"
		},
		"596": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useRoyaltySettings"
		},
		"597": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"598": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"599": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.seller_fee_basis_points"
		},
		"600": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.fee_recipient"
		},
		"601": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdateRoyaltySettings"
		},
		"602": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdateRoyaltySettings"
		},
		"603": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"604": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"605": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.receipt"
		},
		"606": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.data"
		},
		"607": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"608": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"609": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"610": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.seller_fee_basis_points"
		},
		"611": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.fee_recipient"
		},
		"612": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"613": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.seller_fee_basis_points"
		},
		"614": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.fee_recipient"
		},
		"615": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "usePlatformFees"
		},
		"616": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "usePlatformFees"
		},
		"617": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"618": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"619": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.platform_fee_basis_points"
		},
		"620": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.platform_fee_recipient"
		},
		"621": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdatePlatformFees"
		},
		"622": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdatePlatformFees"
		},
		"623": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"624": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"625": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.receipt"
		},
		"626": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.data"
		},
		"627": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"628": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"629": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"630": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.platform_fee_basis_points"
		},
		"631": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.fee_recipient"
		},
		"632": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useMetadata"
		},
		"633": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useMetadata"
		},
		"634": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"635": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdateMetadata"
		},
		"636": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdateMetadata"
		},
		"637": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"638": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractType"
		},
		"639": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractType"
		},
		"640": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"641": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractType"
		},
		"642": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"643": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.cacheKey"
		},
		"644": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"645": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"646": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"647": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "chainId"
		},
		"648": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.useQuery"
		},
		"649": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.fetchQuery"
		},
		"650": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useCompilerMetadata"
		},
		"651": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useCompilerMetadata"
		},
		"652": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"653": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "compilerMetadata"
		},
		"654": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"655": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.cacheKey"
		},
		"656": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"657": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"658": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"659": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "chainId"
		},
		"660": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.useQuery"
		},
		"661": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.fetchQuery"
		},
		"662": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"663": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"664": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractAddress"
		},
		"665": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"666": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"667": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"668": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"669": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractType"
		},
		"670": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"671": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "_contractType"
		},
		"672": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"673": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"674": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "_abi"
		},
		"675": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractMetadata"
		},
		"676": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractMetadata"
		},
		"677": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContract"
		},
		"678": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"679": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractMetadataUpdate"
		},
		"680": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractMetadataUpdate"
		},
		"681": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"682": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"683": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.receipt"
		},
		"684": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.data"
		},
		"685": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"686": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"687": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"688": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.name"
		},
		"689": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.description"
		},
		"690": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.image"
		},
		"691": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.external_link"
		},
		"692": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.app_uri"
		},
		"693": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractEvents"
		},
		"694": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractEvents"
		},
		"695": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"696": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "eventName"
		},
		"697": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "options"
		},
		"698": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"699": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.queryFilter"
		},
		"700": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.subscribe"
		},
		"701": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractRead"
		},
		"702": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractRead"
		},
		"703": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractAddress"
		},
		"704": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContract"
		},
		"705": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractInstance"
		},
		"706": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TFunctionName"
		},
		"707": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TArgs"
		},
		"708": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TReturnType"
		},
		"709": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"710": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "functionName"
		},
		"711": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "args"
		},
		"712": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "overrides"
		},
		"713": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractWrite"
		},
		"714": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractWrite"
		},
		"715": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractAddress"
		},
		"716": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContract"
		},
		"717": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractInstance"
		},
		"718": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TFunctionName"
		},
		"719": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TArgs"
		},
		"720": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"721": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "functionName"
		},
		"722": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"723": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.receipt"
		},
		"724": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.data"
		},
		"725": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"726": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"727": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"728": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.args"
		},
		"729": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.overrides"
		},
		"730": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "UseContractResult"
		},
		"731": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"732": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.contract"
		},
		"733": {
			"sourceFileName": "../react-core/src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContract"
		},
		"734": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useUnclaimedNFTs"
		},
		"735": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useUnclaimedNFTs"
		},
		"736": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"737": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "queryParams"
		},
		"738": {
			"sourceFileName": "../sdk/src/core/schema/QueryParams.ts",
			"qualifiedName": "__type"
		},
		"739": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimedNFTs"
		},
		"740": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimedNFTs"
		},
		"741": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"742": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "queryParams"
		},
		"743": {
			"sourceFileName": "../sdk/src/core/schema/QueryParams.ts",
			"qualifiedName": "__type"
		},
		"744": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useUnclaimedNFTSupply"
		},
		"745": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useUnclaimedNFTSupply"
		},
		"746": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"747": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimedNFTSupply"
		},
		"748": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimedNFTSupply"
		},
		"749": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"750": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useBatchesToReveal"
		},
		"751": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useBatchesToReveal"
		},
		"752": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"753": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"754": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimNFT"
		},
		"755": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimNFT"
		},
		"756": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"757": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"758": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useLazyMint"
		},
		"759": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useLazyMint"
		},
		"760": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"761": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"762": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "onProgress"
		},
		"763": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"764": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"765": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "progress"
		},
		"766": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useDelayedRevealLazyMint"
		},
		"767": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useDelayedRevealLazyMint"
		},
		"768": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"769": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"770": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "onProgress"
		},
		"771": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"772": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"773": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "progress"
		},
		"774": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useRevealLazyMint"
		},
		"775": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "useRevealLazyMint"
		},
		"776": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"777": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"778": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"779": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type.receipt"
		},
		"780": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type.data"
		},
		"781": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"782": {
			"sourceFileName": "../react-core/src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"783": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListing"
		},
		"784": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListing"
		},
		"785": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"786": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"787": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListing"
		},
		"788": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListing"
		},
		"789": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"790": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"791": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuction"
		},
		"792": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuction"
		},
		"793": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"794": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "auctionId"
		},
		"795": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListings"
		},
		"796": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListings"
		},
		"797": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"798": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"799": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListings"
		},
		"800": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListings"
		},
		"801": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"802": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"803": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useValidDirectListings"
		},
		"804": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useValidDirectListings"
		},
		"805": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"806": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"807": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctions"
		},
		"808": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctions"
		},
		"809": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"810": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"811": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useValidEnglishAuctions"
		},
		"812": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useValidEnglishAuctions"
		},
		"813": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"814": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"815": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListingsCount"
		},
		"816": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListingsCount"
		},
		"817": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"818": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListingsCount"
		},
		"819": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListingsCount"
		},
		"820": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"821": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctionsCount"
		},
		"822": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctionsCount"
		},
		"823": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"824": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useActiveListings"
		},
		"825": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useActiveListings"
		},
		"826": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"827": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"828": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useWinningBid"
		},
		"829": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useWinningBid"
		},
		"830": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"831": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"832": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctionWinningBid"
		},
		"833": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctionWinningBid"
		},
		"834": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"835": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "auctionId"
		},
		"836": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useAuctionWinner"
		},
		"837": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useAuctionWinner"
		},
		"838": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"839": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"840": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBidBuffer"
		},
		"841": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBidBuffer"
		},
		"842": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"843": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"844": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMinimumNextBid"
		},
		"845": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMinimumNextBid"
		},
		"846": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"847": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"848": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCreateDirectListing"
		},
		"849": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCreateDirectListing"
		},
		"850": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "TMarketplace"
		},
		"851": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"852": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"853": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.tokenId"
		},
		"854": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.pricePerToken"
		},
		"855": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.assetContractAddress"
		},
		"856": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.quantity"
		},
		"857": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.currencyContractAddress"
		},
		"858": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.startTimestamp"
		},
		"859": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.endTimestamp"
		},
		"860": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isReservedListing"
		},
		"861": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCreateAuctionListing"
		},
		"862": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCreateAuctionListing"
		},
		"863": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "TMarketplace"
		},
		"864": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"865": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"866": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.tokenId"
		},
		"867": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.minimumBidAmount"
		},
		"868": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.buyoutBidAmount"
		},
		"869": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.assetContractAddress"
		},
		"870": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.quantity"
		},
		"871": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.currencyContractAddress"
		},
		"872": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.timeBufferInSeconds"
		},
		"873": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.bidBufferBps"
		},
		"874": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.startTimestamp"
		},
		"875": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.endTimestamp"
		},
		"876": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelListing"
		},
		"877": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelListing"
		},
		"878": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"879": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"880": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"881": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"882": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"883": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"884": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelDirectListing"
		},
		"885": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelDirectListing"
		},
		"886": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"887": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"888": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"889": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"890": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"891": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"892": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelEnglishAuction"
		},
		"893": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelEnglishAuction"
		},
		"894": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"895": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"896": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"897": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"898": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"899": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"900": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMakeBid"
		},
		"901": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMakeBid"
		},
		"902": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"903": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"904": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"905": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"906": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"907": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"908": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMakeOffer"
		},
		"909": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMakeOffer"
		},
		"910": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"911": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"912": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"913": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"914": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"915": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"916": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useAcceptDirectListingOffer"
		},
		"917": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useAcceptDirectListingOffer"
		},
		"918": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"919": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"920": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"921": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"922": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"923": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"924": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useExecuteAuctionSale"
		},
		"925": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useExecuteAuctionSale"
		},
		"926": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"927": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"928": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"929": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"930": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"931": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"932": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useOffers"
		},
		"933": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useOffers"
		},
		"934": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"935": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"936": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"937": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"938": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.error"
		},
		"939": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isError"
		},
		"940": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isLoading"
		},
		"941": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isLoadingError"
		},
		"942": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isRefetchError"
		},
		"943": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isSuccess"
		},
		"944": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.status"
		},
		"945": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.dataUpdatedAt"
		},
		"946": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.errorUpdatedAt"
		},
		"947": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.failureCount"
		},
		"948": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.failureReason"
		},
		"949": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.errorUpdateCount"
		},
		"950": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetched"
		},
		"951": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetchedAfterMount"
		},
		"952": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetching"
		},
		"953": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isInitialLoading"
		},
		"954": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPaused"
		},
		"955": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPlaceholderData"
		},
		"956": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPreviousData"
		},
		"957": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isRefetching"
		},
		"958": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isStale"
		},
		"959": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.refetch"
		},
		"960": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"961": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"962": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "options"
		},
		"963": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "TPageData"
		},
		"964": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.remove"
		},
		"965": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"966": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"967": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.fetchStatus"
		},
		"968": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"969": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"970": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.error"
		},
		"971": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isError"
		},
		"972": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isLoading"
		},
		"973": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isLoadingError"
		},
		"974": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isRefetchError"
		},
		"975": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isSuccess"
		},
		"976": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.status"
		},
		"977": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.dataUpdatedAt"
		},
		"978": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.errorUpdatedAt"
		},
		"979": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.failureCount"
		},
		"980": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.failureReason"
		},
		"981": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.errorUpdateCount"
		},
		"982": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetched"
		},
		"983": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetchedAfterMount"
		},
		"984": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetching"
		},
		"985": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isInitialLoading"
		},
		"986": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPaused"
		},
		"987": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPlaceholderData"
		},
		"988": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPreviousData"
		},
		"989": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isRefetching"
		},
		"990": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isStale"
		},
		"991": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.refetch"
		},
		"992": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"993": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"994": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "options"
		},
		"995": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "TPageData"
		},
		"996": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.remove"
		},
		"997": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"998": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"999": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.fetchStatus"
		},
		"1000": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1001": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"1002": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.error"
		},
		"1003": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isError"
		},
		"1004": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isLoading"
		},
		"1005": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isLoadingError"
		},
		"1006": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isRefetchError"
		},
		"1007": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isSuccess"
		},
		"1008": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.status"
		},
		"1009": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.dataUpdatedAt"
		},
		"1010": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.errorUpdatedAt"
		},
		"1011": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.failureCount"
		},
		"1012": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.failureReason"
		},
		"1013": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.errorUpdateCount"
		},
		"1014": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetched"
		},
		"1015": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetchedAfterMount"
		},
		"1016": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetching"
		},
		"1017": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isInitialLoading"
		},
		"1018": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPaused"
		},
		"1019": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPlaceholderData"
		},
		"1020": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPreviousData"
		},
		"1021": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isRefetching"
		},
		"1022": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isStale"
		},
		"1023": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.refetch"
		},
		"1024": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1025": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1026": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "options"
		},
		"1027": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "TPageData"
		},
		"1028": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.remove"
		},
		"1029": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1030": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1031": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.fetchStatus"
		},
		"1032": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1033": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"1034": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.error"
		},
		"1035": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isError"
		},
		"1036": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isLoading"
		},
		"1037": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isLoadingError"
		},
		"1038": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isRefetchError"
		},
		"1039": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isSuccess"
		},
		"1040": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.status"
		},
		"1041": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.dataUpdatedAt"
		},
		"1042": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.errorUpdatedAt"
		},
		"1043": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.failureCount"
		},
		"1044": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.failureReason"
		},
		"1045": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.errorUpdateCount"
		},
		"1046": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetched"
		},
		"1047": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetchedAfterMount"
		},
		"1048": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isFetching"
		},
		"1049": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isInitialLoading"
		},
		"1050": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPaused"
		},
		"1051": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPlaceholderData"
		},
		"1052": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isPreviousData"
		},
		"1053": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isRefetching"
		},
		"1054": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.isStale"
		},
		"1055": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.refetch"
		},
		"1056": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1057": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1058": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "options"
		},
		"1059": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "TPageData"
		},
		"1060": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.remove"
		},
		"1061": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1062": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1063": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.fetchStatus"
		},
		"1064": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBuyNow"
		},
		"1065": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBuyNow"
		},
		"1066": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"1067": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1068": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"1069": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"1070": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1071": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1072": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBuyDirectListing"
		},
		"1073": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBuyDirectListing"
		},
		"1074": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"1075": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1076": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"1077": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"1078": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1079": {
			"sourceFileName": "../react-core/src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"1080": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFT"
		},
		"1081": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFT"
		},
		"1082": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"1083": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1084": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "tokenId"
		},
		"1085": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFTs"
		},
		"1086": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFTs"
		},
		"1087": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"1088": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1089": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "queryParams"
		},
		"1090": {
			"sourceFileName": "../sdk/src/core/schema/QueryParams.ts",
			"qualifiedName": "__type"
		},
		"1091": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTotalCount"
		},
		"1092": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTotalCount"
		},
		"1093": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"1094": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1095": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTotalCirculatingSupply"
		},
		"1096": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTotalCirculatingSupply"
		},
		"1097": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1098": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "tokenId"
		},
		"1099": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useOwnedNFTs"
		},
		"1100": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useOwnedNFTs"
		},
		"1101": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"1102": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1103": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "ownerWalletAddress"
		},
		"1104": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "queryParams"
		},
		"1105": {
			"sourceFileName": "../sdk/src/core/schema/QueryParams.ts",
			"qualifiedName": "__type"
		},
		"1106": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFTBalance"
		},
		"1107": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFTBalance"
		},
		"1108": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1109": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "ownerWalletAddress"
		},
		"1110": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "tokenId"
		},
		"1111": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useMintNFT"
		},
		"1112": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useMintNFT"
		},
		"1113": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"1114": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1115": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useMintNFTSupply"
		},
		"1116": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useMintNFTSupply"
		},
		"1117": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1118": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTransferNFT"
		},
		"1119": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTransferNFT"
		},
		"1120": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"1121": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1122": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1123": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.receipt"
		},
		"1124": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.data"
		},
		"1125": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1126": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1127": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useAirdropNFT"
		},
		"1128": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useAirdropNFT"
		},
		"1129": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1130": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1131": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.receipt"
		},
		"1132": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.data"
		},
		"1133": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1134": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1135": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useBurnNFT"
		},
		"1136": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useBurnNFT"
		},
		"1137": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"1138": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1139": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1140": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.receipt"
		},
		"1141": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.data"
		},
		"1142": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1143": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1144": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useSharedMetadata"
		},
		"1145": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useSharedMetadata"
		},
		"1146": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1147": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useSetSharedMetadata"
		},
		"1148": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "useSetSharedMetadata"
		},
		"1149": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"1150": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"1151": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1152": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.receipt"
		},
		"1153": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.data"
		},
		"1154": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1155": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1156": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"1157": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.name"
		},
		"1158": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.description"
		},
		"1159": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.image"
		},
		"1160": {
			"sourceFileName": "../react-core/src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.animation_url"
		},
		"1161": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useAllRoleMembers"
		},
		"1162": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useAllRoleMembers"
		},
		"1163": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"1164": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"1165": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useRoleMembers"
		},
		"1166": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useRoleMembers"
		},
		"1167": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"1168": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"1169": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "role"
		},
		"1170": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useIsAddressRole"
		},
		"1171": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useIsAddressRole"
		},
		"1172": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"1173": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"1174": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "role"
		},
		"1175": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "walletAddress"
		},
		"1176": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useSetAllRoleMembers"
		},
		"1177": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useSetAllRoleMembers"
		},
		"1178": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"1179": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"1180": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useGrantRole"
		},
		"1181": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useGrantRole"
		},
		"1182": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"1183": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"1184": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useRevokeRole"
		},
		"1185": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "useRevokeRole"
		},
		"1186": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"1187": {
			"sourceFileName": "../react-core/src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"1192": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenSupply"
		},
		"1193": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenSupply"
		},
		"1194": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"1195": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenBalance"
		},
		"1196": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenBalance"
		},
		"1197": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"1198": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "walletAddress"
		},
		"1199": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenDecimals"
		},
		"1200": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenDecimals"
		},
		"1201": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"1202": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useMintToken"
		},
		"1203": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useMintToken"
		},
		"1204": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"1205": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1206": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.receipt"
		},
		"1207": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.data"
		},
		"1208": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1209": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1210": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useClaimToken"
		},
		"1211": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useClaimToken"
		},
		"1212": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"1213": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1214": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.receipt"
		},
		"1215": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.data"
		},
		"1216": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1217": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1218": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTransferToken"
		},
		"1219": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTransferToken"
		},
		"1220": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"1221": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1222": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.receipt"
		},
		"1223": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.data"
		},
		"1224": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1225": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1226": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTransferBatchToken"
		},
		"1227": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useTransferBatchToken"
		},
		"1228": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"1229": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1230": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.receipt"
		},
		"1231": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.data"
		},
		"1232": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1233": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1234": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useBurnToken"
		},
		"1235": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "useBurnToken"
		},
		"1236": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"1237": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1238": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.receipt"
		},
		"1239": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.data"
		},
		"1240": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1241": {
			"sourceFileName": "../react-core/src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"1242": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useIsAccountDeployed"
		},
		"1243": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useIsAccountDeployed"
		},
		"1244": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "contract"
		},
		"1245": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "admin"
		},
		"1246": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "extraData"
		},
		"1247": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useAccounts"
		},
		"1248": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useAccounts"
		},
		"1249": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "contract"
		},
		"1250": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useCreateAccount"
		},
		"1251": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useCreateAccount"
		},
		"1252": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "contract"
		},
		"1253": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useAccountsForAddress"
		},
		"1254": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useAccountsForAddress"
		},
		"1255": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "contract"
		},
		"1256": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "address"
		},
		"1257": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountSigners"
		},
		"1258": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountSigners"
		},
		"1259": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "contract"
		},
		"1260": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useAddAdmin"
		},
		"1261": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useAddAdmin"
		},
		"1262": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useRemoveAdmin"
		},
		"1263": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useRemoveAdmin"
		},
		"1264": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useCreateSessionKey"
		},
		"1265": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useCreateSessionKey"
		},
		"1266": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useRevokeSessionKey"
		},
		"1267": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useRevokeSessionKey"
		},
		"1268": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountAdmins"
		},
		"1269": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountAdmins"
		},
		"1270": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "contract"
		},
		"1271": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountAdminsAndSigners"
		},
		"1272": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountAdminsAndSigners"
		},
		"1273": {
			"sourceFileName": "../react-core/src/evm/hooks/async/account.ts",
			"qualifiedName": "contract"
		},
		"1274": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "useLogin"
		},
		"1275": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "useLogin"
		},
		"1276": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__type"
		},
		"1277": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__type.login"
		},
		"1278": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__type"
		},
		"1279": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__type"
		},
		"1280": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__type.isLoading"
		},
		"1281": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "useLogout"
		},
		"1282": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "useLogout"
		},
		"1283": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "__type"
		},
		"1284": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "__type.logout"
		},
		"1285": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "__type.isLoading"
		},
		"1286": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "useUser"
		},
		"1287": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "useUser"
		},
		"1288": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "TData"
		},
		"1289": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "TContext"
		},
		"1290": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "__type"
		},
		"1291": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "__type.user"
		},
		"1292": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "__type.isLoggedIn"
		},
		"1293": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "__type.isLoading"
		},
		"1294": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/index.ts",
			"qualifiedName": "useAuth"
		},
		"1295": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/index.ts",
			"qualifiedName": "useAuth"
		},
		"1296": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "useSwitchAccount"
		},
		"1297": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "useSwitchAccount"
		},
		"1298": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "__type"
		},
		"1299": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "__type.switchAccount"
		},
		"1300": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "__type.isLoading"
		},
		"1301": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "UserWithData"
		},
		"1302": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "UserWithData.data"
		},
		"1303": {
			"sourceFileName": "../auth/src/core/schema/common.ts",
			"qualifiedName": "__type.address"
		},
		"1304": {
			"sourceFileName": "../auth/src/core/schema/common.ts",
			"qualifiedName": "__type.session"
		},
		"1305": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "UserWithData.TData"
		},
		"1306": {
			"sourceFileName": "../react-core/src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "UserWithData.TContext"
		},
		"1307": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useEditionDrop.ts",
			"qualifiedName": "useEditionDrop"
		},
		"1308": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useEditionDrop.ts",
			"qualifiedName": "useEditionDrop"
		},
		"1309": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useEditionDrop.ts",
			"qualifiedName": "contractAddress"
		},
		"1310": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useEdition.ts",
			"qualifiedName": "useEdition"
		},
		"1311": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useEdition.ts",
			"qualifiedName": "useEdition"
		},
		"1312": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useEdition.ts",
			"qualifiedName": "contractAddress"
		},
		"1313": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useNFTDrop.ts",
			"qualifiedName": "useNFTDrop"
		},
		"1314": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useNFTDrop.ts",
			"qualifiedName": "useNFTDrop"
		},
		"1315": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useNFTDrop.ts",
			"qualifiedName": "contractAddress"
		},
		"1316": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useMarketplace.ts",
			"qualifiedName": "useMarketplace"
		},
		"1317": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useMarketplace.ts",
			"qualifiedName": "useMarketplace"
		},
		"1318": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useMarketplace.ts",
			"qualifiedName": "contractAddress"
		},
		"1319": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useNFTCollection.ts",
			"qualifiedName": "useNFTCollection"
		},
		"1320": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useNFTCollection.ts",
			"qualifiedName": "useNFTCollection"
		},
		"1321": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useNFTCollection.ts",
			"qualifiedName": "contractAddress"
		},
		"1322": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/usePack.ts",
			"qualifiedName": "usePack"
		},
		"1323": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/usePack.ts",
			"qualifiedName": "usePack"
		},
		"1324": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/usePack.ts",
			"qualifiedName": "contractAddress"
		},
		"1325": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useToken.ts",
			"qualifiedName": "useToken"
		},
		"1326": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useToken.ts",
			"qualifiedName": "useToken"
		},
		"1327": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useToken.ts",
			"qualifiedName": "contractAddress"
		},
		"1328": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useTokenDrop.ts",
			"qualifiedName": "useTokenDrop"
		},
		"1329": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useTokenDrop.ts",
			"qualifiedName": "useTokenDrop"
		},
		"1330": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useTokenDrop.ts",
			"qualifiedName": "contractAddress"
		},
		"1331": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useVote.ts",
			"qualifiedName": "useVote"
		},
		"1332": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useVote.ts",
			"qualifiedName": "useVote"
		},
		"1333": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useVote.ts",
			"qualifiedName": "contractAddress"
		},
		"1334": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useSplit.ts",
			"qualifiedName": "useSplit"
		},
		"1335": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useSplit.ts",
			"qualifiedName": "useSplit"
		},
		"1336": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useSplit.ts",
			"qualifiedName": "contractAddress"
		},
		"1337": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useMultiwrap.ts",
			"qualifiedName": "useMultiwrap"
		},
		"1338": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useMultiwrap.ts",
			"qualifiedName": "useMultiwrap"
		},
		"1339": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useMultiwrap.ts",
			"qualifiedName": "contractAddress"
		},
		"1340": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useSignatureDrop.ts",
			"qualifiedName": "useSignatureDrop"
		},
		"1341": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useSignatureDrop.ts",
			"qualifiedName": "useSignatureDrop"
		},
		"1342": {
			"sourceFileName": "../react-core/src/evm/hooks/contracts/useSignatureDrop.ts",
			"qualifiedName": "contractAddress"
		},
		"1343": {
			"sourceFileName": "../react-core/src/evm/hooks/storage/useStorageUpload.ts",
			"qualifiedName": "useStorageUpload"
		},
		"1344": {
			"sourceFileName": "../react-core/src/evm/hooks/storage/useStorageUpload.ts",
			"qualifiedName": "useStorageUpload"
		},
		"1345": {
			"sourceFileName": "../react-core/src/evm/hooks/storage/useStorageUpload.ts",
			"qualifiedName": "T"
		},
		"1346": {
			"sourceFileName": "../react-core/src/evm/hooks/storage/useStorageUpload.ts",
			"qualifiedName": "uploadOptions"
		},
		"1347": {
			"sourceFileName": "../react-core/src/evm/hooks/storage/index.ts",
			"qualifiedName": "useStorage"
		},
		"1348": {
			"sourceFileName": "../react-core/src/evm/hooks/storage/index.ts",
			"qualifiedName": "useStorage"
		},
		"1349": {
			"sourceFileName": "../react-core/src/evm/hooks/useNetworkMismatch.ts",
			"qualifiedName": "useNetworkMismatch"
		},
		"1350": {
			"sourceFileName": "../react-core/src/evm/hooks/useNetworkMismatch.ts",
			"qualifiedName": "useNetworkMismatch"
		},
		"1359": {
			"sourceFileName": "../react-core/src/evm/hooks/useSupportedChains.ts",
			"qualifiedName": "useSupportedChains"
		},
		"1360": {
			"sourceFileName": "../react-core/src/evm/hooks/useSupportedChains.ts",
			"qualifiedName": "useSupportedChains"
		},
		"1361": {
			"sourceFileName": "../react-core/src/evm/hooks/useSupportedWallet.ts",
			"qualifiedName": "useSupportedWallet"
		},
		"1362": {
			"sourceFileName": "../react-core/src/evm/hooks/useSupportedWallet.ts",
			"qualifiedName": "useSupportedWallet"
		},
		"1363": {
			"sourceFileName": "../react-core/src/evm/hooks/useSupportedWallet.ts",
			"qualifiedName": "id"
		},
		"1364": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "useAppURI"
		},
		"1365": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "useAppURI"
		},
		"1366": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "TContract"
		},
		"1367": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "contract"
		},
		"1368": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "useSetAppURI"
		},
		"1369": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "useSetAppURI"
		},
		"1370": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "contract"
		},
		"1371": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "__type"
		},
		"1372": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "__type.receipt"
		},
		"1373": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "__type.data"
		},
		"1374": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "__type"
		},
		"1375": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "__type"
		},
		"1376": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "__type"
		},
		"1377": {
			"sourceFileName": "../react-core/src/evm/hooks/async/app.ts",
			"qualifiedName": "__type.uri"
		},
		"1378": {
			"sourceFileName": "../react-core/src/evm/hooks/useENS.ts",
			"qualifiedName": "useENS"
		},
		"1379": {
			"sourceFileName": "../react-core/src/evm/hooks/useENS.ts",
			"qualifiedName": "useENS"
		},
		"1380": {
			"sourceFileName": "../react-core/src/evm/providers/thirdweb-sdk-provider.tsx",
			"qualifiedName": "ThirdwebSDKProvider"
		},
		"1381": {
			"sourceFileName": "../react-core/src/evm/providers/thirdweb-sdk-provider.tsx",
			"qualifiedName": "ThirdwebSDKProvider"
		},
		"1382": {
			"sourceFileName": "../react-core/src/evm/providers/thirdweb-sdk-provider.tsx",
			"qualifiedName": "TChains"
		},
		"1383": {
			"sourceFileName": "../react-core/src/evm/providers/thirdweb-sdk-provider.tsx",
			"qualifiedName": "__0"
		},
		"1384": {
			"sourceFileName": "../react-core/src/evm/hooks/useSDK.ts",
			"qualifiedName": "useSDK"
		},
		"1385": {
			"sourceFileName": "../react-core/src/evm/hooks/useSDK.ts",
			"qualifiedName": "useSDK"
		},
		"1388": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps"
		},
		"1389": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.supportedChains"
		},
		"1390": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.signer"
		},
		"1391": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.sdkOptions"
		},
		"1392": {
			"sourceFileName": "../sdk/src/evm/schema/sdk-options.ts",
			"qualifiedName": "__type"
		},
		"1393": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.storageInterface"
		},
		"1394": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.authConfig"
		},
		"1395": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.activeChain"
		},
		"1396": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"1397": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"1398": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.clientId"
		},
		"1399": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.secretKey"
		},
		"1400": {
			"sourceFileName": "../react-core/src/core/providers/query-client.tsx",
			"qualifiedName": "QueryClientProviderProps.queryClient"
		},
		"1401": {
			"sourceFileName": "../react-core/src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.TChains"
		},
		"1407": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "Chain"
		},
		"1408": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1409": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.id"
		},
		"1410": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.name"
		},
		"1411": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.nativeCurrency"
		},
		"1412": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.rpcUrls"
		},
		"1413": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.blockExplorers"
		},
		"1414": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1415": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.name"
		},
		"1416": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.url"
		},
		"1417": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.testnet"
		},
		"1418": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "WalletAddress"
		},
		"1419": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "TokenParams"
		},
		"1420": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1421": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1422": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1423": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "TokenBurnParams"
		},
		"1424": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1425": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1426": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "NFTContract"
		},
		"1427": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "TokenContract"
		},
		"1428": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "Erc721OrErc1155"
		},
		"1429": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "TransferNFTParams"
		},
		"1430": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1431": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1432": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1433": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1434": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "AirdropNFTParams"
		},
		"1435": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1436": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1437": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.addresses"
		},
		"1438": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "MintNFTSupplyParams"
		},
		"1439": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1440": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1441": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.additionalSupply"
		},
		"1442": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1443": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "MintNFTParams"
		},
		"1444": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1445": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.metadata"
		},
		"1446": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1447": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.supply"
		},
		"1448": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "MintNFTReturnType"
		},
		"1449": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "TContract"
		},
		"1450": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "BurnNFTParams"
		},
		"1451": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1452": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1453": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1454": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "DropContract"
		},
		"1455": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "RevealableContract"
		},
		"1456": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "DelayedRevealLazyMintInput"
		},
		"1457": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1458": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.placeholder"
		},
		"1459": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.metadatas"
		},
		"1460": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.password"
		},
		"1461": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "RevealLazyMintInput"
		},
		"1462": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1463": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.batchId"
		},
		"1464": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.password"
		},
		"1465": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "ClaimNFTParams"
		},
		"1466": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1467": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1468": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.quantity"
		},
		"1469": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.options"
		},
		"1470": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1471": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "ClaimNFTReturnType"
		},
		"1472": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "MakeBidParams"
		},
		"1473": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1474": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.listingId"
		},
		"1475": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.bid"
		},
		"1476": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "MakeOfferParams"
		},
		"1477": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1478": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.listingId"
		},
		"1479": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.pricePerToken"
		},
		"1480": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.quantity"
		},
		"1481": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "AcceptDirectOffer"
		},
		"1482": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1483": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.listingId"
		},
		"1484": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.addressOfOfferor"
		},
		"1485": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "ExecuteAuctionSale"
		},
		"1486": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1487": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.listingId"
		},
		"1488": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "BuyNowParams"
		},
		"1489": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1490": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.id"
		},
		"1491": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.type"
		},
		"1492": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.buyAmount"
		},
		"1493": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.buyForWallet"
		},
		"1494": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1495": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.id"
		},
		"1496": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.type"
		},
		"1497": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "TListingType"
		},
		"1498": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "ClaimTokenParams"
		},
		"1499": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1500": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1501": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1502": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.checkERC20Allowance"
		},
		"1503": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "getErcs"
		},
		"1504": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "getErcs"
		},
		"1505": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "contract"
		},
		"1506": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1507": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.erc1155"
		},
		"1508": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.erc721"
		},
		"1509": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "__type.erc20"
		},
		"1510": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "getErc1155"
		},
		"1511": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "getErc1155"
		},
		"1512": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "contract"
		},
		"1513": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "getErc721"
		},
		"1514": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "getErc721"
		},
		"1515": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "contract"
		},
		"1516": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "getErc20"
		},
		"1517": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "getErc20"
		},
		"1518": {
			"sourceFileName": "../react-core/src/evm/types.ts",
			"qualifiedName": "contract"
		},
		"1519": {
			"sourceFileName": "../react-core/src/evm/hooks/useTransactions.ts",
			"qualifiedName": "useWatchTransactions"
		},
		"1520": {
			"sourceFileName": "../react-core/src/evm/hooks/useTransactions.ts",
			"qualifiedName": "useWatchTransactions"
		},
		"1521": {
			"sourceFileName": "../react-core/src/evm/hooks/useTransactions.ts",
			"qualifiedName": "watchTransactionParams"
		},
		"1522": {
			"sourceFileName": "../react-core/src/evm/hooks/useTransactions.ts",
			"qualifiedName": "UseWatchTransactionsParams"
		},
		"1523": {
			"sourceFileName": "../react-core/src/evm/hooks/useTransactions.ts",
			"qualifiedName": "__type"
		},
		"1524": {
			"sourceFileName": "../react-core/src/evm/hooks/useTransactions.ts",
			"qualifiedName": "__type.limit"
		}
	}
}